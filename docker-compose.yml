version: '3.8'

name: volunteerx
services:
  gateway:
    image: gateway
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev
    depends_on:
      - rabbitmq
      - neo4j
      - users
      - ping
      - activity
    env_file:
      - ./apps/gateway/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    ports:
      - '3500:3500'
    expose:
      - 3500
    networks:
      - volunteerx
    environment:
      - WATCHPACK_POLLING=true
    restart: on-failure

  neo4j:
    image: neo4j-service
    build:
      context: .
      dockerfile: ./apps/neo4j/Dockerfile
      target: development
    command: npm run start:dev neo4j
    env_file:
      - ./apps/neo4j/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    depends_on:
      - rabbitmq
    ports:
      - 7687:7687
    expose:
      - 7687
    environment:
      - WATCHPACK_POLLING=true
    restart: always

  users:
    image: users
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
      target: development
    command: npm run start:dev users
    env_file:
      - ./apps/users/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    depends_on:
      - rabbitmq
      - neo4j
    ports:
      - '3510:3510'
    expose:
      - '3510'
    networks:
      - volunteerx
    environment:
      - WATCHPACK_POLLING=true
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3510/health']
      interval: 10s
      timeout: 30s
      retries: 5
    restart: always

  ping:
    image: ping
    build:
      context: .
      dockerfile: ./apps/ping/Dockerfile
      target: development
    command: npm run start:dev ping
    env_file:
      - ./apps/ping/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    ports:
      - '3520:3520'
    expose:
      - 3520
    depends_on:
      - users
      - neo4j
      - rabbitmq
    networks:
      - volunteerx
    environment:
      - WATCHPACK_POLLING=true
    restart: always

  activity:
    image: activity
    build:
      context: .
      dockerfile: ./apps/activity/Dockerfile
      target: development
    command: npm run start:dev activity
    env_file:
      - ./apps/activity/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    ports:
      - '3530:3530'
    expose:
      - 3530
    depends_on:
      - rabbitmq
      - ping
      - users
    environment:
      - WATCHPACK_POLLING=true
    restart: always

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq/
    env_file:
      - ./.env

networks:
  volunteerx:
    driver: bridge
