version: '3.8'

name: volunteerx
services:
  gateway:
    image: gateway
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev
    depends_on:
      ping:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./apps/gateway/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    ports:
      - '3500:3500'
    expose:
      - 3500
    networks:
      - volunteerx
    environment:
      - WATCHPACK_POLLING=true
    restart: on-failure

  user:
    image: user
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
      target: development
    command: npm run start:dev users
    env_file:
      - ./apps/users/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    depends_on:
      neo4j:
        condition: service_healthy
    ports:
      - '3510:3510'
    expose:
      - 3510
    networks:
      - volunteerx
      - rabbitmq
    environment:
      - WATCHPACK_POLLING=true
    healthcheck:
      test:
        ['CMD-SHELL', 'wget --spider -q http://localhost:3510/health || exit 1']
      interval: 10s
      timeout: 30s
      start_period: 30s
      retries: 10
    restart: always

  ping:
    image: ping
    build:
      context: .
      dockerfile: ./apps/ping/Dockerfile
      target: development
    command: npm run start:dev ping
    env_file:
      - ./apps/ping/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    ports:
      - '3520:3520'
    expose:
      - 3520
    depends_on:
      user:
        condition: service_healthy
    networks:
      - volunteerx
      - rabbitmq
    environment:
      - WATCHPACK_POLLING=true
    healthcheck:
      test:
        ['CMD-SHELL', 'wget --spider -q http://localhost:3520/health || exit 1']
      interval: 10s
      timeout: 30s
      start_period: 30s
      retries: 10
    restart: always

  # broadcast:
  #   image: broadcast-service
  #   build:
  #     context: .
  #     dockerfile: ./apps/broadcast-service/Dockerfile
  #     target: development
  #   command: npm run start:dev broadcast-service
  #   env_file:
  #     - ./apps/broadcast-service/.env
  #   volumes:
  #     - .:/usr/src/volunteerx
  #     - /usr/src/volunteerx/node_modules
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     neo4j:
  #       condition: service_healthy
  #   ports:
  #     - '1305:1305'
  #   expose:
  #     - 1305
  #   networks:
  #     - volunteerx
  #     - rabbitmq
  #   environment:
  #     - WATCHPACK_POLLING=true
  #   restart: always

  # file-flow-engine:
  #   image: file-flow-engine
  #   build:
  #     context: .
  #     dockerfile: ./apps/file-flow-engine/Dockerfile
  #     target: development
  #   command: npm run start:dev file-flow-engine
  #   env_file:
  #     - ./apps/file-flow-engine/.env
  #   volumes:
  #     - .:/usr/src/volunteerx
  #     - /usr/src/volunteerx/node_modules
  #   ports:
  #     - '3550:3550'
  #   expose:
  #     - 3550
  #   networks:
  #     - volunteerx
  #   environment:
  #     - WATCHPACK_POLLING=true
  #   restart: always

  # forum:
  #   image: forum
  #   build:
  #     context: .
  #     dockerfile: ./apps/forum/Dockerfile
  #     target: development
  #   command: npm run start:dev forum
  #   env_file:
  #     - ./apps/forum/.env
  #   volumes:
  #     - .:/usr/src/volunteerx
  #     - /usr/src/volunteerx/node_modules
  #   ports:
  #     - '5050:5050'
  #   expose:
  #     - 5050
  #   depends_on:
  #     ping:
  #       condition: service_healthy
  #   networks:
  #     - volunteerx
  #     - rabbitmq
  #   environment:
  #     - WATCHPACK_POLLING=true
  #   healthcheck:
  #     test:
  #       ['CMD-SHELL', 'wget --spider -q http://localhost:3520/health || exit 1']
  #     interval: 10s
  #     timeout: 30s
  #     start_period: 30s
  #     retries: 10
  #   restart: always

  neo4j:
    image: neo4j-service
    build:
      context: .
      dockerfile: ./apps/neo4j/Dockerfile
      target: development
    command: npm run start:dev neo4j
    env_file:
      - ./apps/neo4j/.env
    volumes:
      - .:/usr/src/volunteerx
      - /usr/src/volunteerx/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - volunteerx
      - rabbitmq
    ports:
      - 7687:7687
    expose:
      - 7687
    environment:
      - WATCHPACK_POLLING=true
    healthcheck:
      test:
        ['CMD-SHELL', 'wget --spider -q http://localhost:7687/health || exit 1']
      interval: 10s
      timeout: 30s
      start_period: 30s
      retries: 10
    restart: always

  rabbitmq:
    image: rabbitmq:3.12.13-management-alpine
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq/
    env_file:
      - ./.env
    networks:
      - rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      start_period: 30s
      retries: 10
    restart: always

networks:
  volunteerx:
    driver: bridge
  rabbitmq:
    driver: bridge
