#import "../../../../../libs/common/src/graphql/error.gql"

scalar ObjectID

"Represents a channel in the forum."
type Channel @key(fields: "id") {
  "The unique identifier for the channel."
  id: ObjectID!

  "The ID of the activity associated with the channel."
  activityID: ObjectID!

  "The ping associated with the channel."
  ping: Ping!

  "The title of the channel."
  title: String!

  "The admin of the channel."
  admin: User!

  "The participants of the channel."
  participants: [User!]!
}

extend type Ping @key(fields: "id") {
  id: ObjectID! @external
}

extend type User @key(fields: "id") {
  id: ObjectID! @external
}

"Represents a channel payload containing a channel or an error."
union ChannelPayload =
  | Channel
  | NotFoundError
  | UnknownError
  | UnauthorizedError
  | InternalServerError

type Query {
  "Retrieves a channel by its unique identifier."
  channel(id: ObjectID!): ChannelPayload

  "Retrieves the channels associated with the specified admin."
  adminChannels(admin: ObjectID!): [ChannelPayload!]!

  "Retrieves the channels associated with the specified user."
  userChannels(user: ObjectID!): [ChannelPayload!]!
}
