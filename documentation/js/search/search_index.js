var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AWSService.html",[0,0.802,1,2.836]],["body/injectables/AWSService.html",[0,1.066,1,3.772,2,1.424,3,0.105,4,0.105,5,0.094,6,4.892,7,4.892,8,6.578,9,3.671,10,0.265,11,1.186,12,7.928,13,0.93,14,2.238,15,5.767,16,5.767,17,1.145,18,3.092,19,4.184,20,0.777,21,5.767,22,1.509,23,0.01,24,0.844,25,0.734,26,1.096,27,5.767,28,1.08,29,4.174,30,0.904,31,2.349,32,5.767,33,4.174,34,3.145,35,0.245,36,5.767,37,5.767,38,4.272,39,3.671,40,3.671,41,4.174,42,3.671,43,3.34,44,3.671,45,0.517,46,1.813,47,4.174,48,4.174,49,3.671,50,0.105,51,0.014,52,2.168,53,1.176,54,4.174,55,2.457,56,4.174,57,4.174,58,4.174,59,4.174,60,4.174,61,4.174,62,4.174,63,3.772,64,5.767,65,2.505,66,4.174,67,2.108,68,4.174,69,4.174,70,4.174,71,7.127,72,6.608,73,5.767,74,4.174,75,4.174,76,2.086,77,4.174,78,4.174,79,5.072,80,1.913,81,5.767,82,5.767,83,4.174,84,1.038,85,4.174,86,4.174,87,4.174,88,0.007,89,0.007]],["title/controllers/ActivityController.html",[90,1.522,91,3.213]],["body/controllers/ActivityController.html",[3,0.137,4,0.137,5,0.124,10,0.347,13,1.112,14,2.185,17,1.501,20,0.597,22,1.249,23,0.01,24,0.699,25,0.484,26,0.907,28,0.995,30,0.858,31,2.228,35,0.26,45,0.678,50,0.137,51,0.019,53,1.943,67,1.541,84,0.984,88,0.008,89,0.008,90,2.42,91,5.108,92,2.096,93,4.811,94,6.064,95,5.47,96,3.774,97,5.186,98,2.376,99,6.895,100,5.47,101,3.446,102,4.939,103,4.811,104,4.074,105,3.793,106,1.975,107,2.456,108,5.517,109,3.923,110,2.3,111,2.106,112,4.811,113,5.517,114,5.47,115,4.811,116,4.052]],["title/modules/ActivityModule.html",[117,1.129,118,3.213]],["body/modules/ActivityModule.html",[3,0.132,4,0.132,5,0.119,23,0.01,35,0.276,45,0.653,46,2.29,50,0.132,51,0.018,88,0.008,89,0.008,91,5.499,92,2.58,102,5.407,103,4.636,110,2.216,117,1.932,118,6.415,119,2.082,120,2.367,121,2.539,122,2.539,123,2.367,124,3.024,125,2.216,126,4.636,127,4.636,128,4.636,129,4.294,130,5.407,131,3.244,132,2.539,133,2.367,134,5.272,135,2.925,136,3.27,137,4.406,138,5.272,139,3.905,140,3.448,141,3.448,142,2.216,143,3.448,144,5.272,145,3.656,146,3.656,147,4.218,148,4.671,149,5.272,150,5.272,151,4.218]],["title/injectables/ActivityRepository.html",[0,0.802,130,2.836]],["body/injectables/ActivityRepository.html",[0,1.37,2,2.097,3,0.154,4,0.154,5,0.139,10,0.39,13,1.195,14,2.302,20,0.671,23,0.01,30,0.964,35,0.243,45,0.762,50,0.154,51,0.021,80,2.039,88,0.008,89,0.008,130,4.848,152,5.408,153,4.009,154,5.894,155,6.361,156,6.15,157,6.15,158,4.265,159,2.158,160,4.556]],["title/injectables/ActivityService.html",[0,0.802,102,2.836]],["body/injectables/ActivityService.html",[0,1.222,2,1.746,3,0.129,4,0.129,5,0.116,10,0.325,11,1.359,13,1.066,14,2.119,17,1.405,20,0.799,22,1.51,23,0.01,24,0.936,25,0.647,26,1.096,30,0.803,31,2.086,35,0.24,45,0.635,50,0.129,51,0.018,52,2.66,53,2.18,55,2.459,65,2.224,67,1.443,80,1.698,84,0.922,88,0.008,89,0.008,101,2.559,102,4.324,108,6.191,110,2.153,111,2.236,130,5.061,139,3.794,158,3.551,161,4.504,162,3.867,163,6.611,164,4.097,165,5.121,166,4.585,167,6.611,168,5.121,169,1.55,170,2.3,171,2.3,172,6.611,173,5.121,174,5.121,175,5.121,176,3.794,177,3.349,178,2.086,179,4.097,180,4.504,181,2.3,182,4.504,183,4.504,184,1.482,185,5.121,186,4.504,187,4.504,188,5.121,189,4.097,190,5.121]],["title/modules/AppModule.html",[117,1.129,191,3.213]],["body/modules/AppModule.html",[3,0.116,4,0.116,5,0.104,23,0.01,24,0.79,35,0.275,43,3.698,45,0.573,46,2.007,50,0.116,51,0.016,55,2.298,65,3.463,84,0.832,88,0.007,89,0.007,96,2.31,110,1.943,117,1.813,119,1.825,120,2.076,121,2.226,122,2.226,123,2.076,124,2.836,125,1.943,131,2.977,132,2.226,133,2.076,135,2.684,136,2.867,140,3.023,141,3.023,142,2.928,143,3.023,162,2.31,169,1.084,191,6.129,192,4.065,193,4.065,194,4.065,195,4.501,196,5.529,197,4.622,198,4.622,199,3.424,200,2.401,201,6.181,202,4.622,203,3.205,204,6.181,205,6.181,206,4.065,207,6.181,208,4.579,209,3.424,210,2.867,211,3.424,212,2.5,213,3.424,214,3.424,215,2.076,216,3.424,217,4.065,218,4.622,219,4.622,220,4.622,221,3.698,222,4.622,223,4.622,224,4.622,225,4.622,226,3.023,227,4.622,228,4.622,229,4.622,230,4.622,231,4.622,232,4.622,233,4.065]],["title/injectables/AppService.html",[0,0.802,196,3.007]],["body/injectables/AppService.html",[0,1.399,2,2.172,3,0.16,4,0.16,5,0.144,10,0.404,13,1.22,20,0.695,23,0.01,28,0.997,30,0.999,35,0.209,45,0.789,50,0.16,51,0.022,84,1.146,88,0.009,89,0.009,196,5.249,234,5.601,235,6.19,236,6.368,237,4.718,238,4.416]],["title/classes/AuthEntity.html",[51,0.015,239,3.007]],["body/classes/AuthEntity.html",[3,0.087,4,0.087,5,0.078,10,0.22,11,1.039,13,0.815,17,1.387,20,0.882,22,1.154,23,0.01,24,1.071,25,0.729,26,1.087,28,1.17,30,0.792,35,0.114,50,0.087,51,0.012,55,1.289,84,0.624,88,0.006,89,0.006,101,2.526,169,1.706,177,2.267,181,2.269,184,2.228,239,4.546,240,1.149,241,2.773,242,5.765,243,1.381,244,4.444,245,4.444,246,4.444,247,3.136,248,3.04,249,2.949,250,1.822,251,2.057,252,3.136,253,2.863,254,3.523,255,4.444,256,3.048,257,6.129,258,2.591,259,5.053,260,4.287,261,3.465,262,3.465,263,3.465,264,3.465,265,3.465,266,3.465,267,3.465,268,3.465,269,4.444,270,3.465,271,4.287,272,3.504,273,5.765,274,0.926,275,2.403,276,3.305,277,2.058,278,2.058,279,2.058,280,1.502,281,3.048,282,3.048,283,3.048,284,3.048,285,3.048,286,3.048,287,3.048,288,3.048,289,3.048,290,2.567,291,2.403,292,2.403,293,2.567,294,2.567,295,2.567,296,2.567,297,2.567,298,2.567,299,2.403,300,2.567,301,3.048,302,3.048,303,2.567]],["title/modules/AuthModule.html",[117,1.129,195,2.448]],["body/modules/AuthModule.html",[3,0.124,4,0.124,5,0.112,23,0.01,35,0.276,45,0.614,46,2.153,50,0.124,51,0.017,88,0.007,89,0.007,117,1.876,119,1.958,120,2.226,121,2.388,122,2.388,123,2.226,124,2.936,125,3.031,131,3.118,132,2.388,133,2.226,135,2.811,136,3.075,137,4.234,140,3.242,141,3.242,142,2.722,143,3.242,145,3.438,146,3.438,148,4.489,195,4.931,215,2.226,233,4.36,304,4.36,305,4.36,306,4.36,307,4.36,308,5.186,309,5.389,310,5.319,311,5.639,312,4.957,313,6.473,314,3.438,315,4.957,316,3.438,317,4.957,318,4.957,319,4.957,320,4.36,321,4.957,322,4.957,323,4.957,324,3.966,325,4.36,326,3.438]],["title/injectables/AuthService.html",[0,0.802,310,2.836]],["body/injectables/AuthService.html",[0,1.205,2,1.709,3,0.126,4,0.126,5,0.113,10,0.318,13,1.051,14,2.097,17,1.789,20,0.711,22,1.489,23,0.01,24,0.926,25,0.443,26,1.081,28,0.954,30,0.786,35,0.238,45,0.621,50,0.126,51,0.017,53,1.412,55,1.863,67,1.412,80,1.662,84,1.173,88,0.007,89,0.007,111,1.53,184,1.45,239,3.475,243,0.951,247,2.041,248,1.979,249,3.048,250,1.144,251,1.339,252,2.041,253,1.863,272,2.413,277,2.041,278,2.041,279,2.041,291,3.475,292,3.475,293,3.712,294,3.712,295,3.712,296,3.712,297,3.712,298,3.712,299,3.475,300,3.712,303,3.712,310,4.264,316,3.475,327,4.407,328,6.519,329,4.407,330,5.01,331,5.733,332,6.519,333,5.01,334,1.742,335,3.712,336,3.108,337,4.407,338,4.407,339,4.407,340,4.407,341,4.407,342,5.01]],["title/interfaces/BaseError.html",[343,0.68,344,1.883]],["body/interfaces/BaseError.html",[3,0.096,4,0.096,5,0.086,10,0.242,11,1.113,23,0.01,24,0.692,25,0.698,28,1.142,35,0.125,50,0.218,51,0.029,88,0.006,89,0.006,159,2.637,169,0.894,184,1.103,243,1.468,247,1.553,248,2.137,249,2.41,250,1.437,251,1.681,252,2.563,253,2.34,274,2.008,277,2.563,278,2.563,279,2.563,280,1.133,334,2.008,343,0.598,344,3.43,345,1.46,346,1.656,347,3.03,348,1.846,349,2.35,350,1.653,351,1.745,352,1.745,353,0.992,354,1.019,355,2.204,356,2.733,357,2.837,358,1.681,359,1.681,360,1.656,361,2.204,362,3.671,363,1.164,364,2.43,365,1.772,366,1.656,367,1.103,368,1.656,369,2.137,370,2.073,371,1.656,372,2.204,373,2.204,374,1.229,375,1.772,376,1.712,377,1.772,378,1.196,379,2.093,380,1.196,381,1.103]],["title/controllers/BroadcastController.html",[90,1.522,382,3.213]],["body/controllers/BroadcastController.html",[3,0.127,4,0.127,5,0.114,10,0.32,13,1.056,14,2.364,17,1.384,20,0.714,22,1.152,23,0.01,24,0.645,25,0.446,26,0.836,28,1.05,30,1.027,31,2.054,35,0.252,45,0.625,50,0.127,51,0.017,53,1.845,67,1.845,80,1.672,84,0.908,88,0.007,89,0.007,90,2.297,92,1.932,96,3.633,97,5.031,98,2.843,101,3.272,104,3.867,105,3.497,106,2.364,107,2.265,109,3.776,110,2.12,111,1.999,115,4.435,116,3.736,226,4.754,250,1.495,382,4.85,383,4.509,384,4.435,385,7.268,386,6.052,387,5.043,388,6.546,389,5.043,390,6.546,391,5.043,392,3.736,393,4.754,394,4.435,395,3.497,396,5.043,397,5.043]],["title/modules/BroadcastModule.html",[117,1.129,398,3.213]],["body/modules/BroadcastModule.html",[3,0.109,4,0.109,5,0.098,19,3.654,23,0.01,24,0.556,35,0.271,45,0.54,46,1.891,50,0.109,51,0.015,88,0.007,89,0.007,92,2.274,110,1.831,117,1.758,119,1.719,120,1.955,121,2.097,122,2.097,123,1.955,124,2.751,125,1.831,129,4.239,131,2.859,132,2.097,133,1.955,135,2.934,136,3.682,137,3.883,140,2.848,141,2.848,142,1.831,143,2.848,145,3.019,146,3.019,147,3.484,148,5.433,151,3.484,253,1.619,382,5.004,383,3.682,393,5.124,394,3.829,398,6.388,399,3.829,400,3.829,401,3.829,402,4.966,403,5.124,404,4.354,405,4.354,406,3.507,407,3.883,408,3.829,409,3.829,410,5.936,411,4.354,412,3.226,413,4.354,414,4.354,415,4.354,416,3.226,417,4.354,418,3.829,419,3.829,420,3.829,421,3.829,422,3.829,423,3.829,424,3.829,425,4.354,426,3.829,427,1.891,428,2.355,429,2.848,430,3.829,431,3.829,432,3.484,433,3.829,434,3.829,435,3.829,436,3.829,437,3.829,438,3.829,439,3.226,440,3.829]],["title/injectables/BroadcastService.html",[0,0.802,393,2.836]],["body/injectables/BroadcastService.html",[0,1.053,2,1.399,3,0.103,4,0.103,5,0.093,10,0.26,13,0.919,14,2.226,17,1.563,20,0.714,22,1.301,23,0.01,24,0.728,25,0.625,26,0.944,28,1.013,30,0.893,31,1.67,35,0.244,45,0.508,50,0.103,51,0.014,53,1.155,67,1.605,80,1.889,84,1.178,88,0.006,89,0.006,101,3.535,107,1.841,110,1.724,111,1.999,169,1.658,226,5.031,243,1.082,250,1.495,251,1.096,347,2.63,360,1.781,383,4.387,386,5.24,393,3.726,395,2.844,406,2.423,407,2.682,409,3.607,427,1.781,441,3.607,442,5.01,443,4.101,444,4.387,445,5.237,446,5.845,447,6.546,448,4.101,449,3.95,450,5.697,451,4.101,452,4.101,453,2.544,454,4.558,455,4.558,456,2.544,457,3.281,458,3.607,459,3.281,460,3.281,461,1.975,462,3.607,463,3.607,464,4.558,465,5.01,466,3.281,467,7.073,468,4.101,469,4.101,470,4.101,471,2.544,472,4.101,473,4.101,474,4.101,475,5.697,476,5.697,477,4.101,478,4.101,479,4.101,480,4.101,481,4.101,482,3.607,483,4.101,484,2.218,485,6.546,486,4.101,487,4.101,488,4.101,489,4.101,490,4.101]],["title/controllers/ChannelController.html",[90,1.522,491,3.213]],["body/controllers/ChannelController.html",[3,0.133,4,0.133,5,0.12,10,0.336,13,1.089,14,2.267,17,1.453,20,0.578,22,1.209,23,0.01,24,0.677,25,0.468,26,0.878,30,0.83,31,2.157,35,0.265,45,0.656,50,0.133,51,0.018,53,1.903,67,1.492,80,2.24,84,1.216,88,0.008,89,0.008,90,2.37,92,2.029,96,2.647,97,4.418,98,2.3,104,3.991,105,3.672,106,1.912,107,2.378,109,3.864,110,2.226,111,2.063,272,3.254,491,5.004,492,4.657,493,5.941,494,4.657,495,6.309,496,6.755,497,5.296,498,5.296,499,4.657,500,4.865,501,4.657,502,4.237,503,5.296,504,5.296,505,6.755,506,5.296]],["title/classes/ChannelGateway.html",[51,0.015,507,3.213]],["body/classes/ChannelGateway.html",[3,0.104,4,0.104,5,0.093,10,0.262,11,1.177,13,0.923,17,1.133,20,0.862,22,1.62,23,0.01,24,0.907,25,0.681,26,1.176,28,0.866,30,1.03,35,0.244,45,0.512,50,0.104,51,0.014,52,2.145,53,2.227,55,2.638,67,1.164,88,0.007,89,0.007,98,2.486,111,2.354,159,2.009,162,3.546,170,2.571,171,2.571,213,5.856,240,1.37,347,2.771,507,4.241,508,3.632,509,6.57,510,6.57,511,6.57,512,5.725,513,5.725,514,5.725,515,4.13,516,4.782,517,5.725,518,6.239,519,4.13,520,5.725,521,6.57,522,4.13,523,5.725,524,4.13,525,5.778,526,5.725,527,7.094,528,4.076,529,4.13,530,5.035,531,4.13,532,5.725,533,4.13,534,4.13,535,4.13,536,5.725,537,3.632,538,3.304,539,3.304,540,4.13,541,3.632,542,4.13,543,4.13,544,4.13,545,4.13,546,4.13,547,4.13,548,4.13,549,4.13,550,5.725,551,4.13,552,4.13,553,4.13,554,3.632,555,4.13,556,4.13,557,4.13,558,4.13,559,4.13,560,4.13,561,4.13,562,4.13,563,4.13]],["title/modules/ChannelModule.html",[117,1.129,564,3.213]],["body/modules/ChannelModule.html",[3,0.118,4,0.118,5,0.106,23,0.01,35,0.284,45,0.583,50,0.118,51,0.016,88,0.007,89,0.007,92,2.397,117,1.829,119,1.859,120,2.113,121,2.267,122,2.267,123,2.113,124,2.862,125,1.979,131,3.013,132,2.267,133,2.113,135,2.717,195,4.525,199,3.487,200,2.445,203,3.264,208,4.634,209,3.487,210,2.919,211,3.487,212,2.546,214,3.487,215,2.113,216,3.487,274,1.258,353,1.225,354,1.258,491,5.206,500,5.242,501,4.139,507,4.634,516,4.972,541,4.139,564,6.456,565,4.139,566,4.139,567,4.706,568,5.558,569,4.735,570,4.706,571,4.706,572,4.634,573,4.706,574,4.706,575,3.766,576,4.706,577,5.005,578,3.766,579,5.005,580,3.766,581,4.706,582,3.766]],["title/classes/ChannelResolver.html",[51,0.015,572,3.213]],["body/classes/ChannelResolver.html",[3,0.157,4,0.157,5,0.141,10,0.396,13,1.207,14,2.318,20,0.682,23,0.01,30,0.98,31,2.545,35,0.205,50,0.157,51,0.021,84,1.124,88,0.009,89,0.009,98,2.714,200,3.246,237,4.629,238,4.333,240,2.072,572,5.544,583,5.496,584,8.303,585,7.483,586,6.249,587,3.876,588,4.333,589,6.249]],["title/injectables/ChannelService.html",[0,0.802,500,2.836]],["body/injectables/ChannelService.html",[0,1.21,2,1.72,3,0.127,4,0.127,5,0.114,10,0.32,11,1.346,13,1.056,14,2.103,17,1.384,20,0.793,22,1.495,23,0.01,24,0.837,25,0.579,26,1.085,30,0.791,31,2.054,35,0.238,45,0.625,50,0.127,51,0.017,52,2.62,53,2.168,67,1.421,80,1.672,84,1.178,88,0.007,89,0.007,101,2.521,111,2.22,113,4.035,142,2.12,164,4.035,166,4.54,170,2.265,171,2.265,215,2.265,272,3.153,347,2.434,484,2.728,493,5.757,494,5.757,495,6.161,500,4.282,502,4.035,569,4.545,575,4.035,590,4.435,591,7.268,592,5.043,593,5.043,594,6.546,595,5.043,596,3.299,597,5.043,598,5.043,599,3.299,600,5.043,601,2.429,602,5.043,603,2.429,604,5.043,605,5.757,606,4.85,607,3.128,608,3.736]],["title/interfaces/CreatePingInput.html",[343,0.68,609,2.016]],["body/interfaces/CreatePingInput.html",[3,0.087,4,0.087,5,0.079,10,0.22,11,1.041,23,0.01,25,0.746,26,1.207,28,1.105,34,2.129,35,0.114,50,0.214,65,3.265,76,1.737,88,0.006,89,0.006,106,1.255,169,1.636,178,3.138,181,3.27,184,1.006,243,1.134,250,1.157,251,2.009,258,2.441,274,2.207,280,1.033,334,2.059,343,1.295,345,1.332,348,1.727,350,1.546,351,1.633,352,1.633,353,0.905,354,0.929,357,2.88,358,2.207,359,2.207,363,1.061,367,1.465,374,1.121,378,1.091,379,2.019,380,1.091,381,1.006,461,3.621,601,3.508,603,1.674,609,2.777,610,1.737,611,2.631,612,2.354,613,2.877,614,1.737,615,2.354,616,2.877,617,1.806,618,1.88,619,1.88,620,1.806,621,2.531,622,1.616,623,1.806,624,2.531,625,2.439,626,1.806,627,2.531,628,1.737,629,1.737,630,1.88,631,1.674,632,2.354,633,1.737,634,1.806,635,1.806,636,1.737,637,1.737]],["title/classes/CreateUserInput.html",[51,0.015,355,1.766]],["body/classes/CreateUserInput.html",[3,0.086,4,0.086,5,0.077,10,0.216,11,1.028,20,0.867,23,0.01,24,0.639,25,0.748,26,1.271,28,1.139,35,0.112,50,0.215,51,0.028,88,0.006,89,0.006,159,2.54,169,0.8,184,0.988,240,1.132,243,1.42,247,1.391,248,1.974,249,2.654,250,1.35,251,1.851,252,2.822,253,2.576,274,1.934,277,2.822,278,2.822,279,2.822,280,1.015,334,1.934,343,0.535,344,3.247,346,1.483,347,2.78,348,1.705,349,2.171,350,1.527,351,1.612,352,1.612,353,0.889,354,0.913,355,2.409,356,2.827,357,2.833,358,1.851,359,1.851,360,2.568,361,2.036,362,3.563,363,1.043,364,2.245,365,1.587,366,1.483,367,0.988,368,1.483,369,1.974,370,1.915,371,1.483,372,2.036,373,2.036,374,1.101,375,1.587,376,1.533,377,1.587,378,1.072,379,2.005,380,1.072,381,0.988,638,3.415,639,3.415,640,3.415,641,3.415,642,3.415,643,3.415,644,3.415,645,3.415,646,3.415,647,3.415]],["title/controllers/DeletionServiceController.html",[90,1.522,648,3.213]],["body/controllers/DeletionServiceController.html",[3,0.153,4,0.153,5,0.138,10,0.387,13,1.19,20,0.665,23,0.01,28,0.972,30,0.957,35,0.242,45,0.756,50,0.153,51,0.021,52,3.169,53,1.719,84,1.098,88,0.008,89,0.008,90,2.588,92,2.337,98,2.65,235,6.102,648,5.465,649,5.115,650,5.465,651,5.366,652,6.101,653,5.186,654,5.366,655,5.366,656,6.101]],["title/modules/DeletionServiceModule.html",[117,1.129,657,3.213]],["body/modules/DeletionServiceModule.html",[3,0.144,4,0.144,5,0.129,23,0.01,35,0.264,45,0.71,50,0.144,51,0.02,88,0.008,89,0.008,92,2.718,110,2.407,117,2.007,119,2.261,120,2.571,121,2.758,122,2.758,123,2.571,124,3.14,125,2.407,129,4.385,131,3.417,132,2.758,133,2.571,135,3.082,648,5.712,649,3.971,650,4.242,653,5.521,654,6.24,655,5.036,657,6.405,658,5.036,659,5.036,660,5.726,661,5.726,662,5.726]],["title/injectables/DeletionServiceService.html",[0,0.802,653,2.836]],["body/injectables/DeletionServiceService.html",[0,1.39,2,2.148,3,0.158,4,0.158,5,0.142,10,0.399,13,1.213,20,0.687,23,0.01,28,0.991,30,0.988,35,0.207,45,0.781,50,0.158,51,0.022,84,1.134,88,0.009,89,0.009,235,6.168,237,4.667,238,4.369,649,5.215,650,5.571,653,4.918,663,5.54,664,6.299]],["title/controllers/FileFlowEngineController.html",[90,1.522,665,3.213]],["body/controllers/FileFlowEngineController.html",[1,4.541,3,0.115,4,0.115,5,0.139,6,4.541,7,5.318,10,0.291,13,0.993,14,2.303,17,1.261,20,0.671,22,1.406,23,0.01,24,0.787,25,0.759,26,1.021,28,1.102,30,0.965,31,2.508,34,3.118,35,0.243,38,3.404,45,0.569,50,0.115,51,0.016,53,1.956,55,1.709,67,1.735,79,5.414,80,2.042,84,1.108,88,0.007,89,0.007,90,1.612,92,1.76,98,2.674,111,2.12,162,3.077,314,3.186,392,3.404,587,2.85,665,4.561,666,5.143,667,4.041,668,3.186,669,4.595,670,6.156,671,6.943,672,4.595,673,4.595,674,6.156,675,4.595,676,4.595,677,4.595,678,4.595,679,4.595,680,4.541,681,4.041,682,4.041,683,4.041,684,4.595,685,4.595,686,4.595,687,6.156,688,6.156,689,6.156,690,4.595,691,6.156,692,4.595,693,4.595,694,4.595,695,4.595,696,6.156,697,4.595]],["title/modules/FileFlowEngineModule.html",[117,1.129,698,3.213]],["body/modules/FileFlowEngineModule.html",[1,5.365,3,0.129,4,0.129,5,0.165,6,4.324,7,5.239,23,0.01,35,0.274,38,3.794,45,0.635,46,2.224,50,0.129,51,0.018,88,0.008,89,0.008,92,2.533,117,1.906,119,2.022,120,2.3,121,2.466,122,2.466,123,2.3,124,2.982,125,2.153,131,3.184,132,2.466,133,2.3,135,2.871,136,3.177,137,4.324,140,3.349,141,3.349,142,2.153,143,3.349,145,3.551,146,3.551,148,5.366,195,4.631,210,3.177,665,5.424,666,3.794,680,5.365,681,4.504,682,4.504,698,6.384,699,4.504,700,5.121,701,4.504,702,5.121,703,5.121,704,5.121,705,5.121,706,5.121,707,5.121,708,5.121]],["title/injectables/FileFlowEngineService.html",[0,0.802,680,2.836]],["body/injectables/FileFlowEngineService.html",[0,1.381,2,2.125,3,0.156,4,0.156,5,0.141,6,4.887,7,5.426,10,0.395,13,1.205,20,0.68,23,0.01,28,0.984,30,0.977,35,0.204,45,0.772,50,0.156,51,0.021,84,1.121,88,0.008,89,0.008,235,6.146,237,4.617,238,4.322,666,5.535,680,4.887,709,5.481,710,6.232]],["title/interfaces/FirebaseAdmin.html",[343,0.68,444,2.69]],["body/interfaces/FirebaseAdmin.html",[3,0.14,4,0.14,5,0.126,10,0.354,11,1.437,23,0.01,25,0.752,28,0.736,35,0.229,45,0.693,50,0.201,88,0.008,89,0.008,334,1.868,343,1.096,345,2.141,412,4.14,427,2.427,428,3.023,444,4.335,449,4.847,528,3.466,599,3.655,711,4.14,712,6.393,713,6.393,714,6.707,715,6.707,716,4.14,717,5.288,718,4.915,719,4.471,720,3.875,721,4.915,722,4.14,723,3.875,724,4.14,725,4.14]],["title/classes/FirebaseConstants.html",[51,0.015,726,3.213]],["body/classes/FirebaseConstants.html",[3,0.151,4,0.151,5,0.136,10,0.382,11,1.505,20,0.798,23,0.01,25,0.647,28,0.964,50,0.151,51,0.021,53,2.408,88,0.008,89,0.008,170,3.286,171,3.286,240,1.997,254,5.048,402,4.787,726,5.422,727,5.296,728,7.884,729,8.404,730,6.022,731,6.022,732,6.436]],["title/modules/FirebaseModule.html",[117,1.129,402,2.836]],["body/modules/FirebaseModule.html",[3,0.101,4,0.101,5,0.091,13,0.649,14,1.164,20,0.765,22,1.602,23,0.01,24,0.896,25,0.62,26,1.163,30,1.1,35,0.23,45,0.499,50,0.101,51,0.014,67,1.826,80,1.334,84,1.376,88,0.006,89,0.006,111,2.142,117,1.826,119,1.589,124,2.29,125,2.363,135,1.747,254,4.73,334,1.075,402,4.588,427,3.046,428,3.505,444,2.495,717,5.118,720,3.898,722,6.104,723,2.79,726,2.98,732,4.943,733,4.023,734,3.898,735,2.98,736,4.023,737,4.002,738,5.714,739,5.621,740,4.023,741,4.023,742,3.538,743,5.621,744,4.023,745,5.118,746,4.943,747,4.023,748,4.023,749,5.621,750,4.497,751,4.023,752,4.023,753,3.219,754,4.023,755,5.118,756,5.621,757,3.219,758,5.621,759,6.479,760,6.479,761,5.621,762,4.023,763,3.538,764,5.184,765,3.219,766,5.621,767,5.612,768,4.497,769,4.023,770,4.023]],["title/interfaces/FirebaseModuleOptionsFactory.html",[343,0.68,720,3.007]],["body/interfaces/FirebaseModuleOptionsFactory.html",[3,0.142,4,0.142,5,0.128,10,0.358,13,1.134,20,0.615,23,0.01,25,0.729,28,0.743,30,0.885,35,0.231,45,0.699,50,0.201,88,0.008,89,0.008,334,2.047,343,1.103,345,2.162,412,4.18,427,2.451,428,3.052,444,3.5,449,4.876,528,3.5,599,3.691,711,4.18,712,4.515,713,4.515,714,4.962,715,4.962,716,4.18,717,5.56,718,4.962,719,4.515,720,4.876,721,7.051,722,4.18,723,3.913,724,4.18,725,4.18,771,5.642]],["title/classes/ForbiddenError.html",[51,0.015,371,1.883]],["body/classes/ForbiddenError.html",[3,0.095,4,0.095,5,0.086,10,0.241,11,1.11,20,0.414,23,0.01,24,0.69,25,0.698,28,1.137,35,0.125,50,0.218,51,0.029,88,0.006,89,0.006,159,2.709,169,0.891,184,1.099,240,1.26,243,1.466,247,1.548,248,2.132,249,2.406,250,1.434,251,1.678,252,2.558,253,2.336,274,2.006,277,2.558,278,2.558,279,2.558,280,1.129,334,2.006,343,0.596,344,3.427,346,1.65,347,2.985,348,1.841,349,2.345,350,1.649,351,1.741,352,1.741,353,0.989,354,1.015,355,2.199,356,2.728,357,2.836,358,1.678,359,1.678,360,1.65,361,2.199,362,3.668,363,1.16,364,2.425,365,1.766,366,1.65,367,1.099,368,1.65,369,2.132,370,2.068,371,2.345,372,2.199,373,2.199,374,1.225,375,1.766,376,1.706,377,1.766,378,1.192,379,2.091,380,1.192,381,1.099,772,3.799]],["title/interfaces/Forum.html",[343,0.68,773,3.213]],["body/interfaces/Forum.html",[3,0.136,4,0.136,5,0.123,10,0.344,11,1.412,23,0.01,25,0.748,28,0.992,35,0.178,50,0.199,88,0.008,89,0.008,113,6.328,243,1.606,250,1.863,274,2.308,334,1.835,343,1.18,345,2.081,350,2.096,353,1.414,354,1.452,357,2.214,363,1.659,379,1.572,380,1.704,381,1.572,599,5.173,601,3.809,603,3.809,773,5.576,774,4.346,775,5.432,776,5.432]],["title/injectables/ForumRepository.html",[0,0.802,569,2.562]],["body/injectables/ForumRepository.html",[0,1.368,2,2.092,3,0.154,4,0.154,5,0.139,10,0.389,13,1.193,14,2.3,20,0.669,23,0.01,30,0.962,35,0.243,45,0.76,50,0.154,51,0.021,80,2.034,88,0.008,89,0.008,153,4.003,154,4.544,155,6.357,159,2.152,160,4.544,569,4.372,773,4.544,777,5.394,778,7.947,779,6.133,780,3.805]],["title/interfaces/GetParticipantsResponse.html",[343,0.68,627,2.167]],["body/interfaces/GetParticipantsResponse.html",[3,0.094,4,0.094,5,0.084,10,0.237,11,1.096,23,0.01,25,0.717,26,0.884,28,1.081,34,2.241,35,0.122,50,0.216,65,2.946,76,1.865,88,0.006,89,0.006,106,1.348,169,1.682,178,2.923,181,2.793,184,1.08,243,1.181,250,1.218,251,1.813,258,2.775,274,2.193,280,1.109,334,2.099,343,1.311,345,1.43,348,1.818,350,1.628,351,1.719,352,1.719,353,0.972,354,0.997,357,2.881,358,2.099,359,2.099,363,1.14,367,1.543,374,1.204,378,1.171,379,2.076,380,1.171,381,1.08,461,3.268,601,2.995,603,1.798,609,2.478,610,1.865,611,2.769,612,2.478,613,2.995,614,1.865,615,2.478,616,2.995,617,1.939,618,2.019,619,2.019,620,1.939,621,2.664,622,1.735,623,1.939,624,2.664,625,3.456,626,1.939,627,3.108,628,3.391,629,1.865,630,2.019,631,1.798,632,2.478,633,1.865,634,1.939,635,1.939,636,1.865,637,1.865]],["title/injectables/GqlAuthGuard.html",[0,0.802,309,2.69]],["body/injectables/GqlAuthGuard.html",[0,1.147,2,1.586,3,0.187,4,0.117,5,0.105,10,0.295,11,1.276,13,1.001,14,2.021,20,0.813,22,1.702,23,0.01,24,0.893,25,0.659,26,1.158,30,1.095,35,0.244,45,0.576,50,0.117,51,0.016,55,2.597,67,1.749,80,1.542,84,1.341,88,0.007,89,0.007,96,3.881,104,2.747,111,2.133,153,3.357,162,3.725,170,2.088,171,2.088,200,2.416,243,1.474,260,3.041,272,2.989,309,3.849,314,3.225,334,1.658,367,1.346,370,2.377,683,6.143,781,4.09,782,6.206,783,6.206,784,6.985,785,6.206,786,6.277,787,4.65,788,6.206,789,4.65,790,4.65,791,6.985,792,4.65,793,6.212,794,5.588,795,6.206,796,4.65,797,4.65,798,4.65,799,4.09,800,4.65,801,4.65,802,4.65]],["title/controllers/HealthController.html",[90,1.522,803,2.346]],["body/controllers/HealthController.html",[3,0.136,4,0.136,5,0.122,10,0.343,13,1.105,14,1.568,17,1.487,19,4.067,20,0.591,23,0.01,30,0.85,35,0.259,45,0.672,46,2.354,50,0.136,51,0.019,53,2.226,84,0.975,88,0.008,89,0.008,90,1.901,92,2.076,98,2.354,107,2.433,111,2.413,142,2.278,383,4.252,466,4.336,668,3.758,737,2.708,803,3.708,804,4.766,805,5.078,806,5.854,807,4.015,808,5.419,809,4.754,810,5.078,811,5.078,812,5.485,813,6.029,814,3.544,815,4.015,816,4.336,817,4.336,818,4.015,819,4.766,820,3.758,821,3.758,822,4.336,823,3.758,824,5.419,825,4.766,826,4.766]],["title/controllers/HealthController-1.html",[90,1.27,803,1.959,827,2.897]],["body/controllers/HealthController-1.html",[3,0.137,4,0.137,5,0.123,10,0.345,13,1.109,14,1.575,17,1.494,19,4.076,20,0.594,23,0.01,30,0.854,35,0.26,45,0.675,46,2.365,50,0.137,51,0.019,53,2.23,84,0.98,88,0.008,89,0.008,90,1.91,92,2.086,98,2.365,107,2.445,111,2.417,142,2.289,668,3.776,737,2.721,803,3.719,805,5.093,806,5.864,807,4.033,809,4.768,810,5.093,811,5.093,812,5.501,813,6.047,814,3.561,815,4.033,816,4.356,817,4.356,818,4.033,819,4.788,820,3.776,821,3.776,822,4.356,823,3.776,825,4.788,826,4.788,828,4.788,829,5.444,830,2.945,831,5.444]],["title/controllers/HealthController-2.html",[90,1.27,803,1.959,832,3.621]],["body/controllers/HealthController-2.html",[3,0.146,4,0.146,5,0.131,10,0.368,13,1.155,17,1.595,20,0.634,23,0.01,30,0.911,35,0.255,45,0.72,50,0.146,51,0.02,53,2.018,84,1.046,88,0.008,89,0.008,90,2.039,92,2.226,98,2.524,111,2.37,271,3.801,316,4.03,336,4.442,668,4.03,803,3.874,805,5.305,806,6.001,807,4.305,810,5.305,811,5.305,814,3.801,815,4.305,818,4.305,833,5.111,834,5.812,835,6.298,836,5.111,837,5.111,838,5.111]],["title/controllers/HealthController-3.html",[90,1.27,803,1.959,839,3.184]],["body/controllers/HealthController-3.html",[3,0.144,4,0.144,5,0.13,10,0.364,13,1.146,17,1.575,20,0.626,23,0.01,30,0.9,35,0.253,45,0.711,50,0.144,51,0.02,53,2.175,84,1.033,88,0.008,89,0.008,90,2.014,92,2.199,98,2.493,111,2.463,139,4.252,271,3.754,668,3.981,803,3.844,805,5.264,806,5.975,807,4.252,810,5.264,811,5.264,812,5.686,814,3.754,815,4.252,816,4.593,818,4.252,835,6.25,836,5.048,837,5.048,838,5.048,840,5.048,841,5.74,842,4.408]],["title/modules/HealthModule.html",[117,1.129,403,2.836]],["body/modules/HealthModule.html",[3,0.157,4,0.157,5,0.141,23,0.01,35,0.272,45,0.774,50,0.157,51,0.021,88,0.009,89,0.009,92,2.867,117,1.948,119,2.468,124,2.545,135,2.714,383,3.876,403,4.895,803,4.333,814,4.087,843,6.249,844,7.483,845,6.249,846,7.483,847,5.496]],["title/classes/IMutation.html",[51,0.015,374,1.399]],["body/classes/IMutation.html",[3,0.088,4,0.088,5,0.079,10,0.222,13,0.822,20,0.655,22,1.371,23,0.01,24,0.895,25,0.707,26,0.996,28,1.119,30,0.942,35,0.115,50,0.216,51,0.028,88,0.006,89,0.006,106,1.841,159,2.563,169,0.822,184,1.015,240,1.163,243,1.495,247,1.429,248,2.013,249,2.301,250,1.505,251,1.605,252,2.446,253,2.233,274,2.064,277,2.446,278,2.446,279,2.446,280,1.043,334,2.104,343,0.55,344,3.274,346,1.523,347,2.804,348,1.739,349,2.214,350,1.557,351,1.644,352,1.644,353,0.913,354,0.937,355,2.685,356,2.608,357,2.821,358,1.605,359,1.605,360,1.523,361,2.685,362,3.875,363,1.071,364,2.289,365,1.63,366,1.523,367,1.015,368,1.523,369,2.013,370,1.953,371,1.523,372,2.076,373,2.076,374,1.644,375,2.369,376,2.289,377,2.369,378,1.101,379,2.026,380,1.101,381,1.015,848,4.078,849,5.097,850,4.483,851,3.507,852,3.507,853,3.507]],["title/classes/IQuery.html",[51,0.015,363,1.324]],["body/classes/IQuery.html",[3,0.089,4,0.089,5,0.08,10,0.225,13,0.829,20,0.659,22,1.174,23,0.01,24,0.847,25,0.698,26,0.853,28,1.132,30,0.948,35,0.116,50,0.217,51,0.028,88,0.006,89,0.006,159,2.574,169,0.832,184,1.027,240,1.177,243,1.543,247,1.446,248,2.031,249,2.316,250,1.514,251,1.616,252,2.463,253,2.465,274,2.071,277,2.463,278,2.463,279,2.463,280,1.055,334,2.111,343,0.557,344,3.286,346,1.542,347,2.814,348,1.754,349,2.233,350,1.57,351,1.659,352,1.659,353,0.924,354,0.949,355,2.095,356,2.626,357,2.817,358,1.616,359,1.616,360,1.542,361,2.095,362,3.883,363,1.57,364,2.715,365,2.39,366,2.233,367,1.488,368,1.542,369,2.031,370,1.97,371,1.542,372,2.095,373,2.095,374,1.145,375,1.65,376,1.594,377,1.65,378,1.114,379,2.036,380,1.114,381,1.027,854,4.115,855,5.142,856,3.55,857,3.55,858,3.55]],["title/interfaces/IQuery-1.html",[343,0.568,363,1.106,827,2.897]],["body/interfaces/IQuery-1.html",[3,0.083,4,0.083,5,0.074,10,0.208,13,0.784,20,0.697,22,1.46,23,0.01,24,0.817,25,0.715,26,1.06,28,1.053,30,1.002,34,2.045,35,0.108,50,0.212,65,2.776,76,1.644,88,0.006,89,0.006,106,1.756,169,1.674,176,2.437,178,3.009,181,2.598,184,0.952,243,1.099,250,1.321,251,1.908,258,2.821,260,4.671,274,2.221,280,0.978,334,2.162,343,1.281,345,1.26,348,1.659,350,1.485,351,1.569,352,1.569,353,0.856,354,0.879,357,2.89,358,2.027,359,2.027,363,1.485,367,1.407,374,1.061,378,1.032,379,1.974,380,1.032,381,0.952,461,3.079,601,2.787,603,1.584,609,2.26,610,1.644,611,2.526,612,2.26,613,2.787,614,1.644,615,2.971,616,2.787,617,1.709,618,1.779,619,1.779,620,1.709,621,2.431,622,1.529,623,1.709,624,2.892,625,2.342,626,1.709,627,2.892,628,1.644,629,2.431,630,2.631,631,2.342,632,3.434,633,2.431,634,1.709,635,1.709,636,1.644,637,1.644,859,3.891,860,3.891,861,3.891,862,3.181,863,3.289,864,3.289,865,3.289,866,3.289]],["title/classes/InternalServerError.html",[51,0.015,372,1.766]],["body/classes/InternalServerError.html",[3,0.095,4,0.095,5,0.086,10,0.241,11,1.11,20,0.414,23,0.01,24,0.69,25,0.698,28,1.137,35,0.125,50,0.218,51,0.029,88,0.006,89,0.006,159,2.709,169,0.891,184,1.099,240,1.26,243,1.466,247,1.548,248,2.132,249,2.406,250,1.434,251,1.678,252,2.558,253,2.336,274,2.006,277,2.558,278,2.558,279,2.558,280,1.129,334,2.006,343,0.596,344,3.427,346,1.65,347,2.985,348,1.841,349,2.345,350,1.649,351,1.741,352,1.741,353,0.989,354,1.015,355,2.199,356,2.728,357,2.836,358,1.678,359,1.678,360,1.65,361,2.199,362,3.668,363,1.16,364,2.425,365,1.766,366,1.65,367,1.099,368,1.65,369,2.132,370,2.068,371,1.65,372,2.558,373,2.199,374,1.225,375,1.766,376,1.706,377,1.766,378,1.192,379,2.091,380,1.192,381,1.099,867,3.799]],["title/classes/InvalidInputError.html",[51,0.015,368,1.883]],["body/classes/InvalidInputError.html",[3,0.095,4,0.095,5,0.086,10,0.241,11,1.11,20,0.414,23,0.01,24,0.69,25,0.698,28,1.137,35,0.125,50,0.218,51,0.029,88,0.006,89,0.006,159,2.709,169,0.891,184,1.099,240,1.26,243,1.466,247,1.548,248,2.132,249,2.406,250,1.434,251,1.678,252,2.558,253,2.336,274,2.006,277,2.558,278,2.558,279,2.558,280,1.129,334,2.006,343,0.596,344,3.427,346,1.65,347,2.985,348,1.841,349,2.345,350,1.649,351,1.741,352,1.741,353,0.989,354,1.015,355,2.199,356,2.728,357,2.836,358,1.678,359,1.678,360,1.65,361,2.199,362,3.668,363,1.16,364,2.425,365,1.766,366,1.65,367,1.099,368,2.345,369,2.132,370,2.068,371,1.65,372,2.199,373,2.199,374,1.225,375,1.766,376,1.706,377,1.766,378,1.192,379,2.091,380,1.192,381,1.099,868,3.799]],["title/interfaces/JsonObject.html",[343,0.68,869,3.213]],["body/interfaces/JsonObject.html",[3,0.135,4,0.135,5,0.122,20,0.587,23,0.01,25,0.476,28,1.125,34,2.869,50,0.188,88,0.008,89,0.008,153,2.911,221,4.306,258,2.787,343,1.07,345,2.062,367,1.557,464,6.649,606,3.987,869,6.025,870,5.056,871,3.987,872,5.381,873,6.306,874,5.381,875,3.732,876,4.306,877,4.733,878,4.733,879,4.306,880,4.733,881,4.733,882,4.306,883,4.733,884,4.733,885,6.002,886,6.002,887,6.002,888,6.002,889,4.733,890,4.733,891,4.306,892,4.733,893,6.002,894,4.733,895,5.46,896,4.733]],["title/interfaces/JwtPayload.html",[343,0.68,875,3.007]],["body/interfaces/JwtPayload.html",[3,0.113,4,0.113,5,0.102,10,0.285,11,1.248,23,0.01,25,0.727,26,1.436,28,1.156,34,1.891,50,0.172,88,0.007,89,0.007,153,3.282,221,4.855,258,3.007,343,0.952,345,1.723,367,1.301,464,6.849,606,4.495,869,5.447,870,3.332,871,3.332,873,5.495,875,4.208,876,4.855,877,5.337,878,6.466,879,4.855,880,5.337,881,6.466,882,4.855,883,5.337,884,6.466,885,6.466,886,6.466,887,6.466,888,6.466,889,6.466,890,5.337,891,4.855,892,6.466,893,6.466,894,6.466,895,6.329,896,5.337]],["title/injectables/JwtStrategy.html",[0,0.802,311,3.007]],["body/injectables/JwtStrategy.html",[0,1.077,2,1.444,3,0.167,4,0.106,5,0.096,10,0.268,13,0.939,14,1.927,17,1.598,18,3.137,19,4.203,20,0.635,22,1.33,23,0.01,24,0.744,25,0.515,26,0.966,30,0.664,34,1.781,35,0.266,45,0.525,46,1.839,50,0.106,51,0.015,53,1.641,55,1.575,67,1.876,80,1.404,84,1.198,88,0.007,89,0.007,106,2.104,111,1.779,142,2.449,153,3.151,239,2.937,243,1.428,249,2.747,310,5.206,311,4.04,314,2.937,320,3.725,324,5.327,334,1.557,337,3.725,484,3.602,794,4.661,839,3.725,875,4.973,876,3.389,882,3.389,895,3.389,897,3.725,898,5.825,899,5.825,900,4.235,901,5.825,902,4.235,903,4.235,904,4.235,905,4.235,906,3.389,907,5.825,908,4.235,909,4.235,910,4.235,911,5.825,912,3.725,913,3.725,914,3.725,915,4.235,916,4.235,917,4.235,918,4.235,919,4.235,920,4.235,921,4.235,922,3.725,923,4.235,924,4.235,925,4.235,926,2.937,927,4.235,928,4.235,929,4.235,930,4.235,931,4.235,932,4.235,933,4.235,934,4.235,935,4.235,936,4.235,937,4.235,938,5.825,939,5.825,940,4.235,941,4.235,942,4.235,943,4.235,944,4.235,945,3.137,946,4.235,947,4.235,948,4.235,949,3.725,950,4.235,951,3.389,952,3.725,953,4.235,954,4.235,955,4.235]],["title/interfaces/Media.html",[343,0.68,613,2.089]],["body/interfaces/Media.html",[3,0.094,4,0.094,5,0.085,10,0.237,11,1.099,23,0.01,25,0.74,28,1.117,34,3.02,35,0.123,50,0.216,65,2.951,76,1.871,88,0.006,89,0.006,106,1.352,169,1.684,178,2.926,181,2.798,184,1.084,243,1.183,250,1.22,251,1.816,258,2.526,274,2.195,280,1.113,334,2.101,343,1.312,345,1.434,348,1.822,350,1.632,351,1.723,352,1.723,353,0.975,354,1.001,357,2.874,358,2.101,359,2.101,363,1.143,367,1.546,374,1.208,378,1.175,379,2.079,380,1.175,381,1.084,461,3.272,601,3.001,603,1.803,609,2.484,610,1.871,611,2.776,612,2.484,613,3.272,614,1.871,615,2.484,616,3.001,617,1.945,618,2.025,619,2.025,620,1.945,621,2.671,622,1.74,623,1.945,624,2.671,625,2.574,626,1.945,627,2.671,628,1.871,629,1.871,630,2.025,631,1.803,632,2.484,633,1.871,634,1.945,635,1.945,636,1.871,637,1.871]],["title/interfaces/MediaInput.html",[343,0.68,614,2.167]],["body/interfaces/MediaInput.html",[3,0.094,4,0.094,5,0.085,10,0.237,11,1.099,23,0.01,25,0.74,28,1.117,34,3.02,35,0.123,50,0.216,65,2.951,76,1.871,88,0.006,89,0.006,106,1.352,169,1.684,178,2.926,181,2.798,184,1.084,243,1.183,250,1.22,251,1.816,258,2.526,274,2.195,280,1.113,334,2.101,343,1.312,345,1.434,348,1.822,350,1.632,351,1.723,352,1.723,353,0.975,354,1.001,357,2.874,358,2.101,359,2.101,363,1.143,367,1.546,374,1.208,378,1.175,379,2.079,380,1.175,381,1.084,461,3.272,601,3.001,603,1.803,609,2.484,610,1.871,611,2.776,612,2.484,613,3.001,614,2.671,615,2.484,616,3.001,617,1.945,618,2.025,619,2.025,620,1.945,621,2.671,622,1.74,623,1.945,624,2.671,625,2.574,626,1.945,627,2.671,628,1.871,629,1.871,630,2.025,631,1.803,632,2.484,633,1.871,634,1.945,635,1.945,636,1.871,637,1.871]],["title/modules/MessageModule.html",[117,1.129,568,3.007]],["body/modules/MessageModule.html",[3,0.143,4,0.143,5,0.129,23,0.01,35,0.264,45,0.708,50,0.143,51,0.02,88,0.008,89,0.008,117,2.005,119,2.256,120,2.565,121,2.751,122,2.751,123,2.565,124,3.137,125,3.238,131,3.412,132,2.751,133,2.565,516,5.495,568,6.042,569,4.984,575,4.57,956,5.023,957,5.023,958,5.712,959,5.712,960,5.248,961,5.712,962,5.712]],["title/classes/MessageResolver.html",[51,0.015,960,3.213]],["body/classes/MessageResolver.html",[3,0.169,4,0.169,5,0.152,23,0.01,35,0.22,50,0.169,51,0.023,88,0.009,89,0.009,200,3.49,240,2.228,588,5.416,960,5.786,963,5.908]],["title/injectables/MessageService.html",[0,0.802,516,2.69]],["body/injectables/MessageService.html",[0,1.058,2,1.409,3,0.104,4,0.104,5,0.093,10,0.262,13,0.923,14,2.368,17,1.133,20,0.774,22,1.62,23,0.01,24,0.907,25,0.627,26,1.176,28,1.078,30,1.03,31,2.676,35,0.216,45,0.512,50,0.104,51,0.014,52,2.145,53,1.164,67,1.164,80,2.179,84,1.387,88,0.007,89,0.007,101,2.064,142,2.407,178,1.682,215,2.95,250,1.62,258,2.443,347,3.08,484,3.554,502,3.304,516,3.551,539,5.676,569,4.555,596,4.297,605,6.553,607,4.076,608,4.867,622,3.463,964,3.632,965,5.725,966,5.725,967,5.725,968,4.13,969,4.13,970,5.725,971,4.13,972,5.725,973,4.13,974,5.725,975,6.239,976,4.13,977,6.57,978,4.13,979,6.57,980,4.13,981,3.632,982,3.632,983,3.632,984,3.632,985,4.13,986,4.13,987,4.13,988,4.13,989,4.13,990,5.035,991,4.13,992,5.725]],["title/classes/Name.html",[24,0.554,51,0.015]],["body/classes/Name.html",[3,0.093,4,0.093,5,0.084,10,0.235,11,1.092,20,0.676,23,0.01,24,0.793,25,0.716,26,0.881,28,1.138,35,0.122,50,0.218,51,0.029,88,0.006,89,0.006,159,2.614,169,0.871,184,1.075,240,1.232,243,1.457,247,1.513,248,2.098,249,2.376,250,1.417,251,1.658,252,2.526,253,2.306,274,1.991,277,2.917,278,2.917,279,2.917,280,1.104,334,1.991,343,0.582,344,3.331,346,1.613,347,2.852,348,1.812,349,2.307,350,1.622,351,1.714,352,1.714,353,0.967,354,0.993,355,2.164,356,2.694,357,2.837,358,1.658,359,1.658,360,1.613,361,2.164,362,3.646,363,1.134,364,2.386,365,1.726,366,1.613,367,1.075,368,1.613,369,2.098,370,2.035,371,1.613,372,2.164,373,2.164,374,1.198,375,1.726,376,1.668,377,1.726,378,1.166,379,2.072,380,1.166,381,1.075,993,3.714,994,3.714,995,3.714]],["title/modules/Neo4jCommonModule.html",[117,1.129,996,3.007]],["body/modules/Neo4jCommonModule.html",[3,0.119,4,0.119,5,0.107,13,0.764,14,1.818,20,0.685,22,1.434,23,0.01,24,0.803,25,0.419,26,1.041,30,0.985,35,0.269,45,0.587,46,2.057,50,0.119,51,0.016,84,1.13,88,0.007,89,0.007,117,1.954,119,1.87,124,2.558,125,2.641,135,2.057,136,3.896,142,2.641,254,4.435,427,2.728,428,3.398,429,5.251,738,4.356,742,4.164,745,5.417,746,4.164,750,5.026,755,5.206,757,3.789,830,3.398,996,5.206,997,4.164,998,4.735,999,6.281,1000,4.735,1001,6.006,1002,6.281,1003,4.735,1004,6.281,1005,5.109,1006,3.508,1007,3.789,1008,5.787,1009,5.221,1010,4.164,1011,3.789,1012,4.735,1013,4.653,1014,4.735,1015,6.281]],["title/injectables/Neo4jCommonService.html",[0,0.802,1005,2.836]],["body/injectables/Neo4jCommonService.html",[0,0.928,2,1.171,3,0.086,4,0.086,5,0.078,10,0.218,13,0.81,17,1.378,20,0.868,22,1.711,23,0.01,24,0.957,25,0.662,26,1.242,28,1.136,30,1.228,35,0.214,45,0.426,50,0.086,51,0.012,53,1.415,67,1.672,84,1.452,88,0.006,89,0.006,111,1.533,159,1.205,171,1.542,212,4.306,258,2.206,260,4.542,272,3.345,427,1.492,429,4.744,439,5.549,830,3.21,926,3.482,997,4.766,1001,4.017,1005,3.284,1007,2.748,1008,2.545,1009,2.545,1010,3.021,1016,3.021,1017,5.02,1018,6.527,1019,6.527,1020,5.02,1021,5.02,1022,5.933,1023,7.252,1024,5.933,1025,5.933,1026,3.435,1027,3.435,1028,5.02,1029,3.435,1030,7.095,1031,3.435,1032,3.435,1033,5.02,1034,3.435,1035,5.02,1036,3.435,1037,5.933,1038,3.435,1039,3.435,1040,3.435,1041,7.96,1042,7.252,1043,7.679,1044,3.435,1045,5.74,1046,3.435,1047,3.435,1048,3.435,1049,3.435,1050,3.435,1051,3.435,1052,5.933,1053,3.435,1054,3.435,1055,5.02,1056,5.02,1057,5.02,1058,3.435,1059,3.435,1060,5.02,1061,3.435,1062,5.02,1063,3.435,1064,3.435]],["title/controllers/Neo4jController.html",[90,1.522,1065,3.213]],["body/controllers/Neo4jController.html",[3,0.089,4,0.089,5,0.08,10,0.226,13,0.831,14,2.476,17,0.977,20,0.801,22,1.677,23,0.01,24,0.939,25,0.709,26,1.218,28,1.116,30,1.152,31,2.099,35,0.231,45,0.441,50,0.089,51,0.012,53,1.452,67,1.871,80,2.336,84,0.927,88,0.006,89,0.006,90,1.808,92,1.364,94,4.533,96,3.95,97,5.25,98,3.19,104,3.922,105,2.469,106,3.058,107,1.599,109,3.147,110,2.167,111,1.574,112,3.132,116,4.487,169,1.208,178,3.085,243,0.979,250,1.677,251,1.619,258,1.324,272,2.482,386,4.487,395,3.574,632,2.815,862,3.962,1006,2.638,1065,3.818,1066,3.132,1067,6.057,1068,6.057,1069,5.154,1070,3.561,1071,5.154,1072,3.561,1073,6.057,1074,3.561,1075,4.604,1076,5.154,1077,3.561,1078,3.561,1079,5.154,1080,3.561,1081,3.561,1082,5.154,1083,3.561,1084,3.561,1085,5.154,1086,3.561,1087,3.561,1088,5.154,1089,3.561,1090,3.757,1091,3.132,1092,2.329,1093,4.124,1094,3.561,1095,3.561,1096,3.561,1097,3.561,1098,3.561,1099,3.561,1100,3.561,1101,3.561]],["title/classes/Neo4jErrorFilter.html",[51,0.015,1102,3.47]],["body/classes/Neo4jErrorFilter.html",[3,0.126,4,0.126,5,0.113,10,0.317,13,1.05,20,0.545,22,1.142,23,0.01,24,0.639,25,0.442,26,0.829,28,0.659,30,0.784,35,0.237,45,0.62,50,0.126,51,0.017,67,2.039,84,0.9,88,0.007,89,0.007,104,2.954,159,2.284,212,2.705,240,1.658,243,0.949,249,1.915,347,2.851,386,3.704,432,5.791,456,3.101,607,4.49,830,2.705,997,3.846,1102,5.208,1103,4.258,1104,4.397,1105,7.238,1106,6.509,1107,7.667,1108,7.667,1109,5,1110,5,1111,5.791,1112,6.509,1113,5,1114,5,1115,3.101,1116,6.509,1117,5,1118,6.509,1119,6.509,1120,7.667,1121,7.95,1122,5,1123,5,1124,6.509,1125,6.509,1126,6.509,1127,6.509,1128,5,1129,5,1130,5,1131,5,1132,5]],["title/modules/Neo4jModule.html",[117,1.129,1133,3.213]],["body/modules/Neo4jModule.html",[3,0.115,4,0.115,5,0.104,19,4.012,23,0.01,24,0.587,35,0.274,45,0.569,46,1.996,50,0.115,51,0.016,88,0.007,89,0.007,92,2.359,110,1.932,117,1.807,119,1.815,120,2.063,121,2.213,122,2.213,123,2.063,124,2.828,125,1.932,129,4.292,131,2.965,132,2.213,133,2.063,135,3.015,136,3.819,137,4.027,140,3.005,141,3.005,142,1.932,143,3.005,145,3.186,146,3.186,147,3.676,148,5.52,151,3.676,253,1.709,403,5.206,408,4.041,416,3.404,418,4.041,419,4.041,420,4.041,421,4.041,422,4.041,423,4.041,424,4.041,426,4.041,427,1.996,428,2.486,429,4.027,430,4.041,431,4.041,432,3.676,433,4.041,434,4.041,435,4.041,436,4.041,437,4.041,438,4.041,439,3.404,440,4.041,453,3.819,996,5.363,1006,3.404,1007,3.676,1065,5.143,1090,4.938,1133,6.435,1134,4.041,1135,4.041,1136,4.041,1137,4.595,1138,4.595,1139,4.041,1140,4.595,1141,4.041,1142,4.595,1143,4.595]],["title/injectables/Neo4jService.html",[0,0.802,1090,2.69]],["body/injectables/Neo4jService.html",[0,0.686,2,0.79,3,0.058,4,0.058,5,0.052,10,0.147,11,0.763,13,0.598,14,2.31,17,1.018,20,0.738,22,1.487,23,0.01,24,0.832,25,0.576,26,1.122,28,1.096,30,1.021,31,1.512,35,0.174,45,0.287,50,0.058,51,0.008,53,1.496,55,2.516,63,1.515,67,2.187,80,1.927,84,1.172,88,0.005,89,0.005,101,2.654,106,1.677,107,1.04,110,0.974,111,1.774,142,0.974,162,2.654,169,1.636,170,1.666,171,1.666,177,1.515,178,3.32,189,4.248,226,4.055,243,1.103,250,1.908,251,2.165,258,2.421,272,2.798,290,3.933,358,2.096,359,2.116,381,1.074,395,3.682,427,1.006,439,1.716,442,2.037,446,3.933,453,1.437,459,1.853,460,2.969,461,3.259,462,2.037,463,2.037,471,3.293,484,1.253,587,2.302,596,1.515,606,3.933,607,1.437,608,1.716,622,1.077,625,3.136,631,1.116,632,2.7,848,2.969,862,3.037,891,2.969,922,2.037,945,3.933,951,2.969,975,2.037,990,3.264,1005,3.473,1045,5.726,1090,2.302,1093,4.248,1141,2.037,1144,2.037,1145,2.969,1146,3.264,1147,3.711,1148,2.969,1149,2.316,1150,4.083,1151,2.316,1152,3.711,1153,3.711,1154,2.316,1155,3.711,1156,2.316,1157,3.711,1158,3.711,1159,2.316,1160,2.316,1161,3.711,1162,2.316,1163,3.711,1164,2.316,1165,3.711,1166,2.316,1167,2.037,1168,2.316,1169,4.643,1170,3.711,1171,5.309,1172,2.969,1173,2.316,1174,2.316,1175,2.316,1176,2.316,1177,4.643,1178,2.316,1179,2.316,1180,4.669,1181,2.316,1182,3.711,1183,2.316,1184,2.316,1185,2.316,1186,2.316,1187,2.316,1188,4.643,1189,6.199,1190,2.316,1191,2.316,1192,2.316,1193,4.643,1194,2.316,1195,2.037,1196,3.264,1197,2.316,1198,3.711,1199,2.316,1200,2.316,1201,2.316,1202,2.316,1203,3.711,1204,2.316,1205,2.316,1206,2.316,1207,2.316,1208,2.316,1209,1.853,1210,2.316,1211,3.711,1212,4.643,1213,2.316,1214,2.316,1215,2.316,1216,2.037,1217,2.316,1218,3.711,1219,1.606,1220,2.316,1221,2.316,1222,2.316,1223,2.316,1224,2.316,1225,2.316,1226,2.316,1227,2.316,1228,2.316,1229,3.711,1230,2.316,1231,2.316,1232,3.711,1233,3.711,1234,3.264,1235,3.711,1236,2.316,1237,2.316,1238,2.316,1239,3.264]],["title/injectables/Neo4jTransactionInterceptor.html",[0,0.802,1013,3.213]],["body/injectables/Neo4jTransactionInterceptor.html",[0,1.24,2,1.786,3,0.131,4,0.131,5,0.118,10,0.332,13,1.082,17,1.437,20,0.731,22,1.532,23,0.01,24,0.857,25,0.593,26,1.112,30,0.821,35,0.256,45,0.649,50,0.131,51,0.018,52,2.72,53,1.475,67,1.475,84,0.942,88,0.008,89,0.008,96,2.617,159,1.837,212,2.832,456,3.248,786,5.78,794,4.189,830,2.832,945,3.879,997,4.371,1005,5.103,1006,3.879,1013,4.968,1030,6.862,1090,4.16,1103,4.84,1111,5.92,1240,4.605,1241,5.898,1242,5.236,1243,5.236,1244,5.898,1245,6.508,1246,6.862,1247,5.236,1248,5.898,1249,5.236,1250,6.707,1251,5.236,1252,5.236,1253,5.236,1254,5.236,1255,5.236,1256,5.236]],["title/injectables/Neo4jTypeInterceptor.html",[0,0.802,1257,3.47]],["body/injectables/Neo4jTypeInterceptor.html",[0,1.003,2,1.304,3,0.096,4,0.096,5,0.086,10,0.242,13,0.875,17,1.488,20,0.592,22,1.239,23,0.01,24,0.693,25,0.479,26,0.899,30,0.6,34,2.281,35,0.207,45,0.474,50,0.096,51,0.013,53,1.528,67,1.078,84,1.499,88,0.006,89,0.006,96,1.911,111,1.656,159,1.342,170,1.717,171,3.378,212,2.069,215,2.436,272,2.613,358,1.45,359,1.45,367,2.287,379,1.107,381,1.985,456,2.372,518,3.363,786,5.081,830,2.069,926,2.652,997,3.724,1103,4.123,1111,5.043,1115,3.365,1219,3.762,1241,4.771,1244,4.771,1245,6.032,1246,6.032,1248,4.771,1257,4.34,1258,3.06,1259,3.824,1260,6.616,1261,3.824,1262,6.616,1263,3.824,1264,3.824,1265,3.824,1266,3.824,1267,3.824,1268,3.824,1269,3.824,1270,3.824,1271,3.824,1272,3.824,1273,3.824,1274,5.488,1275,3.363,1276,3.363,1277,3.363,1278,3.363,1279,3.363,1280,3.363,1281,3.363,1282,3.363,1283,4.34,1284,4.771,1285,3.363,1286,3.363,1287,4.771,1288,3.363,1289,3.363,1290,3.363,1291,3.363,1292,3.363,1293,3.363,1294,3.363,1295,3.363,1296,3.363,1297,3.363,1298,3.363,1299,3.363,1300,3.363,1301,2.833,1302,3.363,1303,3.363,1304,5.544,1305,5.544,1306,4.771,1307,4.771,1308,3.363,1309,3.363,1310,3.363,1311,4.771,1312,3.363,1313,3.363,1314,3.363,1315,3.363,1316,3.363,1317,3.06,1318,3.363,1319,3.363,1320,3.363,1321,3.824,1322,3.824,1323,3.824,1324,3.824,1325,3.824,1326,3.824]],["title/classes/NotFoundError.html",[51,0.015,369,1.713]],["body/classes/NotFoundError.html",[3,0.095,4,0.095,5,0.086,10,0.241,11,1.11,20,0.414,23,0.01,24,0.69,25,0.698,28,1.137,35,0.125,50,0.218,51,0.029,88,0.006,89,0.006,159,2.709,169,0.891,184,1.099,240,1.26,243,1.466,247,1.548,248,2.132,249,2.406,250,1.434,251,1.678,252,2.558,253,2.336,274,2.006,277,2.558,278,2.558,279,2.558,280,1.129,334,2.006,343,0.596,344,3.427,346,1.65,347,2.985,348,1.841,349,2.345,350,1.649,351,1.741,352,1.741,353,0.989,354,1.015,355,2.199,356,2.728,357,2.836,358,1.678,359,1.678,360,1.65,361,2.199,362,3.668,363,1.16,364,2.425,365,1.766,366,1.65,367,1.099,368,1.65,369,2.48,370,2.068,371,1.65,372,2.199,373,2.199,374,1.225,375,1.766,376,1.706,377,1.766,378,1.192,379,2.091,380,1.192,381,1.099,1327,3.799]],["title/interfaces/PageInfo.html",[343,0.68,616,2.089]],["body/interfaces/PageInfo.html",[3,0.091,4,0.091,5,0.082,10,0.23,11,1.074,23,0.01,25,0.729,26,1.225,28,1.075,34,2.196,35,0.119,50,0.215,65,2.908,76,1.813,88,0.006,89,0.006,106,1.31,169,1.664,178,2.89,181,2.749,184,1.05,243,1.162,250,1.193,251,1.79,258,2.49,274,2.181,280,1.078,334,2.083,343,1.305,345,1.39,348,1.781,350,1.595,351,1.685,352,1.685,353,0.944,354,0.969,357,2.889,358,2.083,359,2.083,363,1.108,367,1.938,374,1.17,378,1.138,379,2.054,380,1.138,381,1.05,461,3.225,601,2.948,603,1.747,609,2.428,610,1.813,611,2.713,612,2.428,613,2.948,614,1.813,615,2.428,616,3.225,617,3.478,618,3.622,619,3.622,620,3.478,621,2.611,622,1.686,623,1.884,624,2.611,625,2.516,626,1.884,627,2.611,628,1.813,629,1.813,630,1.962,631,1.747,632,2.428,633,1.813,634,1.884,635,1.884,636,1.813,637,1.813]],["title/classes/PayloadResolver.html",[51,0.015,1328,3.213]],["body/classes/PayloadResolver.html",[3,0.198,4,0.136,5,0.122,10,0.343,11,1.41,13,1.105,20,0.748,22,1.238,23,0.01,24,0.693,26,0.898,30,0.85,35,0.247,45,0.672,50,0.136,51,0.019,55,2.549,84,1.353,88,0.008,89,0.008,96,3.758,98,2.354,111,2.296,162,3.949,170,3.078,171,2.433,200,2.815,240,1.797,243,1.302,369,2.969,370,3.027,588,3.758,926,3.758,1219,3.758,1301,4.015,1328,5.078,1329,4.766,1330,6.855,1331,6.855,1332,5.419,1333,6.855,1334,6.613,1335,5.419,1336,6.855,1337,4.336,1338,5.419,1339,5.419]],["title/classes/Ping.html",[51,0.015,169,1.017]],["body/classes/Ping.html",[3,0.094,4,0.094,5,0.085,10,0.238,11,1.101,20,0.584,23,0.01,24,0.684,25,0.708,26,0.888,28,1.13,35,0.123,50,0.218,51,0.029,88,0.006,89,0.006,159,2.624,169,1.256,184,1.087,240,1.246,243,1.52,247,1.53,248,2.115,249,2.391,250,1.643,251,1.668,252,2.542,253,2.321,274,2.057,277,2.542,278,2.542,279,2.542,280,1.117,334,1.998,343,0.589,344,3.342,346,1.631,347,2.862,348,1.827,349,2.326,350,1.635,351,1.727,352,1.727,353,0.978,354,1.004,355,2.181,356,2.711,357,2.84,358,1.668,359,1.668,360,1.631,361,2.181,362,3.657,363,1.147,364,2.405,365,1.746,366,1.631,367,1.087,368,1.631,369,2.115,370,2.052,371,1.631,372,2.181,373,2.181,374,1.212,375,1.746,376,1.687,377,1.746,378,1.179,379,2.081,380,1.179,381,1.087,1340,3.756,1341,3.756]],["title/interfaces/PingConnection.html",[343,0.68,624,2.167]],["body/interfaces/PingConnection.html",[3,0.091,4,0.091,5,0.082,10,0.231,11,1.076,23,0.01,25,0.729,26,1.112,28,1.076,34,2.201,35,0.119,50,0.215,65,2.912,76,3.352,88,0.006,89,0.006,106,1.314,169,1.666,178,2.894,181,2.753,184,1.053,243,1.164,250,1.196,251,1.792,258,2.494,274,2.182,280,1.082,334,2.085,343,1.305,345,1.394,348,1.785,350,1.599,351,1.689,352,1.689,353,0.947,354,0.972,357,2.883,358,2.085,359,2.085,363,1.111,367,1.515,374,1.174,378,1.142,379,2.056,380,1.142,381,1.053,461,3.23,601,2.953,603,1.753,609,2.433,610,1.819,611,2.72,612,2.433,613,2.953,614,1.819,615,2.433,616,3.758,617,1.89,618,1.968,619,1.968,620,1.89,621,3.352,622,1.691,623,1.89,624,3.065,625,3.422,626,3.484,627,2.617,628,1.819,629,1.819,630,1.968,631,1.753,632,2.433,633,1.819,634,1.89,635,1.89,636,1.819,637,1.819]],["title/interfaces/PingEdge.html",[343,0.68,621,2.167]],["body/interfaces/PingEdge.html",[3,0.094,4,0.094,5,0.085,10,0.237,11,1.099,23,0.01,25,0.717,28,1.102,34,2.246,35,0.123,50,0.216,65,2.951,76,1.871,88,0.006,89,0.006,106,1.352,169,1.802,178,2.926,181,2.798,184,1.084,243,1.183,250,1.22,251,1.816,258,2.526,274,2.195,280,1.113,334,2.101,343,1.312,345,1.434,348,1.822,350,1.632,351,1.723,352,1.723,353,0.975,354,1.001,357,2.874,358,2.101,359,2.101,363,1.143,367,1.546,374,1.208,378,1.175,379,2.079,380,1.175,381,1.084,461,3.272,601,3.001,603,1.803,609,2.484,610,1.871,611,2.776,612,2.484,613,3.001,614,1.871,615,2.484,616,3.001,617,1.945,618,2.025,619,2.025,620,1.945,621,3.114,622,3.158,623,3.529,624,2.671,625,2.574,626,1.945,627,2.671,628,1.871,629,1.871,630,2.025,631,1.803,632,2.484,633,1.871,634,1.945,635,1.945,636,1.871,637,1.871]],["title/modules/PingModule.html",[117,1.129,1342,3.213]],["body/modules/PingModule.html",[3,0.121,4,0.121,5,0.109,23,0.01,24,0.614,35,0.28,45,0.595,50,0.121,51,0.016,65,2.086,88,0.007,89,0.007,110,2.02,117,1.848,119,1.897,120,2.157,121,2.314,122,2.314,123,2.157,124,2.891,125,2.02,129,4.077,131,3.054,132,2.314,133,2.157,135,2.754,195,4.551,199,3.559,200,2.495,203,3.331,208,4.698,209,3.559,210,2.98,211,3.559,212,2.598,214,3.559,215,2.157,216,3.559,274,1.284,353,1.25,354,1.284,358,1.284,359,1.284,378,1.507,406,3.746,407,4.147,416,3.559,453,3.933,577,5.073,578,3.843,579,5.073,580,3.843,582,3.843,842,5,1342,6.406,1343,4.225,1344,4.804,1345,4.225,1346,5.272,1347,4.804,1348,5.577,1349,5.577,1350,5.577,1351,6.341,1352,4.225,1353,4.698,1354,4.804,1355,4.804,1356,4.804]],["title/injectables/PingRepository.html",[0,0.802,842,2.69]],["body/injectables/PingRepository.html",[0,1.368,2,2.092,3,0.154,4,0.154,5,0.139,10,0.389,13,1.193,14,2.3,20,0.669,23,0.01,30,0.962,35,0.243,45,0.76,50,0.154,51,0.021,80,2.034,88,0.008,89,0.008,153,4.003,154,4.544,155,6.357,159,2.152,160,4.544,169,1.438,780,3.805,842,4.59,1357,5.394,1358,7.947,1359,6.133]],["title/classes/PingResolver.html",[51,0.015,1353,3.213]],["body/classes/PingResolver.html",[3,0.059,4,0.059,5,0.053,10,0.148,11,0.77,13,0.604,14,2.315,17,0.643,20,0.815,22,1.676,23,0.01,24,0.938,25,0.671,26,1.216,28,1.143,30,1.126,31,2.537,35,0.215,45,0.29,50,0.059,51,0.008,52,1.217,53,1.505,55,1.392,63,2.449,67,1.646,76,1.871,80,2.066,84,1.293,88,0.004,89,0.004,98,3.12,106,2.53,111,1.428,162,2.67,169,1.642,170,1.052,171,1.052,176,3.465,178,3.283,179,2.995,200,1.217,210,1.453,240,0.777,243,1.531,250,1.676,251,1.428,258,2.671,260,1.532,276,3.821,280,1.39,309,1.453,381,1.546,392,1.735,471,2.901,528,1.453,587,1.453,588,1.624,609,2.483,612,2.483,615,2.483,616,2.253,617,2.43,620,2.43,622,2.174,623,2.43,625,2.573,626,2.43,628,1.871,629,1.171,631,1.128,632,3.719,633,1.171,636,1.171,637,1.171,859,3.742,860,3.742,861,2.995,862,3.059,1075,2.596,1115,2.901,1145,2.995,1148,3.742,1172,4.275,1334,2.06,1346,4.075,1352,2.06,1353,2.774,1360,2.06,1361,5.138,1362,3.744,1363,2.342,1364,2.342,1365,3.744,1366,2.342,1367,2.342,1368,2.342,1369,2.06,1370,2.342,1371,2.342,1372,2.342,1373,2.342,1374,2.342,1375,2.342,1376,2.342,1377,2.342,1378,2.342,1379,2.342,1380,2.342,1381,2.342,1382,2.342,1383,3.293,1384,2.342,1385,3.293,1386,2.342,1387,3.744,1388,2.342,1389,2.342,1390,3.744,1391,2.342,1392,2.06,1393,2.342,1394,2.06,1395,3.958,1396,2.06,1397,1.874,1398,1.874,1399,2.342,1400,2.342,1401,2.342,1402,5.752,1403,2.06,1404,2.342,1405,2.342,1406,3.744,1407,2.342,1408,2.342,1409,2.342,1410,2.342,1411,2.342,1412,4.677,1413,4.677,1414,4.677,1415,3.744,1416,4.677,1417,4.113,1418,4.677,1419,6.23,1420,4.677,1421,4.677,1422,2.342,1423,2.342,1424,2.06,1425,2.342,1426,2.342,1427,2.342,1428,2.342,1429,2.342,1430,2.342,1431,2.342,1432,2.342,1433,2.342,1434,2.342,1435,2.342,1436,2.342]],["title/injectables/PingService.html",[0,0.802,1346,2.836]],["body/injectables/PingService.html",[0,0.505,2,0.546,3,0.04,4,0.04,5,0.036,10,0.101,11,0.562,13,0.44,14,2.247,17,0.749,20,0.686,22,1.386,23,0.01,24,0.776,25,0.573,26,1.006,28,1.104,30,0.952,31,2.369,35,0.199,45,0.198,50,0.04,51,0.005,53,1.555,55,2.473,63,1.046,65,2.814,67,2.095,80,2.408,84,1.166,88,0.004,89,0.003,101,2.371,106,2.192,107,0.718,110,0.673,111,1.685,139,1.185,142,1.776,158,1.109,162,2.111,164,1.28,166,1.894,169,1.423,170,0.718,171,0.718,176,2.647,177,1.046,178,3.314,179,2.185,180,1.407,181,2.725,182,1.407,183,2.402,184,1.756,186,2.402,187,2.402,189,2.859,215,1.226,243,1.291,250,1.89,251,1.853,258,2.338,272,2.801,274,0.427,275,1.109,276,3.379,280,1.64,290,1.185,291,1.894,292,1.894,299,1.894,350,0.488,351,0.516,352,0.516,353,0.416,354,0.427,358,1.554,359,1.554,406,0.945,407,1.046,427,0.695,445,2.859,446,4.659,453,0.992,455,4.856,456,0.992,457,1.28,458,1.407,459,1.28,460,1.28,461,3.275,465,3.715,471,1.694,484,3.928,596,3.609,601,2.923,603,2.489,607,3.423,609,2.205,611,0.831,612,1.964,613,2.658,615,1.964,622,2.205,625,2.035,628,1.365,629,1.365,631,0.77,632,3.16,633,1.365,634,1.419,635,1.419,636,1.365,637,1.365,780,0.992,842,2.621,859,2.185,860,2.185,861,2.185,862,2.337,945,3.13,981,3.142,982,3.142,983,2.402,1092,1.046,1115,2.216,1145,2.185,1146,2.402,1148,2.185,1150,3.142,1167,1.407,1209,1.28,1216,1.407,1234,3.142,1239,1.407,1346,1.786,1394,1.407,1417,1.407,1424,1.407,1437,1.407,1438,2.731,1439,2.111,1440,1.6,1441,1.6,1442,1.6,1443,2.731,1444,1.6,1445,1.6,1446,1.6,1447,1.6,1448,1.6,1449,1.6,1450,2.731,1451,1.6,1452,2.859,1453,1.28,1454,1.6,1455,1.6,1456,1.6,1457,1.407,1458,1.6,1459,2.731,1460,2.731,1461,2.731,1462,3.573,1463,4.225,1464,1.6,1465,3.142,1466,1.6,1467,2.731,1468,2.731,1469,2.731,1470,2.731,1471,1.6,1472,1.6,1473,1.6,1474,1.6,1475,1.6,1476,1.6,1477,3.573,1478,1.6,1479,1.407,1480,1.6,1481,1.6,1482,1.6,1483,1.6,1484,2.731,1485,2.731,1486,2.731,1487,4.225,1488,2.731,1489,2.731,1490,2.731,1491,2.731,1492,4.225,1493,3.573,1494,2.731,1495,1.6,1496,1.6,1497,1.6,1498,1.6,1499,1.6,1500,1.6,1501,2.731,1502,1.6,1503,1.6,1504,1.6,1505,1.6,1506,1.6,1507,1.6,1508,1.6,1509,1.6,1510,1.407,1511,2.731,1512,1.6,1513,1.6,1514,1.6,1515,1.6,1516,1.6,1517,1.6,1518,1.407,1519,1.6,1520,1.6,1521,1.6,1522,1.6,1523,1.6,1524,3.142,1525,2.731,1526,1.6,1527,1.6,1528,1.6,1529,1.6,1530,1.6,1531,1.6,1532,1.6,1533,1.6,1534,1.6]],["title/modules/PrismaModule.html",[117,1.129,308,2.836]],["body/modules/PrismaModule.html",[3,0.125,4,0.125,5,0.112,13,0.801,20,0.707,22,1.48,23,0.01,24,0.828,25,0.573,26,1.075,30,1.016,35,0.251,45,0.616,50,0.125,51,0.017,67,1.827,84,1.167,88,0.007,89,0.007,117,1.991,119,1.962,124,2.64,125,2.725,135,2.158,142,2.725,254,4.519,308,5.003,336,4.921,427,2.158,737,3.965,745,5.502,750,5.187,755,3.445,757,3.975,763,4.369,1535,4.968,1536,3.975,1537,6.482,1538,5.304,1539,4.968,1540,4.968,1541,6.482,1542,5.003,1543,4.968,1544,4.968,1545,4.24,1546,3.445,1547,4.495,1548,4.369,1549,5.773,1550,4.968,1551,8.136,1552,4.369]],["title/interfaces/PrismaModuleAsyncOptions.html",[343,0.68,1542,2.836]],["body/interfaces/PrismaModuleAsyncOptions.html",[3,0.115,4,0.115,5,0.104,10,0.291,11,1.266,14,1.33,23,0.01,25,0.768,26,1.37,35,0.151,45,0.569,50,0.204,67,1.956,80,1.524,84,1.392,88,0.007,89,0.007,153,3.33,215,2.063,326,3.186,334,1.228,343,0.965,345,1.76,379,1.33,427,3.457,428,4.306,528,3.819,716,3.404,723,5.638,724,5.494,725,4.561,734,3.186,735,4.561,737,3.077,738,4.815,755,4.815,764,5.555,765,4.926,767,4.926,768,3.676,1538,3.186,1542,4.851,1545,4.541,1546,3.186,1547,4.815,1553,3.005,1554,5.143,1555,3.676,1556,4.561,1557,4.041,1558,5.414,1559,4.041,1560,4.041,1561,4.041]],["title/interfaces/PrismaOptionsFactory.html",[343,0.68,1556,3.213]],["body/interfaces/PrismaOptionsFactory.html",[3,0.122,4,0.122,5,0.11,10,0.308,13,1.031,14,1.407,20,0.53,23,0.01,25,0.715,30,0.763,35,0.16,45,0.603,50,0.207,67,2.012,80,1.613,84,1.418,88,0.007,89,0.007,153,2.631,215,2.184,326,3.373,334,1.3,343,1.003,345,1.863,379,1.407,427,3.102,428,3.863,528,3.966,716,3.603,723,5.261,724,3.603,725,3.603,734,3.373,735,4.736,737,3.195,738,4.953,755,4.953,764,5.714,765,5.115,767,5.115,768,3.892,1538,3.373,1542,4.671,1545,4.671,1546,3.373,1547,4.953,1553,3.181,1554,4.434,1555,3.892,1556,5.291,1557,6.672,1558,6.281,1559,4.278,1560,4.278,1561,4.278,1562,4.864]],["title/injectables/PrismaService.html",[0,0.802,336,2.69]],["body/injectables/PrismaService.html",[0,1.16,2,1.612,3,0.119,4,0.119,5,0.107,10,0.299,11,1.29,13,1.012,14,2.259,17,1.297,20,0.768,22,1.079,23,0.01,24,0.604,25,0.418,26,0.783,30,0.741,35,0.231,45,0.586,50,0.119,51,0.016,53,1.984,55,2.333,80,2.08,88,0.007,89,0.007,111,2.15,153,3.393,154,5.556,155,5.944,159,1.658,160,3.501,162,4.092,170,2.122,171,2.122,215,2.122,336,3.891,427,2.052,587,4.368,737,3.135,780,2.931,914,4.156,1115,2.931,1538,5.201,1545,3.091,1548,4.156,1563,4.156,1564,4.725,1565,6.273,1566,4.725,1567,4.725,1568,4.725,1569,4.725,1570,4.156,1571,6.273,1572,4.725,1573,3.781,1574,4.725,1575,4.725,1576,4.725,1577,4.725,1578,4.725,1579,4.725,1580,4.725,1581,4.725,1582,4.725,1583,4.725,1584,4.725,1585,4.725,1586,4.725]],["title/injectables/RMQService.html",[0,0.802,109,2.253]],["body/injectables/RMQService.html",[0,1.226,2,1.754,3,0.129,4,0.129,5,0.116,10,0.326,13,1.069,17,1.411,18,3.81,19,4.443,20,0.8,22,1.676,23,0.01,24,0.938,25,0.649,26,1.216,28,0.967,30,1.04,35,0.241,45,0.637,46,2.234,50,0.129,51,0.018,52,2.672,53,1.449,67,1.868,84,0.926,88,0.008,89,0.008,96,2.571,97,5.069,107,2.31,109,3.444,142,2.162,170,2.31,171,2.31,215,2.977,495,3.81,525,4.524,737,2.571,809,4.598,820,3.567,821,3.567,822,4.115,823,4.598,1587,4.524,1588,6.63,1589,6.63,1590,5.143,1591,6.63,1592,5.143,1593,6.63,1594,7.75,1595,5.143,1596,7.337,1597,5.143,1598,5.143,1599,5.143,1600,5.143,1601,5.143,1602,5.143]],["title/injectables/RmqConfigService.html",[0,0.802,1603,3.47]],["body/injectables/RmqConfigService.html",[0,1.302,2,1.929,3,0.142,4,0.142,5,0.128,10,0.358,13,1.136,17,1.552,18,4.19,19,4.552,20,0.836,22,1.608,23,0.01,24,0.98,25,0.622,26,1.167,28,1.01,30,1.104,35,0.231,45,0.701,46,2.457,50,0.142,51,0.019,52,2.938,84,1.267,88,0.008,89,0.008,1603,5.634,1604,7.057,1605,4.975,1606,7.041,1607,8.024,1608,5.656,1609,7.041,1610,5.656,1611,5.656,1612,5.656,1613,4.526,1614,5.656]],["title/modules/RmqModule.html",[117,1.129,129,2.253]],["body/modules/RmqModule.html",[3,0.114,4,0.114,5,0.103,13,0.734,19,4.387,20,0.496,22,1.039,23,0.01,24,1.014,25,0.402,26,0.754,28,0.806,30,0.713,35,0.242,45,0.564,46,1.976,50,0.114,51,0.016,84,1.101,88,0.007,89,0.007,107,2.043,109,4.455,117,1.923,119,1.797,120,2.043,121,2.191,122,2.191,123,2.043,124,2.814,125,3.106,129,4.283,131,2.946,132,2.191,133,2.043,135,1.976,254,3.613,343,0.713,427,2.656,428,3.308,737,3.057,745,4.791,809,4.791,820,4.241,821,4.241,823,4.791,1536,4.893,1554,3.155,1613,3.64,1615,4.002,1616,4.002,1617,4.002,1618,3.64,1619,4.55,1620,5.473,1621,4.55,1622,4.002,1623,5.379,1624,5.379,1625,5.379,1626,5.379,1627,4.002,1628,4.002,1629,4.002]],["title/interfaces/RmqModuleOptions.html",[343,0.68,1620,3.213]],["body/interfaces/RmqModuleOptions.html",[3,0.123,4,0.123,5,0.111,10,0.311,11,1.324,19,4.471,23,0.01,24,1.072,25,0.434,28,1.003,35,0.25,45,0.609,46,2.135,50,0.123,51,0.017,84,1.158,88,0.007,89,0.007,107,2.207,109,3.729,117,1.869,124,2.002,125,2.707,129,3.344,135,2.135,254,2.904,343,0.771,345,1.883,427,2.796,428,3.482,737,3.218,745,4.464,809,4.978,820,4.464,821,4.464,823,4.978,1536,3.933,1554,3.409,1613,3.933,1618,3.933,1620,5.318,1622,4.323,1623,5.662,1624,5.662,1625,5.662,1626,5.662,1627,4.323,1628,4.323,1629,4.323]],["title/interfaces/UPingInput.html",[343,0.68,612,2.016]],["body/interfaces/UPingInput.html",[3,0.086,4,0.086,5,0.077,10,0.217,11,1.03,23,0.01,25,0.744,26,1.396,28,1.062,34,2.106,35,0.112,50,0.214,65,3.25,76,1.712,88,0.006,89,0.006,106,1.237,169,1.626,178,2.825,181,3.253,184,0.991,243,1.125,250,1.144,251,2,258,2.424,274,2.155,280,1.018,334,2.051,343,1.291,345,1.312,348,1.709,350,1.53,351,1.616,352,1.616,353,0.891,354,0.915,357,2.904,358,2.155,359,2.155,363,1.046,367,1.45,374,1.105,378,1.075,379,2.007,380,1.075,381,0.991,461,3.604,601,3.49,603,1.649,609,2.328,610,1.712,611,2.602,612,2.753,613,3.49,614,1.712,615,2.328,616,2.853,617,1.779,618,1.853,619,1.853,620,1.779,621,2.504,622,1.592,623,1.779,624,2.504,625,2.413,626,1.779,627,2.504,628,1.712,629,1.712,630,1.853,631,1.649,632,2.328,633,1.712,634,1.779,635,1.779,636,1.712,637,1.712]],["title/interfaces/UPingsWithinRadiusInput.html",[343,0.68,615,2.016]],["body/interfaces/UPingsWithinRadiusInput.html",[3,0.093,4,0.093,5,0.084,10,0.235,11,1.09,23,0.01,25,0.724,28,1.079,34,2.229,35,0.121,50,0.216,65,2.936,76,1.851,88,0.006,89,0.006,106,1.337,169,1.677,178,2.914,181,2.78,184,1.071,243,1.176,250,1.211,251,1.806,258,2.767,274,2.19,280,1.101,334,2.095,343,1.309,345,1.418,348,1.808,350,1.619,351,1.71,352,1.71,353,0.964,354,0.99,357,2.872,358,2.232,359,2.232,363,1.131,367,1.534,374,1.194,378,1.162,379,2.07,380,1.162,381,1.071,461,3.691,601,2.982,603,1.783,609,2.464,610,1.851,611,2.754,612,2.464,613,2.982,614,1.851,615,2.878,616,2.982,617,1.923,618,2.003,619,2.003,620,1.923,621,2.649,622,1.721,623,1.923,624,2.649,625,2.553,626,1.923,627,2.649,628,1.851,629,1.851,630,2.003,631,1.783,632,2.464,633,1.851,634,1.923,635,1.923,636,1.851,637,1.851]],["title/classes/UnauthorizedError.html",[51,0.015,370,1.661]],["body/classes/UnauthorizedError.html",[3,0.095,4,0.095,5,0.086,10,0.241,11,1.11,20,0.414,23,0.01,24,0.69,25,0.698,28,1.137,35,0.125,50,0.218,51,0.029,88,0.006,89,0.006,159,2.709,169,0.891,184,1.099,240,1.26,243,1.466,247,1.548,248,2.132,249,2.406,250,1.434,251,1.678,252,2.558,253,2.336,274,2.006,277,2.558,278,2.558,279,2.558,280,1.129,334,2.006,343,0.596,344,3.427,346,1.65,347,2.985,348,1.841,349,2.345,350,1.649,351,1.741,352,1.741,353,0.989,354,1.015,355,2.199,356,2.728,357,2.836,358,1.678,359,1.678,360,1.65,361,2.199,362,3.668,363,1.16,364,2.425,365,1.766,366,1.65,367,1.099,368,1.65,369,2.132,370,2.406,371,1.65,372,2.199,373,2.199,374,1.225,375,1.766,376,1.706,377,1.766,378,1.192,379,2.091,380,1.192,381,1.099,1630,3.799]],["title/classes/UnknownError.html",[51,0.015,373,1.766]],["body/classes/UnknownError.html",[3,0.095,4,0.095,5,0.086,10,0.241,11,1.11,20,0.414,23,0.01,24,0.69,25,0.698,28,1.137,35,0.125,50,0.218,51,0.029,88,0.006,89,0.006,159,2.709,169,0.891,184,1.099,240,1.26,243,1.466,247,1.548,248,2.132,249,2.406,250,1.434,251,1.678,252,2.558,253,2.336,274,2.006,277,2.558,278,2.558,279,2.558,280,1.129,334,2.006,343,0.596,344,3.427,346,1.65,347,2.985,348,1.841,349,2.345,350,1.649,351,1.741,352,1.741,353,0.989,354,1.015,355,2.199,356,2.728,357,2.836,358,1.678,359,1.678,360,1.65,361,2.199,362,3.668,363,1.16,364,2.425,365,1.766,366,1.65,367,1.099,368,1.65,369,2.132,370,2.068,371,1.65,372,2.199,373,2.558,374,1.225,375,1.766,376,1.706,377,1.766,378,1.192,379,2.091,380,1.192,381,1.099,1631,3.799]],["title/classes/UpdateUserInput.html",[51,0.015,361,1.766]],["body/classes/UpdateUserInput.html",[3,0.083,4,0.083,5,0.075,10,0.211,11,1.007,20,0.874,23,0.01,24,0.626,25,0.749,26,1.418,28,1.11,35,0.109,50,0.215,51,0.028,88,0.006,89,0.006,159,2.515,169,0.779,184,0.961,240,1.102,243,1.407,247,1.353,248,2.537,249,2.624,250,1.564,251,1.831,252,2.79,253,2.547,274,1.981,277,2.79,278,2.79,279,2.79,280,0.987,334,1.915,343,0.521,344,3.219,346,1.443,347,2.756,348,1.671,349,2.128,350,1.496,351,1.58,352,1.58,353,0.865,354,0.888,355,1.995,356,2.528,357,2.856,358,1.831,359,1.831,360,1.443,361,2.37,362,3.536,363,1.014,364,2.2,365,1.544,366,1.443,367,0.961,368,1.443,369,1.935,370,1.877,371,1.443,372,1.995,373,1.995,374,1.071,375,1.544,376,1.492,377,1.544,378,1.042,379,1.982,380,1.042,381,0.961,1632,3.322,1633,3.322,1634,3.322,1635,3.322,1636,3.322,1637,3.322,1638,3.322,1639,3.322,1640,3.322,1641,3.322,1642,3.322]],["title/classes/User.html",[51,0.015,243,0.823]],["body/classes/User.html",[3,0.074,4,0.074,5,0.067,10,0.188,11,0.925,13,0.726,17,1.235,20,0.873,22,1.242,23,0.01,24,1.051,25,0.727,26,1.184,28,1.156,30,0.952,35,0.178,50,0.113,51,0.01,55,1.674,67,0.836,84,0.81,88,0.005,89,0.005,101,3.434,169,1.8,177,1.94,181,2.442,184,2.128,240,0.984,242,6.043,243,1.573,244,3.958,245,3.958,246,3.958,247,2.996,248,2.904,249,2.818,250,1.754,251,1.965,252,2.996,253,2.735,254,4.059,255,3.958,256,2.609,257,5.74,258,2.655,260,4.269,269,3.958,271,3.971,272,3.309,273,6.468,274,0.793,275,2.057,276,2.944,277,2.215,278,2.215,279,2.215,280,2.186,281,2.609,282,2.609,283,2.609,284,2.609,285,2.609,286,2.609,287,2.609,288,2.609,289,2.609,290,3.334,291,2.057,292,2.057,293,2.197,294,2.197,295,2.197,296,2.197,297,2.197,298,2.197,299,2.057,300,2.197,301,2.609,302,2.609,303,2.197,349,1.288,351,0.957,352,0.957,353,0.772,354,0.793,355,1.208,358,1.203,359,1.203,719,2.373,1453,5.497,1643,2.373,1644,4.501,1645,4.501,1646,2.966,1647,2.966,1648,2.966,1649,2.966,1650,2.966,1651,2.966,1652,2.966,1653,2.966,1654,2.966,1655,4.501,1656,6.071,1657,2.966,1658,4.352,1659,2.966,1660,2.966,1661,2.966,1662,2.966,1663,2.966,1664,2.966,1665,2.966,1666,2.966,1667,2.966,1668,2.966,1669,2.966,1670,2.966,1671,2.966]],["title/classes/User-1.html",[51,0.012,243,0.688,827,2.897]],["body/classes/User-1.html",[3,0.085,4,0.085,5,0.077,10,0.215,11,1.023,20,0.866,23,0.01,24,0.83,25,0.748,26,1.35,28,1.125,35,0.111,50,0.215,51,0.028,88,0.006,89,0.006,159,2.534,169,0.796,184,1.705,240,1.126,243,1.453,247,2.401,248,2.563,249,2.648,250,1.578,251,1.847,252,2.815,253,2.57,274,1.994,277,2.401,278,2.401,279,2.401,280,1.752,334,1.93,343,0.532,344,3.241,346,1.474,347,2.775,348,1.698,349,2.162,350,1.52,351,1.605,352,1.605,353,0.884,354,0.907,355,2.027,356,2.819,357,2.842,358,1.575,359,1.575,360,1.474,361,2.027,362,3.558,363,1.037,364,2.235,365,1.578,366,1.474,367,0.982,368,1.474,369,1.966,370,1.907,371,1.474,372,2.027,373,2.027,374,1.095,375,1.578,376,1.524,377,1.578,378,1.065,379,2,380,1.065,381,0.982,1672,3.395,1673,3.395,1674,3.395,1675,3.395,1676,3.395,1677,3.395,1678,3.395,1679,3.395,1680,3.395,1681,3.395]],["title/controllers/UserController.html",[90,1.522,1682,3.213]],["body/controllers/UserController.html",[3,0.108,4,0.108,5,0.097,10,0.273,13,0.951,14,2.39,17,1.184,20,0.733,22,1.535,23,0.01,24,0.859,25,0.707,26,1.115,28,1.054,30,1.054,31,1.757,35,0.248,45,0.535,50,0.108,51,0.015,53,1.894,55,1.604,67,1.894,80,2.229,84,1.062,88,0.007,89,0.007,90,2.07,92,1.653,96,3.36,97,4.727,98,2.92,104,3.485,105,2.991,106,2.941,107,1.937,109,3.492,110,1.814,111,2.053,116,3.196,162,2.948,178,2.944,226,3.858,243,0.819,248,1.703,250,1.784,780,2.676,1075,5.012,1091,3.794,1092,2.821,1196,3.794,1439,3.971,1452,6.055,1682,4.37,1683,3.794,1684,5.378,1685,5.188,1686,4.72,1687,4.314,1688,5.899,1689,4.314,1690,3.794,1691,5.899,1692,4.314,1693,4.314,1694,5.899,1695,4.314,1696,3.451,1697,4.314,1698,4.314,1699,4.314,1700,5.188,1701,4.314,1702,4.314,1703,4.314,1704,4.314,1705,4.314]],["title/modules/UserModule.html",[117,1.129,1706,3.213]],["body/modules/UserModule.html",[3,0.113,4,0.113,5,0.102,23,0.01,24,0.575,35,0.283,45,0.557,50,0.113,51,0.015,67,1.267,84,0.809,88,0.007,89,0.007,92,1.723,110,1.891,117,1.788,119,1.776,120,2.019,121,2.166,122,2.166,123,2.019,124,2.797,125,1.891,129,3.152,131,2.923,132,2.166,133,2.019,135,2.635,195,4.466,199,3.332,200,2.336,203,3.119,208,4.495,209,3.332,210,2.79,211,3.332,212,2.433,214,3.332,215,2.725,216,3.332,274,1.202,308,5.021,316,3.119,325,3.955,326,3.119,347,1.672,353,1.58,354,1.202,356,1.953,358,1.202,359,1.202,378,1.411,406,3.585,416,3.332,484,2.433,577,4.855,578,3.598,579,4.855,580,3.598,582,3.598,608,3.332,1328,4.495,1348,5.337,1349,5.337,1350,5.337,1439,4.673,1682,4.495,1696,3.598,1706,6.239,1707,3.955,1708,3.955,1709,4.497,1710,4.497,1711,6.068,1712,6.068,1713,7.352,1714,4.497,1715,4.497,1716,4.495,1717,4.497,1718,4.497,1719,4.497,1720,4.497,1721,4.497]],["title/classes/UserResolver.html",[51,0.015,1716,3.213]],["body/classes/UserResolver.html",[3,0.09,4,0.09,5,0.081,10,0.227,11,1.066,13,0.836,17,0.985,20,0.864,22,1.734,23,0.01,24,0.993,25,0.7,26,1.259,28,0.878,30,1.155,35,0.26,45,0.445,50,0.09,51,0.012,52,1.864,53,2.139,55,2.478,63,3.39,84,1.366,88,0.006,89,0.006,98,3.198,106,2.406,111,2.249,162,3.33,170,2.327,171,2.327,200,1.864,210,2.226,240,1.19,243,1.442,250,1.614,253,1.927,276,3.39,309,2.226,350,2.035,353,0.934,354,0.959,355,2.714,361,2.714,366,1.558,376,1.611,379,1.5,392,2.658,528,3.215,587,2.226,588,2.488,793,5.331,850,4.558,854,4.147,1075,3.594,1172,2.871,1337,2.871,1361,6.215,1369,3.156,1383,4.558,1385,4.558,1392,3.156,1395,2.658,1396,3.156,1402,3.156,1403,3.156,1439,3.936,1696,2.871,1716,3.839,1722,3.156,1723,6.083,1724,5.183,1725,6.083,1726,3.588,1727,3.588,1728,5.183,1729,5.183,1730,3.588,1731,4.507,1732,3.588,1733,5.183,1734,3.588,1735,3.588,1736,3.588,1737,3.588,1738,3.588,1739,5.183,1740,3.588,1741,5.183,1742,3.588,1743,3.588,1744,5.183,1745,3.588,1746,3.588,1747,3.156,1748,3.588,1749,3.588,1750,3.588,1751,3.588,1752,3.588,1753,3.588,1754,3.588,1755,3.588,1756,3.588,1757,3.588,1758,3.588,1759,3.588,1760,3.588,1761,3.588,1762,3.588]],["title/injectables/UserService.html",[0,0.802,1439,2.562]],["body/injectables/UserService.html",[0,0.64,2,0.724,3,0.053,4,0.053,5,0.048,10,0.135,13,0.558,14,2.365,17,0.949,20,0.739,22,1.547,23,0.01,24,1.011,25,0.579,26,1.123,28,1.076,30,1.027,31,2.427,35,0.228,45,0.263,50,0.053,51,0.007,53,0.975,55,2.067,63,1.389,67,2.084,80,2.364,84,1.131,88,0.004,89,0.004,101,2.777,106,1.25,107,0.954,110,0.893,111,1.057,142,1.841,169,0.498,177,2.263,178,1.783,184,1.461,215,0.954,226,2.263,243,1.244,247,0.865,248,2.75,249,2.948,250,1.866,251,1.943,252,2.837,253,2.751,272,2.87,274,0.568,275,1.473,276,1.389,277,2.668,278,2.668,279,2.668,280,1.5,291,2.399,292,3.036,293,2.563,294,2.563,295,2.563,296,2.563,297,2.563,298,2.563,299,2.399,300,2.563,303,1.573,316,1.473,329,1.868,331,3.043,335,1.573,336,1.317,338,1.868,339,1.868,340,1.868,341,3.85,349,0.922,350,0.649,353,0.553,354,0.568,358,0.925,359,0.925,360,0.922,361,2.056,366,1.503,406,1.255,445,1.699,446,2.563,455,2.768,456,1.317,457,1.699,471,2.146,482,1.868,484,3.664,596,3.301,607,3.131,780,1.317,848,2.768,854,2.768,1092,1.389,1115,2.146,1209,1.699,1283,2.768,1337,1.699,1439,2.044,1452,5.572,1453,2.768,1457,3.043,1465,1.868,1479,3.85,1510,1.868,1518,1.868,1524,3.043,1658,4.038,1684,2.768,1685,3.043,1686,2.768,1690,3.043,1747,1.868,1763,1.868,1764,3.46,1765,3.46,1766,2.124,1767,3.46,1768,2.124,1769,3.46,1770,2.124,1771,3.46,1772,2.124,1773,3.46,1774,2.124,1775,2.124,1776,2.124,1777,3.46,1778,2.124,1779,3.46,1780,2.124,1781,2.124,1782,2.124,1783,2.124,1784,2.124,1785,3.46,1786,2.124,1787,4.378,1788,5.047,1789,4.378,1790,3.46,1791,3.46,1792,2.124,1793,2.124,1794,2.124,1795,2.124,1796,2.124,1797,2.124,1798,2.124,1799,2.124,1800,2.124,1801,2.124,1802,2.124,1803,2.124,1804,2.124,1805,2.124,1806,2.124,1807,2.124,1808,2.124,1809,2.124,1810,2.124,1811,3.46,1812,2.124,1813,2.124]],["title/classes/WrappedPayload.html",[51,0.015,1731,3.213]],["body/classes/WrappedPayload.html",[3,0.119,4,0.119,5,0.107,10,0.3,11,1.292,13,1.013,17,1.934,20,0.876,22,1.081,23,0.01,24,0.605,25,0.69,26,0.785,30,0.743,31,1.929,35,0.155,50,0.119,51,0.016,53,2.431,55,2.791,84,1.406,88,0.007,89,0.007,111,2.635,170,2.126,213,3.508,240,1.57,369,3.285,370,3.187,372,3.388,373,3.336,380,1.971,484,3.398,984,4.164,1219,5.206,1301,3.508,1317,3.789,1731,4.653,1814,4.164,1815,6.281,1816,6.281,1817,4.735,1818,4.735,1819,4.735,1820,6.281,1821,4.735,1822,4.735,1823,6.281,1824,4.735,1825,4.735,1826,6.281,1827,4.735,1828,6.281,1829,4.735,1830,4.735,1831,6.281,1832,4.735,1833,4.735]],["title/coverage.html",[1834,5.207]],["body/coverage.html",[0,1.506,1,1.411,5,0.049,6,3.332,7,3.926,8,1.897,9,1.897,23,0.01,24,0.276,25,0.191,51,0.028,55,0.802,88,0.004,89,0.004,90,2.513,91,1.598,93,1.897,102,1.411,109,1.121,123,3.059,130,1.411,152,1.897,161,1.897,169,0.821,196,1.496,234,1.897,239,1.496,241,1.726,243,0.967,309,1.338,310,1.411,311,1.496,327,1.897,335,1.598,336,1.338,343,1.285,344,0.937,346,3.273,355,0.879,361,0.879,363,1.351,368,0.937,369,0.852,370,0.827,371,0.937,372,0.879,373,0.879,374,1.13,382,1.598,383,3.16,384,1.897,393,1.411,406,1.275,407,1.411,441,1.897,444,1.338,453,1.338,454,1.726,471,5.618,491,1.598,492,1.897,500,1.411,507,1.598,508,1.897,516,1.338,569,1.275,572,1.598,583,1.897,590,1.897,609,1.003,610,3.712,612,1.003,613,1.039,614,1.078,615,1.003,616,1.039,621,1.078,624,1.078,627,1.078,648,1.598,649,3.069,650,2.596,651,1.897,653,1.411,663,1.897,665,1.598,666,2.596,667,1.897,680,1.411,709,1.897,711,2.596,720,1.496,726,1.598,727,1.897,734,1.496,753,1.726,773,1.598,774,3.54,777,1.897,781,1.897,803,2.756,804,1.897,828,1.897,833,1.897,840,1.897,842,1.338,869,1.598,870,2.596,871,2.596,875,1.496,897,1.897,960,1.598,963,1.897,964,1.897,997,3.893,1005,1.411,1008,1.598,1009,1.598,1011,1.726,1013,1.598,1016,1.897,1065,1.598,1066,1.897,1090,1.338,1092,1.411,1102,1.726,1103,3.332,1104,1.897,1144,1.897,1240,1.897,1257,1.726,1258,2.804,1274,1.726,1328,1.598,1329,1.897,1346,1.411,1353,1.598,1357,1.897,1360,1.897,1395,1.598,1397,1.726,1398,1.726,1437,1.897,1439,1.275,1542,1.411,1545,1.411,1546,1.496,1547,1.496,1549,1.726,1553,3.926,1554,5.227,1556,1.598,1563,1.897,1587,1.897,1603,1.726,1604,1.897,1605,1.897,1618,1.726,1620,1.598,1643,1.726,1682,1.598,1683,1.897,1716,1.598,1722,1.897,1731,1.598,1763,1.897,1814,1.897,1834,1.897,1835,1.897,1836,2.157,1837,2.157,1838,8.269,1839,7.162,1840,1.897,1841,8.517,1842,7.722,1843,3.082,1844,6.589,1845,1.897,1846,2.157,1847,2.157,1848,1.897,1849,1.897,1850,1.897,1851,3.504,1852,4.425,1853,1.897,1854,2.157,1855,2.157,1856,5.094,1857,2.157,1858,2.157,1859,1.897,1860,2.157,1861,3.504,1862,1.897,1863,7.997,1864,2.157,1865,2.157,1866,2.157,1867,2.157,1868,1.897,1869,4.48,1870,1.897,1871,3.082,1872,1.897,1873,3.082,1874,1.897,1875,3.892,1876,1.897,1877,3.892,1878,1.897,1879,1.897,1880,3.082,1881,1.897,1882,3.278,1883,3.278,1884,2.157,1885,2.157,1886,1.897,1887,2.157,1888,2.157]],["title/dependencies.html",[120,2.342,1889,3.184]],["body/dependencies.html",[23,0.01,38,4.776,39,4.332,40,4.332,42,4.332,43,3.941,44,4.332,45,0.61,46,2.139,49,4.332,51,0.022,88,0.007,89,0.007,107,2.212,120,2.212,137,3.222,200,2.559,203,3.416,206,4.332,212,2.664,271,3.222,275,3.416,314,3.416,324,3.941,353,1.678,354,1.316,449,3.416,456,3.055,537,4.332,538,5.158,587,3.055,599,3.222,780,3.055,814,3.222,830,2.664,847,4.332,906,5.75,912,4.332,913,4.332,952,4.332,1570,4.332,1890,6.446,1891,4.926,1892,4.926,1893,4.926,1894,6.446,1895,4.926,1896,4.926,1897,8.117,1898,6.446,1899,4.926,1900,4.926,1901,4.926,1902,4.926,1903,4.926,1904,4.926,1905,4.926,1906,6.446,1907,4.332,1908,4.926,1909,4.926,1910,4.926,1911,4.926,1912,4.332,1913,4.926,1914,4.926,1915,4.926,1916,4.926,1917,4.926,1918,4.926,1919,4.926,1920,4.926,1921,4.926,1922,4.926,1923,4.926,1924,4.926,1925,4.926,1926,4.926,1927,4.926,1928,4.926,1929,4.926,1930,4.926,1931,4.926,1932,4.926,1933,4.926,1934,4.926,1935,4.926,1936,4.926,1937,4.926]],["title/miscellaneous/functions.html",[1938,2.368,1939,4.588]],["body/miscellaneous/functions.html",[6,3.464,7,3.464,10,0.336,22,1.699,23,0.01,24,1.001,25,0.658,26,1.233,30,1.059,88,0.008,89,0.008,123,4.073,335,5.004,383,3.285,454,5.952,649,3.672,734,4.685,735,3.923,737,3.376,738,4.685,1542,5.125,1546,4.685,1549,5.952,1552,4.657,1553,3.464,1840,4.657,1843,5.941,1845,4.657,1848,4.657,1849,4.657,1850,4.657,1853,4.657,1859,4.657,1872,4.657,1882,3.923,1883,5.511,1938,3.464,1939,4.657,1940,8.599,1941,5.405,1942,5.405,1943,5.296,1944,5.296,1945,5.941,1946,5.296]],["title/index.html",[10,0.229,1947,3.184,1948,3.184]],["body/index.html",[23,0.008,88,0.008,89,0.008,133,2.439,158,3.767,166,3.767,213,5.576,217,4.777,238,3.767,243,1.031,271,3.553,353,1.959,449,3.767,484,2.938,499,4.777,530,4.777,538,5.493,599,3.553,817,6.022,830,3.713,906,4.346,951,4.346,1573,4.346,1949,6.038,1950,5.432,1951,5.432,1952,5.432,1953,6.865,1954,5.432,1955,5.432,1956,5.432,1957,5.432,1958,5.432,1959,5.432,1960,5.432,1961,5.432,1962,5.432,1963,6.865,1964,5.432,1965,5.432,1966,5.432,1967,5.432,1968,5.432,1969,5.432,1970,5.432,1971,5.432,1972,4.777,1973,5.432,1974,5.432,1975,5.432,1976,6.865,1977,5.432,1978,5.432,1979,6.865,1980,5.432,1981,5.432,1982,6.865,1983,5.432,1984,7.527,1985,6.865,1986,5.432,1987,5.432,1988,5.432,1989,5.432,1990,5.432,1991,5.432,1992,5.432,1993,5.432,1994,5.432,1995,5.432,1996,5.432,1997,6.865,1998,5.432,1999,5.432,2000,4.024,2001,4.346,2002,4.777,2003,5.432,2004,6.865,2005,5.432,2006,5.432,2007,5.432]],["title/license.html",[1947,3.184,1948,3.184,2000,2.682]],["body/license.html",[23,0.008,88,0.008,89,0.008,133,2.474,879,4.408,949,6.092,1180,4.845,1195,4.845,1573,4.408,1835,4.845,1907,4.845,1912,4.845,1949,4.845,2000,4.081,2001,4.408,2002,4.845,2008,7.576,2009,5.509,2010,5.509,2011,6.926,2012,5.509,2013,5.509,2014,5.509,2015,5.509,2016,5.509,2017,5.509,2018,6.926,2019,8.659,2020,5.509,2021,5.509,2022,5.509,2023,7.576,2024,5.509,2025,6.926,2026,5.509,2027,5.509,2028,5.509,2029,5.509,2030,5.509,2031,5.509,2032,5.509,2033,5.509,2034,6.926,2035,5.509,2036,5.509,2037,5.509,2038,5.509,2039,5.509,2040,5.509,2041,6.926,2042,6.926,2043,5.509,2044,5.509,2045,5.509,2046,5.509,2047,5.509,2048,5.509,2049,5.509,2050,5.509,2051,5.509,2052,5.509,2053,5.509,2054,5.509,2055,5.509,2056,5.509,2057,5.509,2058,5.509,2059,5.509,2060,5.509,2061,5.509,2062,5.509,2063,5.509,2064,5.509,2065,5.509,2066,5.509,2067,5.509]],["title/modules.html",[119,2.338]],["body/modules.html",[23,0.008,88,0.008,89,0.008,118,3.968,119,2.115,129,2.783,191,5.829,195,3.024,308,3.504,398,3.968,402,3.504,403,5.146,564,3.968,568,3.715,657,3.968,698,3.968,996,3.715,1133,3.968,1342,3.968,1706,3.968,2068,8.887,2069,8.887,2070,8.887,2071,9.022,2072,8.433,2073,8.433]],["title/overview.html",[2074,5.207]],["body/overview.html",[1,3.941,2,1.203,23,0.01,88,0.006,89,0.006,92,1.352,102,3.941,109,3.924,117,0.918,118,5.732,119,1.393,120,1.585,121,1.7,122,1.7,123,1.585,124,1.437,125,1.483,126,3.103,127,3.103,128,3.103,129,4.261,130,3.941,131,2.466,132,1.7,133,1.585,191,6.331,192,3.103,193,3.103,194,3.103,195,4.775,196,4.179,240,1.17,304,3.103,305,3.103,306,3.103,307,3.103,308,4.591,309,4.685,310,3.941,311,4.179,345,1.352,393,3.941,398,6.077,399,3.103,400,3.103,401,3.103,402,3.941,403,5.239,500,3.941,516,4.799,564,6.134,565,3.103,566,3.103,568,5.469,569,3.905,653,3.941,657,5.424,658,3.103,659,3.103,680,3.941,698,5.732,699,3.103,701,3.103,842,4.101,956,3.103,957,3.103,996,4.179,1090,3.738,1133,6.077,1134,3.103,1135,3.103,1136,3.103,1342,6.011,1343,3.103,1345,3.103,1346,3.941,1439,3.56,1615,3.103,1616,3.103,1617,3.103,1706,5.842,1707,3.103,1708,3.103,2074,3.103,2075,3.528,2076,3.528,2077,3.528,2078,3.528,2079,3.528,2080,5.12]],["title/properties.html",[11,1.073,1889,3.184]],["body/properties.html",[11,1.373,23,0.01,88,0.009,89,0.009,166,4.632,181,2.999,2000,4.948,2001,5.344,2081,6.679,2082,6.679,2083,6.679,2084,6.679,2085,6.679,2086,6.679,2087,6.679,2088,6.679]],["title/miscellaneous/typealiases.html",[1938,2.368,2089,5.216]],["body/miscellaneous/typealiases.html",[10,0.282,23,0.01,24,0.936,25,0.755,28,0.587,65,2.618,88,0.007,89,0.007,108,4.824,169,1.717,241,3.564,243,1.145,258,1.656,274,2.108,346,1.934,347,2.242,356,2.618,357,2.544,358,1.957,359,1.957,364,2.707,367,1.289,369,2.381,370,2.31,372,2.456,373,2.456,378,2.298,380,2.145,381,1.978,395,4.181,429,3.943,495,4.466,539,4.824,610,2.226,711,3.3,717,4.181,722,4.466,774,3.564,793,4.824,830,2.409,870,3.3,871,4.466,873,4.824,997,2.631,1075,5.882,1093,4.824,1103,2.913,1139,5.302,1538,4.181,1553,2.913,1643,3.564,1658,4.824,1882,3.3,1883,4.466,1938,2.913,1941,3.564,1942,3.564,1945,5.302,2090,4.454,2091,6.834,2092,8.065,2093,7.888,2094,6.029,2095,6.834,2096,4.454,2097,6.834,2098,4.454,2099,5.302,2100,6.834,2101,6.029,2102,6.029,2103,4.454,2104,4.454,2105,4.454,2106,4.454,2107,4.454,2108,4.454,2109,4.454,2110,4.454]],["title/miscellaneous/variables.html",[1938,2.368,2111,4.588]],["body/miscellaneous/variables.html",[10,0.178,14,0.812,23,0.01,25,0.619,28,0.952,31,1.143,34,1.813,55,2.193,67,1.794,80,1.43,84,1.495,88,0.005,89,0.005,96,1.402,101,1.402,104,1.657,158,1.945,170,3.77,171,3.844,212,2.842,215,1.26,243,0.533,250,0.985,272,1.351,326,1.945,358,1.153,359,1.153,367,1.248,379,0.812,381,1.945,406,2.548,407,2.821,412,2.078,429,1.835,444,2.675,453,2.675,466,2.244,471,1.74,554,2.467,596,2.821,607,2.675,712,2.244,713,2.244,717,1.945,737,2.626,753,3.451,786,2.078,799,2.467,830,1.517,862,2.821,926,1.945,997,3.104,1001,2.244,1008,3.893,1009,3.893,1011,3.451,1092,2.821,1103,1.835,1115,3.259,1219,2.991,1258,3.451,1260,4.621,1262,5.187,1274,5.094,1275,2.467,1276,2.467,1277,2.467,1278,2.467,1279,2.467,1280,2.467,1281,2.467,1282,2.467,1283,3.451,1284,3.793,1285,2.467,1286,2.467,1287,3.793,1288,2.467,1289,2.467,1290,2.467,1291,2.467,1292,2.467,1293,2.467,1294,2.467,1295,2.467,1296,2.467,1297,2.467,1298,2.467,1299,2.467,1300,2.467,1301,2.078,1302,2.467,1303,2.467,1304,4.621,1305,4.621,1306,3.793,1307,3.793,1308,2.467,1309,2.467,1310,2.467,1311,3.793,1312,2.467,1313,2.467,1314,2.467,1315,2.467,1316,2.467,1317,3.451,1318,2.467,1319,2.467,1320,2.467,1395,3.195,1397,3.451,1398,3.451,1545,2.821,1547,2.991,1553,1.835,1555,2.244,1684,3.451,1686,3.451,1700,3.793,1862,2.467,1868,2.467,1869,2.467,1870,3.793,1871,2.467,1873,2.467,1874,4.621,1875,4.621,1876,2.467,1877,5.912,1878,2.467,1879,2.467,1880,2.467,1881,2.467,1882,2.078,1883,3.195,1886,3.793,1938,1.835,1941,3.451,1942,2.244,1972,2.467,2099,2.467,2111,2.467,2112,5.898,2113,2.805,2114,4.313,2115,2.805,2116,4.313,2117,2.805,2118,2.805,2119,2.805,2120,4.313,2121,2.805,2122,2.805,2123,2.805,2124,2.805,2125,2.805,2126,2.805,2127,2.805,2128,2.805,2129,2.805,2130,2.805,2131,4.313,2132,2.805,2133,2.805,2134,2.805,2135,2.805,2136,2.805,2137,2.805,2138,2.805,2139,2.805,2140,2.805,2141,2.805,2142,2.805,2143,4.313,2144,4.313,2145,2.805,2146,2.805,2147,2.805,2148,2.805,2149,2.805,2150,4.313,2151,2.805,2152,2.805,2153,2.805,2154,5.254,2155,4.313,2156,4.313,2157,2.805,2158,2.805,2159,2.805,2160,2.805,2161,2.805]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":471,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/Neo4jService.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":2082,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":827,"title":{"controllers/HealthController-1.html":{},"interfaces/IQuery-1.html":{},"classes/User-1.html":{}},"body":{}}],["1).length",{"_index":944,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["1.22.5",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["10.3.3",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2078,"title":{},"body":{"overview.html":{}}}],["12.0.0",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["12.1.0",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["16.8.0",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["17.11.0",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["1].id",{"_index":1421,"title":{},"body":{"classes/PingResolver.html":{}}}],["2",{"_index":832,"title":{"controllers/HealthController-2.html":{}},"body":{}}],["2.5.3",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1458,"title":{},"body":{"injectables/PingService.html":{}}}],["2024",{"_index":2010,"title":{},"body":{"license.html":{}}}],["21",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2077,"title":{},"body":{"overview.html":{}}}],["23",{"_index":2079,"title":{},"body":{"overview.html":{}}}],["24",{"_index":2080,"title":{},"body":{"overview.html":{}}}],["2d",{"_index":1308,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":839,"title":{"controllers/HealthController-3.html":{}},"body":{"injectables/JwtStrategy.html":{}}}],["3.0.2",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["3.460.0",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":1312,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["4.1.14",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["4.7.2",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["4.9.2",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["4326",{"_index":1303,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["4979",{"_index":1309,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":919,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5.0.5",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["5.14.0",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":83,"title":{},"body":{"injectables/AWSService.html":{}}}],["600",{"_index":87,"title":{},"body":{"injectables/AWSService.html":{}}}],["6576257c3120201ecfdf6482",{"_index":490,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["7.8.1",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":1307,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["87",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["9]+)`/gi",{"_index":1126,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["__dirname",{"_index":414,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["__resolvetype",{"_index":1330,"title":{},"body":{"classes/PayloadResolver.html":{}}}],["__resolvetype(obj",{"_index":1333,"title":{},"body":{"classes/PayloadResolver.html":{}}}],["__typename",{"_index":276,"title":{},"body":{"classes/AuthEntity.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["_data",{"_index":485,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["_id",{"_index":1283,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["_key",{"_index":68,"title":{},"body":{"injectables/AWSService.html":{}}}],["_key}.${type.split('/')[1",{"_index":70,"title":{},"body":{"injectables/AWSService.html":{}}}],["_labels",{"_index":1285,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["_payload",{"_index":1073,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["_ping",{"_index":1157,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["_type",{"_index":1289,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":2040,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":362,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{}}}],["access",{"_index":896,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["accesskeyid",{"_index":59,"title":{},"body":{"injectables/AWSService.html":{}}}],["ack",{"_index":1588,"title":{},"body":{"injectables/RMQService.html":{}}}],["ack(context",{"_index":1591,"title":{},"body":{"injectables/RMQService.html":{}}}],["acl",{"_index":75,"title":{},"body":{"injectables/AWSService.html":{}}}],["action",{"_index":2062,"title":{},"body":{"license.html":{}}}],["activity",{"_index":158,"title":{},"body":{"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/PingService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["activity.controller",{"_index":138,"title":{},"body":{"modules/ActivityModule.html":{}}}],["activity.id",{"_index":190,"title":{},"body":{"injectables/ActivityService.html":{}}}],["activity.service",{"_index":103,"title":{},"body":{"controllers/ActivityController.html":{},"modules/ActivityModule.html":{}}}],["activity_port",{"_index":150,"title":{},"body":{"modules/ActivityModule.html":{}}}],["activity_service",{"_index":1870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activitycontroller",{"_index":91,"title":{"controllers/ActivityController.html":{}},"body":{"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"coverage.html":{}}}],["activitycount",{"_index":247,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["activityid",{"_index":113,"title":{},"body":{"controllers/ActivityController.html":{},"injectables/ChannelService.html":{},"interfaces/Forum.html":{}}}],["activitymodule",{"_index":118,"title":{"modules/ActivityModule.html":{}},"body":{"modules/ActivityModule.html":{},"modules.html":{},"overview.html":{}}}],["activityrepository",{"_index":130,"title":{"injectables/ActivityRepository.html":{}},"body":{"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"coverage.html":{},"overview.html":{}}}],["activityservice",{"_index":102,"title":{"injectables/ActivityService.html":{}},"body":{"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"coverage.html":{},"overview.html":{}}}],["add",{"_index":1168,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["added",{"_index":990,"title":{},"body":{"injectables/MessageService.html":{},"injectables/Neo4jService.html":{}}}],["addmembership",{"_index":1684,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["addmembership(payload",{"_index":1687,"title":{},"body":{"controllers/UserController.html":{}}}],["addmembership(userid",{"_index":1767,"title":{},"body":{"injectables/UserService.html":{}}}],["addmessage",{"_index":965,"title":{},"body":{"injectables/MessageService.html":{}}}],["addmessage(message",{"_index":970,"title":{},"body":{"injectables/MessageService.html":{}}}],["addparticipant",{"_index":1145,"title":{},"body":{"injectables/Neo4jService.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["addparticipant(@args('id",{"_index":1430,"title":{},"body":{"classes/PingResolver.html":{}}}],["addparticipant(id",{"_index":636,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["addparticipant(userid",{"_index":1153,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["admin",{"_index":599,"title":{},"body":{"injectables/ChannelService.html":{},"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"interfaces/Forum.html":{},"dependencies.html":{},"index.html":{}}}],["admin.app.app",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin.credential.cert(serviceaccountpath",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin.initializeapp",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterinit",{"_index":512,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["afterinit(server",{"_index":523,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["against",{"_index":1199,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["algorithms",{"_index":935,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["aliases",{"_index":2090,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":1118,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["amil",{"_index":2086,"title":{},"body":{"properties.html":{}}}],["amilmoh155@gmail.com",{"_index":2007,"title":{},"body":{"index.html":{}}}],["amilmohd155",{"_index":2003,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["and/or",{"_index":2032,"title":{},"body":{"license.html":{}}}],["api",{"_index":950,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["api/v1",{"_index":669,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["apollo",{"_index":1982,"title":{},"body":{"index.html":{}}}],["apollo/gateway",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["apollo/server",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["apollo/server/plugin/landingpage/default",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["apollo/subgraph",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":577,"title":{},"body":{"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["apollofederationdriverconfig",{"_index":578,"title":{},"body":{"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["apollogatewaydriver",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["apollogatewaydriverconfig",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagelocaldefault",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["app",{"_index":1972,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app.auth",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.close",{"_index":1586,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.messaging",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.service",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/PingModule.html":{},"classes/PingResolver.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["app/auth/entity/auth.entity",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["app/auth/service/auth.service",{"_index":908,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["app/common",{"_index":110,"title":{},"body":{"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"modules/DeletionServiceModule.html":{},"controllers/Neo4jController.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["app/common/utils/entities",{"_index":1396,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["app/common/utils/helpers",{"_index":1399,"title":{},"body":{"classes/PingResolver.html":{}}}],["app/firebase",{"_index":409,"title":{},"body":{"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{}}}],["app/neo4j",{"_index":1141,"title":{},"body":{"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{}}}],["app/neo4j/neo4j",{"_index":1140,"title":{},"body":{"modules/Neo4jModule.html":{}}}],["app/prisma",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/HealthController-2.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["application/json",{"_index":688,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["application/json')@useguards(undefined",{"_index":674,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["appmodule",{"_index":191,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoptions",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../channel.schema.ts",{"_index":2101,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../main.ts",{"_index":1940,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../message.dto.ts",{"_index":2091,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../ping.schema.ts",{"_index":2093,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.entity.ts",{"_index":2097,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.schema.ts",{"_index":2092,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/activity/.env",{"_index":144,"title":{},"body":{"modules/ActivityModule.html":{}}}],["apps/activity/src/activity.controller.ts",{"_index":93,"title":{},"body":{"controllers/ActivityController.html":{},"coverage.html":{}}}],["apps/activity/src/activity.controller.ts:14",{"_index":100,"title":{},"body":{"controllers/ActivityController.html":{}}}],["apps/activity/src/activity.module.ts",{"_index":134,"title":{},"body":{"modules/ActivityModule.html":{}}}],["apps/activity/src/activity.service.ts",{"_index":161,"title":{},"body":{"injectables/ActivityService.html":{},"coverage.html":{}}}],["apps/activity/src/activity.service.ts:11",{"_index":168,"title":{},"body":{"injectables/ActivityService.html":{}}}],["apps/activity/src/activity.service.ts:6",{"_index":165,"title":{},"body":{"injectables/ActivityService.html":{}}}],["apps/activity/src/activity.service.ts:9",{"_index":173,"title":{},"body":{"injectables/ActivityService.html":{}}}],["apps/activity/src/main.ts",{"_index":1840,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/activity/src/service/prisma.service.ts",{"_index":152,"title":{},"body":{"injectables/ActivityRepository.html":{},"coverage.html":{}}}],["apps/activity/src/service/prisma.service.ts:6",{"_index":156,"title":{},"body":{"injectables/ActivityRepository.html":{}}}],["apps/broadcast",{"_index":383,"title":{},"body":{"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/deletion",{"_index":649,"title":{},"body":{"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/file",{"_index":6,"title":{},"body":{"injectables/AWSService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/forum/src/channel/channel.controller.ts",{"_index":492,"title":{},"body":{"controllers/ChannelController.html":{},"coverage.html":{}}}],["apps/forum/src/channel/channel.controller.ts:19",{"_index":497,"title":{},"body":{"controllers/ChannelController.html":{}}}],["apps/forum/src/channel/channel.gatway.ts",{"_index":508,"title":{},"body":{"classes/ChannelGateway.html":{},"coverage.html":{}}}],["apps/forum/src/channel/channel.gatway.ts:20",{"_index":519,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["apps/forum/src/channel/channel.gatway.ts:21",{"_index":517,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["apps/forum/src/channel/channel.gatway.ts:24",{"_index":524,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["apps/forum/src/channel/channel.gatway.ts:27",{"_index":529,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["apps/forum/src/channel/channel.gatway.ts:41",{"_index":522,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["apps/forum/src/channel/channel.gatway.ts:44",{"_index":533,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["apps/forum/src/channel/channel.module.ts",{"_index":570,"title":{},"body":{"modules/ChannelModule.html":{}}}],["apps/forum/src/channel/channel.resolver.ts",{"_index":583,"title":{},"body":{"classes/ChannelResolver.html":{},"coverage.html":{}}}],["apps/forum/src/channel/channel.resolver.ts:6",{"_index":586,"title":{},"body":{"classes/ChannelResolver.html":{}}}],["apps/forum/src/channel/channel.service.ts",{"_index":590,"title":{},"body":{"injectables/ChannelService.html":{},"coverage.html":{}}}],["apps/forum/src/channel/channel.service.ts:11",{"_index":593,"title":{},"body":{"injectables/ChannelService.html":{}}}],["apps/forum/src/channel/channel.service.ts:6",{"_index":592,"title":{},"body":{"injectables/ChannelService.html":{}}}],["apps/forum/src/channel/channel.service.ts:9",{"_index":595,"title":{},"body":{"injectables/ChannelService.html":{}}}],["apps/forum/src/channel/graphql/channel.schema.ts",{"_index":774,"title":{},"body":{"interfaces/Forum.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/forum/src/common/dto/message.dto",{"_index":502,"title":{},"body":{"controllers/ChannelController.html":{},"injectables/ChannelService.html":{},"injectables/MessageService.html":{}}}],["apps/forum/src/common/dto/message.dto.ts",{"_index":2103,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/forum/src/main.ts",{"_index":1848,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/forum/src/message/message.module.ts",{"_index":959,"title":{},"body":{"modules/MessageModule.html":{}}}],["apps/forum/src/message/message.resolver.ts",{"_index":963,"title":{},"body":{"classes/MessageResolver.html":{},"coverage.html":{}}}],["apps/forum/src/message/message.service.ts",{"_index":964,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["apps/forum/src/message/message.service.ts:26",{"_index":971,"title":{},"body":{"injectables/MessageService.html":{}}}],["apps/forum/src/message/message.service.ts:44",{"_index":973,"title":{},"body":{"injectables/MessageService.html":{}}}],["apps/forum/src/message/message.service.ts:6",{"_index":969,"title":{},"body":{"injectables/MessageService.html":{}}}],["apps/forum/src/message/message.service.ts:9",{"_index":976,"title":{},"body":{"injectables/MessageService.html":{}}}],["apps/forum/src/service/forum.service",{"_index":978,"title":{},"body":{"injectables/MessageService.html":{}}}],["apps/forum/src/service/forum.service.ts",{"_index":777,"title":{},"body":{"injectables/ForumRepository.html":{},"coverage.html":{}}}],["apps/forum/src/service/forum.service.ts:6",{"_index":779,"title":{},"body":{"injectables/ForumRepository.html":{}}}],["apps/gateway/.env",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/gateway/src/app.module.ts",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/gateway/src/app.service.ts",{"_index":234,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/gateway/src/app.service.ts:5",{"_index":236,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/gateway/src/main.ts",{"_index":1849,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/neo4j/.env",{"_index":1142,"title":{},"body":{"modules/Neo4jModule.html":{}}}],["apps/neo4j/src/health/health.controller.ts",{"_index":828,"title":{},"body":{"controllers/HealthController-1.html":{},"coverage.html":{}}}],["apps/neo4j/src/health/health.controller.ts:21",{"_index":829,"title":{},"body":{"controllers/HealthController-1.html":{}}}],["apps/neo4j/src/main.ts",{"_index":1850,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/neo4j/src/neo4j.controller.ts",{"_index":1066,"title":{},"body":{"controllers/Neo4jController.html":{},"coverage.html":{}}}],["apps/neo4j/src/neo4j.controller.ts:21",{"_index":1086,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["apps/neo4j/src/neo4j.controller.ts:27",{"_index":1083,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["apps/neo4j/src/neo4j.controller.ts:33",{"_index":1072,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["apps/neo4j/src/neo4j.controller.ts:59",{"_index":1077,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["apps/neo4j/src/neo4j.controller.ts:68",{"_index":1080,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["apps/neo4j/src/neo4j.controller.ts:77",{"_index":1089,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["apps/neo4j/src/neo4j.module.ts",{"_index":1137,"title":{},"body":{"modules/Neo4jModule.html":{}}}],["apps/neo4j/src/neo4j.service.ts",{"_index":1144,"title":{},"body":{"injectables/Neo4jService.html":{},"coverage.html":{}}}],["apps/neo4j/src/neo4j.service.ts:129",{"_index":1160,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["apps/neo4j/src/neo4j.service.ts:13",{"_index":1166,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["apps/neo4j/src/neo4j.service.ts:16",{"_index":1159,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["apps/neo4j/src/neo4j.service.ts:194",{"_index":1154,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["apps/neo4j/src/neo4j.service.ts:217",{"_index":1164,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["apps/neo4j/src/neo4j.service.ts:37",{"_index":1156,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["apps/neo4j/src/neo4j.service.ts:68",{"_index":1162,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["apps/neo4j/src/neo4j.service.ts:7",{"_index":1151,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["apps/ping/src/health/health.controller.ts",{"_index":840,"title":{},"body":{"controllers/HealthController-3.html":{},"coverage.html":{}}}],["apps/ping/src/health/health.controller.ts:21",{"_index":841,"title":{},"body":{"controllers/HealthController-3.html":{}}}],["apps/ping/src/main.ts",{"_index":1853,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/ping/src/ping/graphql/ping.schema.ts",{"_index":610,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/ping/src/ping/graphql/ping.schema.ts:92",{"_index":865,"title":{},"body":{"interfaces/IQuery-1.html":{}}}],["apps/ping/src/ping/graphql/ping.schema.ts:93",{"_index":863,"title":{},"body":{"interfaces/IQuery-1.html":{}}}],["apps/ping/src/ping/graphql/ping.schema.ts:94",{"_index":866,"title":{},"body":{"interfaces/IQuery-1.html":{}}}],["apps/ping/src/ping/graphql/ping.schema.ts:95",{"_index":864,"title":{},"body":{"interfaces/IQuery-1.html":{}}}],["apps/ping/src/ping/ping.module.ts",{"_index":1347,"title":{},"body":{"modules/PingModule.html":{}}}],["apps/ping/src/ping/ping.resolver.ts",{"_index":1360,"title":{},"body":{"classes/PingResolver.html":{},"coverage.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:110",{"_index":1376,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:129",{"_index":1368,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:135",{"_index":1382,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:143",{"_index":1384,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:171",{"_index":1391,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:23",{"_index":1364,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:25",{"_index":1366,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:29",{"_index":1371,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:34",{"_index":1388,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:40",{"_index":1378,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:46",{"_index":1374,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.resolver.ts:76",{"_index":1380,"title":{},"body":{"classes/PingResolver.html":{}}}],["apps/ping/src/ping/ping.service.ts",{"_index":1437,"title":{},"body":{"injectables/PingService.html":{},"coverage.html":{}}}],["apps/ping/src/ping/ping.service.ts:119",{"_index":1449,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:187",{"_index":1446,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:216",{"_index":1444,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:252",{"_index":1447,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:26",{"_index":1440,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:317",{"_index":1441,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:34",{"_index":1451,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:358",{"_index":1448,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:41",{"_index":1442,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/ping/ping.service.ts:411",{"_index":1445,"title":{},"body":{"injectables/PingService.html":{}}}],["apps/ping/src/service/prisma.service",{"_index":1355,"title":{},"body":{"modules/PingModule.html":{}}}],["apps/ping/src/service/prisma.service.ts",{"_index":1357,"title":{},"body":{"injectables/PingRepository.html":{},"coverage.html":{}}}],["apps/ping/src/service/prisma.service.ts:6",{"_index":1359,"title":{},"body":{"injectables/PingRepository.html":{}}}],["apps/users/entity/user.entity",{"_index":1747,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["apps/users/entity/user.entity.ts",{"_index":1643,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/users/entity/user.entity.ts:101",{"_index":1659,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:33",{"_index":1649,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:34",{"_index":1646,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:35",{"_index":1650,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:36",{"_index":1648,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:37",{"_index":1654,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:38",{"_index":1652,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:39",{"_index":1651,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:40",{"_index":1647,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:41",{"_index":1653,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:42",{"_index":1645,"title":{},"body":{"classes/User.html":{}}}],["apps/users/entity/user.entity.ts:74",{"_index":1657,"title":{},"body":{"classes/User.html":{}}}],["apps/users/src/common/wrappayload.ts",{"_index":1814,"title":{},"body":{"classes/WrappedPayload.html":{},"coverage.html":{}}}],["apps/users/src/common/wrappayload.ts:10",{"_index":1818,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["apps/users/src/common/wrappayload.ts:11",{"_index":1817,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["apps/users/src/common/wrappayload.ts:12",{"_index":1816,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["apps/users/src/common/wrappayload.ts:28",{"_index":1821,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["apps/users/src/common/wrappayload.ts:9",{"_index":1819,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["apps/users/src/health/health.controller.ts",{"_index":833,"title":{},"body":{"controllers/HealthController-2.html":{},"coverage.html":{}}}],["apps/users/src/health/health.controller.ts:19",{"_index":834,"title":{},"body":{"controllers/HealthController-2.html":{}}}],["apps/users/src/main.ts",{"_index":1859,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/users/src/user/graphql/user.schema",{"_index":798,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["apps/users/src/user/graphql/user.schema.ts",{"_index":346,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:101",{"_index":851,"title":{},"body":{"classes/IMutation.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:103",{"_index":853,"title":{},"body":{"classes/IMutation.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:105",{"_index":852,"title":{},"body":{"classes/IMutation.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:14",{"_index":647,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:15",{"_index":639,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:16",{"_index":640,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:17",{"_index":641,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:18",{"_index":644,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:19",{"_index":646,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:20",{"_index":645,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:21",{"_index":642,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:22",{"_index":643,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:23",{"_index":638,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:27",{"_index":1635,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:28",{"_index":1642,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:29",{"_index":1633,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:30",{"_index":1634,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:31",{"_index":1636,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:32",{"_index":1639,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:33",{"_index":1640,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:34",{"_index":1641,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:35",{"_index":1632,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:36",{"_index":1637,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:37",{"_index":1638,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:45",{"_index":993,"title":{},"body":{"classes/Name.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:46",{"_index":995,"title":{},"body":{"classes/Name.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:47",{"_index":994,"title":{},"body":{"classes/Name.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:51",{"_index":1676,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:52",{"_index":1675,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:53",{"_index":1681,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:54",{"_index":1677,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:55",{"_index":1679,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:56",{"_index":1673,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:57",{"_index":1678,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:58",{"_index":1680,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:59",{"_index":1672,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:60",{"_index":1674,"title":{},"body":{"classes/User-1.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:64",{"_index":857,"title":{},"body":{"classes/IQuery.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:66",{"_index":858,"title":{},"body":{"classes/IQuery.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:68",{"_index":856,"title":{},"body":{"classes/IQuery.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:72",{"_index":868,"title":{},"body":{"classes/InvalidInputError.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:76",{"_index":1327,"title":{},"body":{"classes/NotFoundError.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:80",{"_index":1630,"title":{},"body":{"classes/UnauthorizedError.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:84",{"_index":772,"title":{},"body":{"classes/ForbiddenError.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:88",{"_index":867,"title":{},"body":{"classes/InternalServerError.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:92",{"_index":1631,"title":{},"body":{"classes/UnknownError.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:96",{"_index":1340,"title":{},"body":{"classes/Ping.html":{}}}],["apps/users/src/user/graphql/user.schema.ts:97",{"_index":1341,"title":{},"body":{"classes/Ping.html":{}}}],["apps/users/src/user/payload.resolver.ts",{"_index":1329,"title":{},"body":{"classes/PayloadResolver.html":{},"coverage.html":{}}}],["apps/users/src/user/payload.resolver.ts:11",{"_index":1335,"title":{},"body":{"classes/PayloadResolver.html":{}}}],["apps/users/src/user/payload.resolver.ts:8",{"_index":1332,"title":{},"body":{"classes/PayloadResolver.html":{}}}],["apps/users/src/user/user.controller.ts",{"_index":1683,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/users/src/user/user.controller.ts:26",{"_index":1692,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/users/src/user/user.controller.ts:34",{"_index":1689,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/users/src/user/user.controller.ts:45",{"_index":1695,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/users/src/user/user.module.ts",{"_index":1710,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/users/src/user/user.resolver.ts",{"_index":1722,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/users/src/user/user.resolver.ts:18",{"_index":1727,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.resolver.ts:20",{"_index":1730,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.resolver.ts:21",{"_index":1732,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.resolver.ts:25",{"_index":1737,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.resolver.ts:30",{"_index":1742,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.resolver.ts:35",{"_index":1740,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.resolver.ts:43",{"_index":1734,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.resolver.ts:48",{"_index":1745,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.resolver.ts:53",{"_index":1743,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/users/src/user/user.service.ts",{"_index":1763,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/users/src/user/user.service.ts:120",{"_index":1776,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/users/src/user/user.service.ts:130",{"_index":1780,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/users/src/user/user.service.ts:14",{"_index":1766,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/users/src/user/user.service.ts:198",{"_index":1772,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/users/src/user/user.service.ts:220",{"_index":1775,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/users/src/user/user.service.ts:23",{"_index":1770,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/users/src/user/user.service.ts:241",{"_index":1768,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/users/src/user/user.service.ts:263",{"_index":1778,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/users/src/user/user.service.ts:92",{"_index":1774,"title":{},"body":{"injectables/UserService.html":{}}}],["appservice",{"_index":196,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":1974,"title":{},"body":{"index.html":{}}}],["args",{"_index":528,"title":{},"body":{"classes/ChannelGateway.html":{},"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/PingResolver.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"classes/UserResolver.html":{}}}],["args('after",{"_index":1413,"title":{},"body":{"classes/PingResolver.html":{}}}],["args('first",{"_index":1412,"title":{},"body":{"classes/PingResolver.html":{}}}],["args('id",{"_index":1433,"title":{},"body":{"classes/PingResolver.html":{}}}],["args('payload",{"_index":1406,"title":{},"body":{"classes/PingResolver.html":{}}}],["args('picks",{"_index":1423,"title":{},"body":{"classes/PingResolver.html":{}}}],["args('pingid",{"_index":1427,"title":{},"body":{"classes/PingResolver.html":{}}}],["args('userid",{"_index":1414,"title":{},"body":{"classes/PingResolver.html":{}}}],["argumentshost",{"_index":1108,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["arising",{"_index":2066,"title":{},"body":{"license.html":{}}}],["array",{"_index":1196,"title":{},"body":{"injectables/Neo4jService.html":{},"controllers/UserController.html":{}}}],["array.isarray(value",{"_index":1279,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["asc",{"_index":983,"title":{},"body":{"injectables/MessageService.html":{},"injectables/PingService.html":{}}}],["associated",{"_index":2020,"title":{},"body":{"license.html":{}}}],["async",{"_index":14,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FirebaseModule.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"modules/Neo4jCommonModule.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["asyncproviders",{"_index":761,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["aud",{"_index":884,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":882,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["auth",{"_index":712,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["auth0",{"_index":952,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["auth0_audience",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth0_domain",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["authentication",{"_index":1986,"title":{},"body":{"index.html":{}}}],["authentity",{"_index":239,"title":{"classes/AuthEntity.html":{}},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["authentity.toentityfromprisma(result",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":683,"title":{},"body":{"controllers/FileFlowEngineController.html":{},"injectables/GqlAuthGuard.html":{}}}],["authmodule",{"_index":195,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2085,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["authors",{"_index":2002,"title":{},"body":{"index.html":{},"license.html":{}}}],["authservice",{"_index":310,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":2073,"title":{},"body":{"modules.html":{}}}],["await",{"_index":80,"title":{},"body":{"injectables/AWSService.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"injectables/ChannelService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FirebaseModule.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":38,"title":{},"body":{"injectables/AWSService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"dependencies.html":{}}}],["aws_access_key",{"_index":705,"title":{},"body":{"modules/FileFlowEngineModule.html":{}}}],["aws_bucket",{"_index":708,"title":{},"body":{"modules/FileFlowEngineModule.html":{}}}],["aws_region",{"_index":707,"title":{},"body":{"modules/FileFlowEngineModule.html":{}}}],["aws_secret_access_key",{"_index":706,"title":{},"body":{"modules/FileFlowEngineModule.html":{}}}],["awsservice",{"_index":1,"title":{"injectables/AWSService.html":{}},"body":{"injectables/AWSService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"coverage.html":{},"overview.html":{}}}],["azp",{"_index":894,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["base64",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64').tostring('ascii",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":951,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/Neo4jService.html":{},"index.html":{}}}],["baseerror",{"_index":344,"title":{"interfaces/BaseError.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["basestrategy",{"_index":904,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["begintransaction",{"_index":1017,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["begintransaction(database",{"_index":1028,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["between",{"_index":244,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["body",{"_index":498,"title":{},"body":{"controllers/ChannelController.html":{}}}],["bolt",{"_index":2107,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bolt+s",{"_index":2108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bolt+ssc",{"_index":2109,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":367,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":123,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bring",{"_index":1963,"title":{},"body":{"index.html":{}}}],["broadcast",{"_index":466,"title":{},"body":{"injectables/BroadcastService.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["broadcast.controller",{"_index":405,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["broadcast.service",{"_index":394,"title":{},"body":{"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{}}}],["broadcast_service",{"_index":453,"title":{},"body":{"injectables/BroadcastService.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["broadcastclient",{"_index":1150,"title":{},"body":{"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["broadcastcontroller",{"_index":382,"title":{"controllers/BroadcastController.html":{}},"body":{"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"coverage.html":{}}}],["broadcastmodule",{"_index":398,"title":{"modules/BroadcastModule.html":{}},"body":{"modules/BroadcastModule.html":{},"modules.html":{},"overview.html":{}}}],["broadcastping",{"_index":442,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/Neo4jService.html":{}}}],["broadcastping(id",{"_index":450,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["broadcastservice",{"_index":393,"title":{"injectables/BroadcastService.html":{}},"body":{"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"coverage.html":{},"overview.html":{}}}],["browse",{"_index":2071,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2068,"title":{},"body":{"modules.html":{}}}],["bson",{"_index":275,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/PingService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bucket",{"_index":72,"title":{},"body":{"injectables/AWSService.html":{}}}],["buffer.from(base64",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(id).tostring('base64",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buildservice",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":2009,"title":{},"body":{"license.html":{}}}],["cache",{"_index":916,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["calculate",{"_index":1198,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["callhandler",{"_index":1246,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{}}}],["canactivate",{"_index":782,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["canactivate(context",{"_index":785,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["cartesian",{"_index":1316,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":1219,"title":{},"body":{"injectables/Neo4jService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"classes/WrappedPayload.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":607,"title":{},"body":{"injectables/ChannelService.html":{},"injectables/MessageService.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["catch((error",{"_index":481,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["catch(exception",{"_index":1106,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["catch(neo4jerror",{"_index":1113,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["catcherror",{"_index":1249,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["catcherror((err",{"_index":1255,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["cb",{"_index":925,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["cb(err",{"_index":928,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["cb(new",{"_index":929,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["centerpoint",{"_index":1211,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["certain",{"_index":460,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["changes",{"_index":1964,"title":{},"body":{"index.html":{}}}],["channel",{"_index":495,"title":{},"body":{"controllers/ChannelController.html":{},"injectables/ChannelService.html":{},"injectables/RMQService.html":{},"miscellaneous/typealiases.html":{}}}],["channel.ack(originalmsg",{"_index":1602,"title":{},"body":{"injectables/RMQService.html":{}}}],["channel.activityid",{"_index":598,"title":{},"body":{"injectables/ChannelService.html":{}}}],["channel.admin",{"_index":600,"title":{},"body":{"injectables/ChannelService.html":{}}}],["channel.controller",{"_index":571,"title":{},"body":{"modules/ChannelModule.html":{}}}],["channel.gatway",{"_index":574,"title":{},"body":{"modules/ChannelModule.html":{}}}],["channel.gql",{"_index":581,"title":{},"body":{"modules/ChannelModule.html":{}}}],["channel.participants",{"_index":604,"title":{},"body":{"injectables/ChannelService.html":{}}}],["channel.resolver",{"_index":573,"title":{},"body":{"modules/ChannelModule.html":{}}}],["channel.service",{"_index":501,"title":{},"body":{"controllers/ChannelController.html":{},"modules/ChannelModule.html":{}}}],["channel.title",{"_index":602,"title":{},"body":{"injectables/ChannelService.html":{}}}],["channelcontroller",{"_index":491,"title":{"controllers/ChannelController.html":{}},"body":{"controllers/ChannelController.html":{},"modules/ChannelModule.html":{},"coverage.html":{}}}],["channelgateway",{"_index":507,"title":{"classes/ChannelGateway.html":{}},"body":{"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"coverage.html":{}}}],["channelid",{"_index":977,"title":{},"body":{"injectables/MessageService.html":{}}}],["channelmodule",{"_index":564,"title":{"modules/ChannelModule.html":{}},"body":{"modules/ChannelModule.html":{},"modules.html":{},"overview.html":{}}}],["channelrepository",{"_index":591,"title":{},"body":{"injectables/ChannelService.html":{}}}],["channelresolver",{"_index":572,"title":{"classes/ChannelResolver.html":{}},"body":{"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"coverage.html":{}}}],["channelservice",{"_index":500,"title":{"injectables/ChannelService.html":{}},"body":{"controllers/ChannelController.html":{},"modules/ChannelModule.html":{},"injectables/ChannelService.html":{},"coverage.html":{},"overview.html":{}}}],["charge",{"_index":2015,"title":{},"body":{"license.html":{}}}],["chat",{"_index":543,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["check",{"_index":806,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["claim",{"_index":2058,"title":{},"body":{"license.html":{}}}],["class",{"_index":51,"title":{"classes/AuthEntity.html":{},"classes/ChannelGateway.html":{},"classes/ChannelResolver.html":{},"classes/CreateUserInput.html":{},"classes/FirebaseConstants.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/MessageResolver.html":{},"classes/Name.html":{},"classes/Neo4jErrorFilter.html":{},"classes/NotFoundError.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"classes/PingResolver.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/WrappedPayload.html":{}},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"classes/ForbiddenError.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"injectables/JwtStrategy.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":240,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ChannelGateway.html":{},"classes/ChannelResolver.html":{},"classes/CreateUserInput.html":{},"classes/FirebaseConstants.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/MessageResolver.html":{},"classes/Name.html":{},"classes/Neo4jErrorFilter.html":{},"classes/NotFoundError.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"classes/PingResolver.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/WrappedPayload.html":{},"overview.html":{}}}],["classprovider",{"_index":749,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["client",{"_index":530,"title":{},"body":{"classes/ChannelGateway.html":{},"index.html":{}}}],["client.id",{"_index":551,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["client.on('disconnect",{"_index":556,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["clientid",{"_index":550,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["clientproxy",{"_index":446,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["clientsmodule",{"_index":1623,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule.registerasync",{"_index":1628,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmoduleasyncoptions",{"_index":1624,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["cluster_activitymodule",{"_index":126,"title":{},"body":{"modules/ActivityModule.html":{},"overview.html":{}}}],["cluster_activitymodule_imports",{"_index":127,"title":{},"body":{"modules/ActivityModule.html":{},"overview.html":{}}}],["cluster_activitymodule_providers",{"_index":128,"title":{},"body":{"modules/ActivityModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_broadcastmodule",{"_index":399,"title":{},"body":{"modules/BroadcastModule.html":{},"overview.html":{}}}],["cluster_broadcastmodule_imports",{"_index":400,"title":{},"body":{"modules/BroadcastModule.html":{},"overview.html":{}}}],["cluster_broadcastmodule_providers",{"_index":401,"title":{},"body":{"modules/BroadcastModule.html":{},"overview.html":{}}}],["cluster_channelmodule",{"_index":565,"title":{},"body":{"modules/ChannelModule.html":{},"overview.html":{}}}],["cluster_channelmodule_imports",{"_index":567,"title":{},"body":{"modules/ChannelModule.html":{}}}],["cluster_channelmodule_providers",{"_index":566,"title":{},"body":{"modules/ChannelModule.html":{},"overview.html":{}}}],["cluster_deletionservicemodule",{"_index":658,"title":{},"body":{"modules/DeletionServiceModule.html":{},"overview.html":{}}}],["cluster_deletionservicemodule_imports",{"_index":660,"title":{},"body":{"modules/DeletionServiceModule.html":{}}}],["cluster_deletionservicemodule_providers",{"_index":659,"title":{},"body":{"modules/DeletionServiceModule.html":{},"overview.html":{}}}],["cluster_fileflowenginemodule",{"_index":699,"title":{},"body":{"modules/FileFlowEngineModule.html":{},"overview.html":{}}}],["cluster_fileflowenginemodule_imports",{"_index":700,"title":{},"body":{"modules/FileFlowEngineModule.html":{}}}],["cluster_fileflowenginemodule_providers",{"_index":701,"title":{},"body":{"modules/FileFlowEngineModule.html":{},"overview.html":{}}}],["cluster_healthmodule",{"_index":2075,"title":{},"body":{"overview.html":{}}}],["cluster_healthmodule_providers",{"_index":2076,"title":{},"body":{"overview.html":{}}}],["cluster_messagemodule",{"_index":956,"title":{},"body":{"modules/MessageModule.html":{},"overview.html":{}}}],["cluster_messagemodule_exports",{"_index":957,"title":{},"body":{"modules/MessageModule.html":{},"overview.html":{}}}],["cluster_messagemodule_providers",{"_index":958,"title":{},"body":{"modules/MessageModule.html":{}}}],["cluster_neo4jmodule",{"_index":1134,"title":{},"body":{"modules/Neo4jModule.html":{},"overview.html":{}}}],["cluster_neo4jmodule_imports",{"_index":1136,"title":{},"body":{"modules/Neo4jModule.html":{},"overview.html":{}}}],["cluster_neo4jmodule_providers",{"_index":1135,"title":{},"body":{"modules/Neo4jModule.html":{},"overview.html":{}}}],["cluster_pingmodule",{"_index":1343,"title":{},"body":{"modules/PingModule.html":{},"overview.html":{}}}],["cluster_pingmodule_imports",{"_index":1344,"title":{},"body":{"modules/PingModule.html":{}}}],["cluster_pingmodule_providers",{"_index":1345,"title":{},"body":{"modules/PingModule.html":{},"overview.html":{}}}],["cluster_rmqmodule",{"_index":1615,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_exports",{"_index":1617,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_providers",{"_index":1616,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1707,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1709,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1708,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["coalesce(any(picks",{"_index":1215,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["collaborate",{"_index":1965,"title":{},"body":{"index.html":{}}}],["collect(ping.id",{"_index":1217,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["colorparameter",{"_index":1581,"title":{},"body":{"injectables/PrismaService.html":{}}}],["colorquery",{"_index":1579,"title":{},"body":{"injectables/PrismaService.html":{}}}],["command",{"_index":71,"title":{},"body":{"injectables/AWSService.html":{}}}],["common",{"_index":1746,"title":{},"body":{"classes/UserResolver.html":{}}}],["common/dto/message.dto",{"_index":540,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["common/src/neo4j",{"_index":1103,"title":{},"body":{"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["common/src/neo4j.constants.ts",{"_index":1880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["common/src/neo4j.module.ts",{"_index":998,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["common/src/neo4j.module.ts:11",{"_index":1000,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["common/src/neo4j.module.ts:31",{"_index":1003,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["common/src/neo4j.service.ts",{"_index":1016,"title":{},"body":{"injectables/Neo4jCommonService.html":{},"coverage.html":{}}}],["common/src/neo4j.service.ts:13",{"_index":1032,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:17",{"_index":1031,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:21",{"_index":1038,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:25",{"_index":1029,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:30",{"_index":1034,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:37",{"_index":1036,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:44",{"_index":1044,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:56",{"_index":1047,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:69",{"_index":1039,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.service.ts:7",{"_index":1027,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["common/src/neo4j.util.ts",{"_index":1881,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":2039,"title":{},"body":{"license.html":{}}}],["config",{"_index":1001,"title":{},"body":{"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"miscellaneous/variables.html":{}}}],["config.interface",{"_index":1007,"title":{},"body":{"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"modules/Neo4jModule.html":{}}}],["config.interface.ts",{"_index":2100,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["config.password",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.scheme}://${config.host}:${config.port",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.service.ts",{"_index":1605,"title":{},"body":{"injectables/RmqConfigService.html":{},"coverage.html":{}}}],["config.service.ts:12",{"_index":1610,"title":{},"body":{"injectables/RmqConfigService.html":{}}}],["config.service.ts:5",{"_index":1608,"title":{},"body":{"injectables/RmqConfigService.html":{}}}],["config.service.ts:8",{"_index":1611,"title":{},"body":{"injectables/RmqConfigService.html":{}}}],["configmodule",{"_index":136,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{}}}],["configmodule.forroot",{"_index":140,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/Neo4jModule.html":{}}}],["configprovider",{"_index":1004,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["configservice",{"_index":19,"title":{},"body":{"injectables/AWSService.html":{},"modules/BroadcastModule.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/JwtStrategy.html":{},"modules/Neo4jModule.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get('auth0_audience",{"_index":933,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('aws_access_key",{"_index":60,"title":{},"body":{"injectables/AWSService.html":{}}}],["configservice.get('aws_region",{"_index":57,"title":{},"body":{"injectables/AWSService.html":{}}}],["configservice.get('aws_secret_access_key",{"_index":62,"title":{},"body":{"injectables/AWSService.html":{}}}],["configservice.get('neo4j_database",{"_index":440,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["configservice.get('neo4j_host",{"_index":433,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["configservice.get('neo4j_password",{"_index":438,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["configservice.get('neo4j_port",{"_index":435,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["configservice.get('neo4j_scheme",{"_index":431,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["configservice.get('neo4j_username",{"_index":436,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["configservice.get('rabbitmq_uri",{"_index":1626,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get(`rabbitmq_${name}_queue",{"_index":1629,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get(`rabbitmq_${queue}_queue",{"_index":1627,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["connected",{"_index":554,"title":{},"body":{"classes/ChannelGateway.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1912,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["connectionclients",{"_index":511,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["consists",{"_index":1971,"title":{},"body":{"index.html":{}}}],["console.error('neo4j",{"_index":1509,"title":{},"body":{"injectables/PingService.html":{}}}],["console.error(`neo4j",{"_index":1522,"title":{},"body":{"injectables/PingService.html":{}}}],["console.error(e",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error(error.message",{"_index":1519,"title":{},"body":{"injectables/PingService.html":{}}}],["console.log",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('add",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('broadcast",{"_index":469,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["console.log('data",{"_index":488,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["console.log('err",{"_index":927,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('error",{"_index":482,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/UserService.html":{}}}],["console.log('id",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('message",{"_index":559,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["console.log('neo4j",{"_index":1510,"title":{},"body":{"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["console.log('reference",{"_index":1758,"title":{},"body":{"classes/UserResolver.html":{}}}],["console.log('remove",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('successfully",{"_index":478,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["console.log(`connection",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(error",{"_index":608,"title":{},"body":{"injectables/ChannelService.html":{},"injectables/MessageService.html":{},"injectables/Neo4jService.html":{},"modules/UserModule.html":{}}}],["console.log(result.records[0].get('u').properties",{"_index":1176,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["console.log(type",{"_index":691,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["console.log(userid",{"_index":1222,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["const",{"_index":67,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FirebaseModule.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/RMQService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"controllers/FileFlowEngineController.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["constructor(@inject(primsa_options",{"_index":1567,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":1026,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["constructor(configservice",{"_index":18,"title":{},"body":{"injectables/AWSService.html":{},"injectables/JwtStrategy.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{}}}],["constructor(firebase",{"_index":443,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["constructor(forumrepository",{"_index":968,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(messageservice",{"_index":515,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["constructor(name",{"_index":256,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["constructor(neo4jcommon",{"_index":1149,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["constructor(neo4jservice",{"_index":1242,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["constructor(options",{"_index":1564,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(pingservice",{"_index":1363,"title":{},"body":{"classes/PingResolver.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"injectables/AWSService.html":{},"injectables/ActivityService.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"controllers/DeletionServiceController.html":{},"injectables/MessageService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"classes/PingResolver.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"classes/UserResolver.html":{}}}],["constructor(repository",{"_index":164,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/ChannelService.html":{},"injectables/PingService.html":{}}}],["constructor(showlabelsortype",{"_index":1259,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["constructor(userrepo",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":1726,"title":{},"body":{"classes/UserResolver.html":{}}}],["contenttype",{"_index":74,"title":{},"body":{"injectables/AWSService.html":{}}}],["context",{"_index":96,"title":{},"body":{"controllers/ActivityController.html":{},"modules/AppModule.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"injectables/GqlAuthGuard.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"injectables/RMQService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["context.getchannelref",{"_index":1599,"title":{},"body":{"injectables/RMQService.html":{}}}],["context.getmessage",{"_index":1601,"title":{},"body":{"injectables/RMQService.html":{}}}],["context.switchtorpc().getcontext().transaction",{"_index":1252,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["context?.req?.get('authorization",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["contract",{"_index":2063,"title":{},"body":{"license.html":{}}}],["control",{"_index":78,"title":{},"body":{"injectables/AWSService.html":{}}}],["controller",{"_index":90,"title":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"controllers/DeletionServiceController.html":{},"controllers/FileFlowEngineController.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"controllers/Neo4jController.html":{},"controllers/UserController.html":{}},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"controllers/DeletionServiceController.html":{},"controllers/FileFlowEngineController.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"controllers/Neo4jController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('api/v1",{"_index":684,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["controller('health",{"_index":815,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["controllers",{"_index":92,"title":{},"body":{"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"controllers/ChannelController.html":{},"modules/ChannelModule.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"controllers/Neo4jController.html":{},"modules/Neo4jModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coordinates",{"_index":187,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/PingService.html":{}}}],["copies",{"_index":2034,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2018,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2008,"title":{},"body":{"license.html":{}}}],["cors",{"_index":546,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["count",{"_index":1785,"title":{},"body":{"injectables/UserService.html":{}}}],["coverage",{"_index":1834,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":63,"title":{},"body":{"injectables/AWSService.html":{},"injectables/Neo4jService.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["create(@args('payload",{"_index":1403,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["create(payload",{"_index":1369,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["createactivity",{"_index":163,"title":{},"body":{"injectables/ActivityService.html":{}}}],["createactivity(ping",{"_index":167,"title":{},"body":{"injectables/ActivityService.html":{}}}],["createasyncoptionsprovider",{"_index":734,"title":{},"body":{"modules/FirebaseModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createasyncoptionsprovider(options",{"_index":735,"title":{},"body":{"modules/FirebaseModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["createasyncprovider",{"_index":1546,"title":{},"body":{"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createasyncprovider(options",{"_index":1552,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/functions.html":{}}}],["createasyncproviders",{"_index":739,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["createasyncproviders(options",{"_index":740,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["createchannel",{"_index":493,"title":{},"body":{"controllers/ChannelController.html":{},"injectables/ChannelService.html":{}}}],["createchannel(@body",{"_index":506,"title":{},"body":{"controllers/ChannelController.html":{}}}],["createchannel(@payload",{"_index":504,"title":{},"body":{"controllers/ChannelController.html":{}}}],["createchannel(channel",{"_index":494,"title":{},"body":{"controllers/ChannelController.html":{},"injectables/ChannelService.html":{}}}],["created",{"_index":606,"title":{},"body":{"injectables/ChannelService.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/Neo4jService.html":{}}}],["createdat",{"_index":184,"title":{},"body":{"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["createdriver",{"_index":1011,"title":{},"body":{"modules/Neo4jCommonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createdriver(config",{"_index":1015,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["createfirebasemoduleoptions",{"_index":721,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{}}}],["createinstances",{"_index":1874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["createinstances(admin.initializeapp",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createmessage",{"_index":539,"title":{},"body":{"classes/ChannelGateway.html":{},"injectables/MessageService.html":{},"miscellaneous/typealiases.html":{}}}],["createparamdecorator",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createping",{"_index":1146,"title":{},"body":{"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["createping(_ping",{"_index":1155,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["createping(payload",{"_index":634,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["createpinginput",{"_index":609,"title":{"interfaces/CreatePingInput.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["createpresignedurl",{"_index":15,"title":{},"body":{"injectables/AWSService.html":{}}}],["createpresignedurl(type",{"_index":27,"title":{},"body":{"injectables/AWSService.html":{}}}],["createpresignedurldownload",{"_index":16,"title":{},"body":{"injectables/AWSService.html":{}}}],["createpresignedurldownload(key",{"_index":32,"title":{},"body":{"injectables/AWSService.html":{}}}],["createprismaoptions",{"_index":1557,"title":{},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["createprismaqueryeventhandler",{"_index":1576,"title":{},"body":{"injectables/PrismaService.html":{}}}],["createrepositoryproviders",{"_index":1549,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createuser",{"_index":848,"title":{},"body":{"classes/IMutation.html":{},"injectables/Neo4jService.html":{},"injectables/UserService.html":{}}}],["createuser(input",{"_index":1769,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(payload",{"_index":375,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{}}}],["createuser(user",{"_index":1158,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["createuserinput",{"_index":355,"title":{"classes/CreateUserInput.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["credential",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":58,"title":{},"body":{"injectables/AWSService.html":{}}}],["criteria",{"_index":1190,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["ctx",{"_index":104,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"injectables/GqlAuthGuard.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["ctx.getcontext().req",{"_index":800,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["ctx.getcontext().req.user",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":1395,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cursor",{"_index":622,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/MessageService.html":{},"injectables/Neo4jService.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["cypher",{"_index":1045,"title":{},"body":{"injectables/Neo4jCommonService.html":{},"injectables/Neo4jService.html":{}}}],["damages",{"_index":2059,"title":{},"body":{"license.html":{}}}],["data",{"_index":101,"title":{},"body":{"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"injectables/ChannelService.html":{},"injectables/MessageService.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":439,"title":{},"body":{"modules/BroadcastModule.html":{},"injectables/Neo4jCommonService.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{}}}],["databaseortransaction",{"_index":1043,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["databaseortransaction).run(cypher",{"_index":1060,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["date",{"_index":257,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["date().toisostring",{"_index":1231,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["datetime",{"_index":378,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeresolver",{"_index":1348,"title":{},"body":{"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["dbresult",{"_index":1787,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.devices",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.email",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.id",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.name.firstname",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.name.lastname",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.name.middlename",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.picks",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.picture",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["dbresult.username",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":2022,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2067,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":122,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decodefrombase64",{"_index":1397,"title":{},"body":{"classes/PingResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodefrombase64(after",{"_index":1416,"title":{},"body":{"classes/PingResolver.html":{}}}],["decorators",{"_index":98,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"classes/ChannelResolver.html":{},"controllers/DeletionServiceController.html":{},"controllers/FileFlowEngineController.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"controllers/Neo4jController.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":170,"title":{},"body":{"injectables/ActivityService.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"classes/FirebaseConstants.html":{},"injectables/GqlAuthGuard.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"classes/UserResolver.html":{},"classes/WrappedPayload.html":{},"miscellaneous/variables.html":{}}}],["defaultaccessmode",{"_index":1057,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["defaultprismaoptions",{"_index":1547,"title":{},"body":{"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":20,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"injectables/FileFlowEngineService.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["definitionfactory",{"_index":1877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1237,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["deleted",{"_index":992,"title":{},"body":{"injectables/MessageService.html":{}}}],["deletemessage",{"_index":966,"title":{},"body":{"injectables/MessageService.html":{}}}],["deletemessage(id",{"_index":972,"title":{},"body":{"injectables/MessageService.html":{}}}],["deletion",{"_index":654,"title":{},"body":{"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{}}}],["deletionservicecontroller",{"_index":648,"title":{"controllers/DeletionServiceController.html":{}},"body":{"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"coverage.html":{}}}],["deletionservicemodule",{"_index":657,"title":{"modules/DeletionServiceModule.html":{}},"body":{"modules/DeletionServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["deletionserviceservice",{"_index":653,"title":{"injectables/DeletionServiceService.html":{}},"body":{"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":120,"title":{"dependencies.html":{}},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":181,"title":{},"body":{"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/User.html":{},"properties.html":{}}}],["details",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["device",{"_index":360,"title":{},"body":{"interfaces/BaseError.html":{},"injectables/BroadcastService.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["devices",{"_index":248,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["difference",{"_index":1968,"title":{},"body":{"index.html":{}}}],["different",{"_index":245,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["distance",{"_index":1193,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["distribute",{"_index":2030,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1981,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1835,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["download",{"_index":85,"title":{},"body":{"injectables/AWSService.html":{}}}],["driver",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"injectables/Neo4jCommonService.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["driver.getserverinfo",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["driver.verifyauthentication",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicate@email.com",{"_index":1122,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["durable",{"_index":826,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{}}}],["dynamicmodule",{"_index":745,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["e",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.cause",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edges",{"_index":626,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["eg",{"_index":953,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ek_p6ubuska3axetlqcpwg:apa91bgtfrwnvouhsgbcbjbscnijhk9pkfqqgerjnfh7jnn2jqg",{"_index":475,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["email",{"_index":249,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"injectables/JwtStrategy.html":{},"classes/Name.html":{},"classes/Neo4jErrorFilter.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["emailaddress",{"_index":356,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"miscellaneous/typealiases.html":{}}}],["emailaddressresolver",{"_index":1711,"title":{},"body":{"modules/UserModule.html":{}}}],["emit",{"_index":1572,"title":{},"body":{"injectables/PrismaService.html":{}}}],["empty",{"_index":1132,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["enableshutdownhooks(app",{"_index":1583,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encodetobase64",{"_index":1398,"title":{},"body":{"classes/PingResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["encodetobase64(ping.id",{"_index":1418,"title":{},"body":{"classes/PingResolver.html":{}}}],["encodetobase64(pings[pings.length",{"_index":1420,"title":{},"body":{"classes/PingResolver.html":{}}}],["end",{"_index":1221,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["endcursor",{"_index":620,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["engine.controller",{"_index":703,"title":{},"body":{"modules/FileFlowEngineModule.html":{}}}],["engine.controller.ts",{"_index":667,"title":{},"body":{"controllers/FileFlowEngineController.html":{},"coverage.html":{}}}],["engine.controller.ts:25",{"_index":675,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["engine.controller.ts:38",{"_index":678,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["engine.module.ts",{"_index":702,"title":{},"body":{"modules/FileFlowEngineModule.html":{}}}],["engine.service",{"_index":681,"title":{},"body":{"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{}}}],["engine.service.ts",{"_index":709,"title":{},"body":{"injectables/FileFlowEngineService.html":{},"coverage.html":{}}}],["engine.service.ts:5",{"_index":710,"title":{},"body":{"injectables/FileFlowEngineService.html":{}}}],["engine/.env",{"_index":704,"title":{},"body":{"modules/FileFlowEngineModule.html":{}}}],["engine/src/aws",{"_index":8,"title":{},"body":{"injectables/AWSService.html":{},"coverage.html":{}}}],["engine/src/file",{"_index":666,"title":{},"body":{"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"coverage.html":{}}}],["engine/src/main.ts",{"_index":1845,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity",{"_index":273,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["envfilepath",{"_index":143,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/Neo4jModule.html":{}}}],["epoch",{"_index":888,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["err",{"_index":794,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Neo4jTransactionInterceptor.html":{}}}],["error",{"_index":484,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/ChannelService.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"index.html":{}}}],["error('neo4j",{"_index":1532,"title":{},"body":{"injectables/PingService.html":{}}}],["error('participant",{"_index":1232,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["error('ping",{"_index":1187,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["error('user",{"_index":1178,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["error(`activity",{"_index":1483,"title":{},"body":{"injectables/PingService.html":{}}}],["error(`neo4j",{"_index":1471,"title":{},"body":{"injectables/PingService.html":{}}}],["error(error.message",{"_index":1527,"title":{},"body":{"injectables/PingService.html":{}}}],["error.filter.ts",{"_index":1104,"title":{},"body":{"classes/Neo4jErrorFilter.html":{},"coverage.html":{}}}],["error.filter.ts:8",{"_index":1109,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["error.message",{"_index":1484,"title":{},"body":{"injectables/PingService.html":{}}}],["error?.message",{"_index":1721,"title":{},"body":{"modules/UserModule.html":{}}}],["error\\n${e}\\ncause",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorformat",{"_index":1568,"title":{},"body":{"injectables/PrismaService.html":{}}}],["event",{"_index":1573,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{},"license.html":{}}}],["eventpattern",{"_index":105,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"controllers/Neo4jController.html":{},"controllers/UserController.html":{}}}],["eventpattern('broadcastping",{"_index":388,"title":{},"body":{"controllers/BroadcastController.html":{}}}],["eventpattern('createchannel",{"_index":503,"title":{},"body":{"controllers/ChannelController.html":{}}}],["eventpattern('pingcreated",{"_index":99,"title":{},"body":{"controllers/ActivityController.html":{}}}],["eventpattern(pattern.addmembership",{"_index":1688,"title":{},"body":{"controllers/UserController.html":{}}}],["eventpattern(pattern.participantadded",{"_index":1076,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["eventpattern(pattern.participantremoved",{"_index":1079,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["eventpattern(pattern.pingcreated",{"_index":1082,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["eventpattern(pattern.removemembership",{"_index":1694,"title":{},"body":{"controllers/UserController.html":{}}}],["eventpattern(pattern.usercreated",{"_index":1085,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["example",{"_index":1946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exception",{"_index":1110,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["exception.message.includes('already",{"_index":1123,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["exception.message.includes('must",{"_index":1131,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["exception.message.match(/`([a",{"_index":1124,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["exceptionfilter",{"_index":1105,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["exclude",{"_index":1197,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["executioncontext",{"_index":786,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exisitngdoc",{"_index":1523,"title":{},"body":{"injectables/PingService.html":{}}}],["exisitngdoc.participants.filter",{"_index":1526,"title":{},"body":{"injectables/PingService.html":{}}}],["exisitngpings",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{}}}],["exisitngpings.pings.filter((ping",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["exists",{"_index":1119,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["exp",{"_index":892,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["expandvariables",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["expiration",{"_index":890,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":82,"title":{},"body":{"injectables/AWSService.html":{}}}],["export",{"_index":50,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["exports",{"_index":125,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/FirebaseModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1907,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":153,"title":{},"body":{"injectables/ActivityRepository.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/PingRepository.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":905,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":932,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factory",{"_index":1560,"title":{},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["factory.createprismaoptions",{"_index":1561,"title":{},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["false",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelModule.html":{},"injectables/ChannelService.html":{},"injectables/MessageService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":1984,"title":{},"body":{"index.html":{}}}],["federated",{"_index":1987,"title":{},"body":{"index.html":{}}}],["federation",{"_index":1983,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":2004,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"coverage.html":{}}}],["fileflowenginecontroller",{"_index":665,"title":{"controllers/FileFlowEngineController.html":{}},"body":{"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"coverage.html":{}}}],["fileflowenginemodule",{"_index":698,"title":{"modules/FileFlowEngineModule.html":{}},"body":{"modules/FileFlowEngineModule.html":{},"modules.html":{},"overview.html":{}}}],["fileflowengineservice",{"_index":680,"title":{"injectables/FileFlowEngineService.html":{}},"body":{"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"coverage.html":{},"overview.html":{}}}],["files",{"_index":2021,"title":{},"body":{"license.html":{}}}],["filter((scope",{"_index":942,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["filter((user",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["filters",{"_index":1192,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["finally",{"_index":1528,"title":{},"body":{"injectables/PingService.html":{}}}],["findone",{"_index":1764,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(id",{"_index":1771,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["finduser(email",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase",{"_index":449,"title":{},"body":{"injectables/BroadcastService.html":{},"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"dependencies.html":{},"index.html":{}}}],["firebase.auth.auth",{"_index":714,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{}}}],["firebase.constants",{"_index":752,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["firebase.interface",{"_index":751,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["firebase.json",{"_index":415,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["firebase.messaging.messaging",{"_index":715,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{}}}],["firebase.serviceaccount",{"_index":718,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{}}}],["firebase_module",{"_index":728,"title":{},"body":{"classes/FirebaseConstants.html":{}}}],["firebase_token",{"_index":729,"title":{},"body":{"classes/FirebaseConstants.html":{}}}],["firebaseadmin",{"_index":444,"title":{"interfaces/FirebaseAdmin.html":{}},"body":{"injectables/BroadcastService.html":{},"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseconstants",{"_index":726,"title":{"classes/FirebaseConstants.html":{}},"body":{"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"coverage.html":{}}}],["firebaseconstants.firebase_module",{"_index":760,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["firebaseconstants.firebase_token",{"_index":756,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["firebasemodule",{"_index":402,"title":{"modules/FirebaseModule.html":{}},"body":{"modules/BroadcastModule.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"modules.html":{},"overview.html":{}}}],["firebasemodule.forroot",{"_index":411,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["firebasemoduleasyncoptions",{"_index":722,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["firebasemoduleoptions",{"_index":717,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["firebasemoduleoptionsfactory",{"_index":720,"title":{"interfaces/FirebaseModuleOptionsFactory.html":{}},"body":{"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"coverage.html":{}}}],["firebaseprovider",{"_index":759,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["first",{"_index":632,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["firstname",{"_index":277,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["fitness",{"_index":2052,"title":{},"body":{"license.html":{}}}],["flatmap((user",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["flow",{"_index":7,"title":{},"body":{"injectables/AWSService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["following",{"_index":2038,"title":{},"body":{"license.html":{}}}],["follows",{"_index":1973,"title":{},"body":{"index.html":{}}}],["forbiddenerror",{"_index":371,"title":{"classes/ForbiddenError.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["format",{"_index":1578,"title":{},"body":{"injectables/PrismaService.html":{}}}],["formaterror",{"_index":1720,"title":{},"body":{"modules/UserModule.html":{}}}],["forroot",{"_index":742,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/Neo4jCommonModule.html":{}}}],["forroot(config",{"_index":999,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["forroot(options",{"_index":743,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["forrootasync",{"_index":746,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/Neo4jCommonModule.html":{}}}],["forrootasync(configprovider",{"_index":1002,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["forrootasync(options",{"_index":747,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["forum",{"_index":773,"title":{"interfaces/Forum.html":{}},"body":{"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"coverage.html":{}}}],["forum(id",{"_index":775,"title":{},"body":{"interfaces/Forum.html":{}}}],["forumclient",{"_index":778,"title":{},"body":{"injectables/ForumRepository.html":{}}}],["forumrepository",{"_index":569,"title":{"injectables/ForumRepository.html":{}},"body":{"modules/ChannelModule.html":{},"injectables/ChannelService.html":{},"injectables/ForumRepository.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"coverage.html":{},"overview.html":{}}}],["forums",{"_index":776,"title":{},"body":{"interfaces/Forum.html":{}}}],["found",{"_index":984,"title":{},"body":{"injectables/MessageService.html":{},"classes/WrappedPayload.html":{}}}],["free",{"_index":2014,"title":{},"body":{"license.html":{}}}],["full",{"_index":77,"title":{},"body":{"injectables/AWSService.html":{}}}],["function",{"_index":1554,"title":{},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["functions",{"_index":1939,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2037,"title":{},"body":{"license.html":{}}}],["gateway",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["geometry",{"_index":186,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/PingService.html":{}}}],["get('download",{"_index":693,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["get('download/')@header('content",{"_index":677,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["get('result",{"_index":1227,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["get('test",{"_index":390,"title":{},"body":{"controllers/BroadcastController.html":{}}}],["get('upload",{"_index":686,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["get('upload')@header('content",{"_index":673,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["get()@healthcheck",{"_index":807,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["getallping",{"_index":859,"title":{},"body":{"interfaces/IQuery-1.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["getallping(first",{"_index":630,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["getallping(user",{"_index":1372,"title":{},"body":{"classes/PingResolver.html":{}}}],["getallping(userid",{"_index":1443,"title":{},"body":{"injectables/PingService.html":{}}}],["getawspresignedurl",{"_index":670,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["getawspresignedurl(@query('type",{"_index":690,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["getawspresignedurl(type",{"_index":672,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["getawspresignedurldownload",{"_index":671,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["getawspresignedurldownload(key",{"_index":676,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["getconfig",{"_index":1018,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["getdriver",{"_index":1019,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["getfirebaseadmin",{"_index":753,"title":{},"body":{"modules/FirebaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfirebaseadmin(options",{"_index":758,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["getforum",{"_index":584,"title":{},"body":{"classes/ChannelResolver.html":{}}}],["gethello",{"_index":235,"title":{},"body":{"injectables/AppService.html":{},"controllers/DeletionServiceController.html":{},"injectables/DeletionServiceService.html":{},"injectables/FileFlowEngineService.html":{}}}],["getimports(name",{"_index":1625,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["getmessages",{"_index":967,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessages(channelid",{"_index":974,"title":{},"body":{"injectables/MessageService.html":{}}}],["getobjectcommand",{"_index":36,"title":{},"body":{"injectables/AWSService.html":{}}}],["getoptions",{"_index":1589,"title":{},"body":{"injectables/RMQService.html":{}}}],["getoptions(queue",{"_index":1593,"title":{},"body":{"injectables/RMQService.html":{}}}],["getparticipants",{"_index":860,"title":{},"body":{"interfaces/IQuery-1.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["getparticipants(pingid",{"_index":633,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["getparticipantsresponse",{"_index":627,"title":{"interfaces/GetParticipantsResponse.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["getping",{"_index":861,"title":{},"body":{"interfaces/IQuery-1.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["getping(@args('id",{"_index":1409,"title":{},"body":{"classes/PingResolver.html":{}}}],["getping(id",{"_index":629,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["getpingswithinradius",{"_index":862,"title":{},"body":{"interfaces/IQuery-1.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"miscellaneous/variables.html":{}}}],["getpingswithinradius(_payload",{"_index":1070,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["getpingswithinradius(payload",{"_index":631,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/Neo4jService.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["getqueues",{"_index":1606,"title":{},"body":{"injectables/RmqConfigService.html":{}}}],["getqueues(name",{"_index":1609,"title":{},"body":{"injectables/RmqConfigService.html":{}}}],["getreadsession",{"_index":1020,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["getreadsession(database",{"_index":1033,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["getrequest",{"_index":783,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":788,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["getsignedurl",{"_index":41,"title":{},"body":{"injectables/AWSService.html":{}}}],["getsignedurl(this.s3client",{"_index":81,"title":{},"body":{"injectables/AWSService.html":{}}}],["getting",{"_index":1947,"title":{"index.html":{},"license.html":{}},"body":{}}],["geturi",{"_index":1607,"title":{},"body":{"injectables/RmqConfigService.html":{}}}],["getuser",{"_index":1724,"title":{},"body":{"classes/UserResolver.html":{}}}],["getuser(@currentuser",{"_index":1750,"title":{},"body":{"classes/UserResolver.html":{}}}],["getuser(user",{"_index":1735,"title":{},"body":{"classes/UserResolver.html":{}}}],["getuserbyemail",{"_index":1765,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyemail(email",{"_index":1773,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid",{"_index":1725,"title":{},"body":{"classes/UserResolver.html":{}}}],["getuserbyid(id",{"_index":1738,"title":{},"body":{"classes/UserResolver.html":{}}}],["getuserdevices",{"_index":1685,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserdevices(@payload",{"_index":1699,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserdevices(users",{"_index":1690,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserswithinradius",{"_index":1147,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["getuserswithinradius(ping",{"_index":1161,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["getwritesession",{"_index":1021,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["getwritesession(database",{"_index":1035,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["given",{"_index":1194,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["global",{"_index":750,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/PrismaModule.html":{}}}],["googleapplicationcredential",{"_index":412,"title":{},"body":{"modules/BroadcastModule.html":{},"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["gqlauthguard",{"_index":309,"title":{"injectables/GqlAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GqlAuthGuard.html":{},"classes/PingResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"overview.html":{}}}],["gqlexecutioncontext",{"_index":797,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":799,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":2013,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2072,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":353,"title":{},"body":{"interfaces/BaseError.html":{},"modules/ChannelModule.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["graphql/ping.schema",{"_index":1394,"title":{},"body":{"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["graphql/user.schema",{"_index":1337,"title":{},"body":{"classes/PayloadResolver.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["graphqlcreateinput",{"_index":1656,"title":{},"body":{"classes/User.html":{}}}],["graphqldatetime",{"_index":348,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{}}}],["graphqlemailaddress",{"_index":349,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["graphqlemailaddress.parsevalue(email",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["graphqlemailaddress.parsevalue(input.email",{"_index":1665,"title":{},"body":{"classes/User.html":{}}}],["graphqlerror",{"_index":1712,"title":{},"body":{"modules/UserModule.html":{}}}],["graphqlfederationdefinitionsfactory",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqlformattederror",{"_index":1713,"title":{},"body":{"modules/UserModule.html":{}}}],["graphqllatitude",{"_index":351,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["graphqllatitude.parsevalue(input.latitude",{"_index":1670,"title":{},"body":{"classes/User.html":{}}}],["graphqllatitude.parsevalue(latitude",{"_index":1459,"title":{},"body":{"injectables/PingService.html":{}}}],["graphqllongitude",{"_index":352,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["graphqllongitude.parsevalue(input.longitude",{"_index":1671,"title":{},"body":{"classes/User.html":{}}}],["graphqllongitude.parsevalue(longitude",{"_index":1460,"title":{},"body":{"injectables/PingService.html":{}}}],["graphqlmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["graphqlmodule.forroot",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["graphqlobjectid",{"_index":350,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["graphqlobjectid.parsevalue(id",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{}}}],["graphqlobjectid.parsevalue(userid",{"_index":1457,"title":{},"body":{"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["graphqlurl",{"_index":611,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["graphqlurl.parsevalue(url",{"_index":1478,"title":{},"body":{"injectables/PingService.html":{}}}],["guard/gql.guard",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{}}}],["hamza",{"_index":2088,"title":{},"body":{"properties.html":{}}}],["handle",{"_index":1321,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["handlebroadcastping",{"_index":385,"title":{},"body":{"controllers/BroadcastController.html":{}}}],["handlebroadcastping(data",{"_index":387,"title":{},"body":{"controllers/BroadcastController.html":{}}}],["handleconnection",{"_index":513,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["handleconnection(client",{"_index":526,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["handlemessage",{"_index":514,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["handlemessage(@messagebody",{"_index":558,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["handlemessage(message",{"_index":531,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["handleparticipantadded",{"_index":1067,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["handleparticipantadded(payload",{"_index":1074,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["handleparticipantremoved",{"_index":1068,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["handleparticipantremoved(payload",{"_index":1078,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["handlepingcreated",{"_index":94,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/Neo4jController.html":{}}}],["handlepingcreated(@payload",{"_index":112,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/Neo4jController.html":{}}}],["handlepingcreated(data",{"_index":95,"title":{},"body":{"controllers/ActivityController.html":{}}}],["handlepingcreated(ping",{"_index":1081,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["handlerequest",{"_index":784,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["handlerequest(err",{"_index":790,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["handlesigningkeyerror(err",{"_index":924,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["handleusercreated",{"_index":1069,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["handleusercreated(@payload",{"_index":1094,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["handleusercreated(user",{"_index":1084,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["handling",{"_index":1996,"title":{},"body":{"index.html":{}}}],["hasnextpage",{"_index":617,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["haspreviouspage",{"_index":618,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["header",{"_index":679,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["header('content",{"_index":687,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["health",{"_index":805,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["health.controller",{"_index":845,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":408,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["healthcheck",{"_index":810,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["healthcheckservice",{"_index":811,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["healthcontroller",{"_index":803,"title":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":403,"title":{"modules/HealthModule.html":{}},"body":{"modules/BroadcastModule.html":{},"modules/HealthModule.html":{},"modules/Neo4jModule.html":{},"modules.html":{},"overview.html":{}}}],["height",{"_index":1310,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":237,"title":{},"body":{"injectables/AppService.html":{},"classes/ChannelResolver.html":{},"injectables/DeletionServiceService.html":{},"injectables/FileFlowEngineService.html":{}}}],["here",{"_index":1998,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2012,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2056,"title":{},"body":{"license.html":{}}}],["host",{"_index":432,"title":{},"body":{"modules/BroadcastModule.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{}}}],["host.switchtorpc",{"_index":1114,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["http",{"_index":816,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-3.html":{}}}],["http://localhost:3510/graphql",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:3510/users?email=${email",{"_index":954,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["http://localhost:3520/graphql",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["http://ping:3520/graphql",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["http://users:3510/graphql",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["httphealthindicator",{"_index":812,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-3.html":{}}}],["httpmodule",{"_index":846,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://${configservice.get",{"_index":921,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://${configservice.get('auth0_domain",{"_index":934,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://github.com/volunteer",{"_index":2083,"title":{},"body":{"properties.html":{}}}],["hydrate",{"_index":1179,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["iat",{"_index":889,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["id",{"_index":250,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1218,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["implement",{"_index":1992,"title":{},"body":{"index.html":{}}}],["implements",{"_index":159,"title":{},"body":{"injectables/ActivityRepository.html":{},"interfaces/BaseError.html":{},"classes/ChannelGateway.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"injectables/ForumRepository.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"injectables/Neo4jCommonService.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"injectables/PingRepository.html":{},"injectables/PrismaService.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{}}}],["implied",{"_index":2048,"title":{},"body":{"license.html":{}}}],["import",{"_index":35,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["imports",{"_index":135,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/FirebaseModule.html":{},"modules/HealthModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UserModule.html":{}}}],["imutation",{"_index":374,"title":{"classes/IMutation.html":{}},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["included",{"_index":2043,"title":{},"body":{"license.html":{}}}],["including",{"_index":2025,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":872,"title":{},"body":{"interfaces/JsonObject.html":{}}}],["inestapplication",{"_index":1584,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["init",{"_index":549,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["inject",{"_index":427,"title":{},"body":{"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["inject(broadcast_service",{"_index":1167,"title":{},"body":{"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["inject(neo4j_config",{"_index":1048,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["inject(neo4j_driver",{"_index":1049,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["inject(neo4j_service",{"_index":457,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["inject(user_service",{"_index":458,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/PingService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AWSService.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BroadcastService.html":{},"injectables/ChannelService.html":{},"injectables/DeletionServiceService.html":{},"injectables/FileFlowEngineService.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"injectables/Neo4jCommonService.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"injectables/PingRepository.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AWSService.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BroadcastService.html":{},"injectables/ChannelService.html":{},"injectables/DeletionServiceService.html":{},"injectables/FileFlowEngineService.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"injectables/Neo4jCommonService.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"injectables/PingRepository.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AWSService.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BroadcastService.html":{},"injectables/ChannelService.html":{},"injectables/DeletionServiceService.html":{},"injectables/FileFlowEngineService.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"injectables/Neo4jCommonService.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"injectables/PingRepository.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectfirebaseadmin",{"_index":454,"title":{},"body":{"injectables/BroadcastService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectrepository",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectrepository('user",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["injectrepository(name",{"_index":1944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["innovative",{"_index":1957,"title":{},"body":{"index.html":{}}}],["input",{"_index":1453,"title":{},"body":{"injectables/PingService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["input.device",{"_index":1668,"title":{},"body":{"classes/User.html":{}}}],["input.firstname",{"_index":1662,"title":{},"body":{"classes/User.html":{}}}],["input.lastname",{"_index":1663,"title":{},"body":{"classes/User.html":{}}}],["input.middlename",{"_index":1664,"title":{},"body":{"classes/User.html":{}}}],["input.picks",{"_index":1667,"title":{},"body":{"classes/User.html":{}}}],["input.picture",{"_index":1669,"title":{},"body":{"classes/User.html":{}}}],["input.username",{"_index":1666,"title":{},"body":{"classes/User.html":{}}}],["instanceof",{"_index":926,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/Neo4jCommonService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"miscellaneous/variables.html":{}}}],["int",{"_index":1022,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["int(value",{"_index":1037,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["intended",{"_index":883,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["intercept",{"_index":1241,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{}}}],["intercept(context",{"_index":1244,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{}}}],["interface",{"_index":343,"title":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":345,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"overview.html":{}}}],["internal",{"_index":1830,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["internalservererror",{"_index":372,"title":{"classes/InternalServerError.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["introspectandcompose",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["invalidinputerror",{"_index":368,"title":{"classes/InvalidInputError.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["iping",{"_index":108,"title":{},"body":{"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"miscellaneous/typealiases.html":{}}}],["iquery",{"_index":363,"title":{"classes/IQuery.html":{},"interfaces/IQuery-1.html":{}},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["isdate",{"_index":1264,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["isdate(value",{"_index":1296,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["isdatetime",{"_index":1265,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["isdatetime(value",{"_index":1297,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["isduration",{"_index":1266,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["isduration(value",{"_index":1293,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":141,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/Neo4jModule.html":{}}}],["isint",{"_index":1267,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["isint(value",{"_index":1291,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["islocaldatetime",{"_index":1268,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["islocaldatetime(value",{"_index":1298,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["islocaltime",{"_index":1269,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["islocaltime(value",{"_index":1294,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["isnode",{"_index":1270,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["isnode(value",{"_index":1282,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ispoint",{"_index":1271,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["ispoint(value",{"_index":1300,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["isrelationship",{"_index":1272,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["isrelationship(value",{"_index":1288,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":878,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["issued",{"_index":885,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["issuer",{"_index":876,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["istime",{"_index":1273,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["istime(value",{"_index":1295,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["isusernameavailable",{"_index":854,"title":{},"body":{"classes/IQuery.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["isusernameavailable(@args('username",{"_index":1752,"title":{},"body":{"classes/UserResolver.html":{}}}],["isusernameavailable(username",{"_index":366,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["item.description",{"_index":1499,"title":{},"body":{"injectables/PingService.html":{}}}],["item.geometry.coordinates[0",{"_index":1503,"title":{},"body":{"injectables/PingService.html":{}}}],["item.geometry.coordinates[1",{"_index":1504,"title":{},"body":{"injectables/PingService.html":{}}}],["item.id",{"_index":1496,"title":{},"body":{"injectables/PingService.html":{}}}],["item.media",{"_index":1505,"title":{},"body":{"injectables/PingService.html":{}}}],["item.participants.map((i",{"_index":1507,"title":{},"body":{"injectables/PingService.html":{}}}],["item.picks",{"_index":1500,"title":{},"body":{"injectables/PingService.html":{}}}],["item.radius",{"_index":1502,"title":{},"body":{"injectables/PingService.html":{}}}],["item.title",{"_index":1498,"title":{},"body":{"injectables/PingService.html":{}}}],["item.url",{"_index":1501,"title":{},"body":{"injectables/PingService.html":{}}}],["item.userid",{"_index":1506,"title":{},"body":{"injectables/PingService.html":{}}}],["joi",{"_index":137,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/Neo4jModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":151,"title":{},"body":{"modules/ActivityModule.html":{},"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["joi.object",{"_index":146,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/Neo4jModule.html":{}}}],["joi.string",{"_index":424,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["joi.string().required",{"_index":148,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/Neo4jModule.html":{}}}],["json.parse(data",{"_index":115,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{}}}],["json.stringify",{"_index":1209,"title":{},"body":{"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["json.stringify(result",{"_index":1482,"title":{},"body":{"injectables/PingService.html":{}}}],["jsonobject",{"_index":869,"title":{"interfaces/JsonObject.html":{}},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["jsonvalue",{"_index":873,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"miscellaneous/typealiases.html":{}}}],["jwks",{"_index":912,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwksrequestsperminute",{"_index":918,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwksuri",{"_index":920,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwt",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt/jwt.strategy",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":931,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":875,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":311,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":34,"title":{},"body":{"injectables/AWSService.html":{},"interfaces/CreatePingInput.html":{},"controllers/FileFlowEngineController.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/Neo4jTypeInterceptor.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":2047,"title":{},"body":{"license.html":{}}}],["known/jwks.json",{"_index":923,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["label",{"_index":1120,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["lastname",{"_index":279,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["lastvaluefrom",{"_index":455,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["latitude",{"_index":358,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["latituderesolver",{"_index":1349,"title":{},"body":{"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["legend",{"_index":121,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":1574,"title":{},"body":{"injectables/PrismaService.html":{}}}],["liability",{"_index":2060,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2057,"title":{},"body":{"license.html":{}}}],["libs/.../auth.entity.ts",{"_index":2098,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../channel.ts",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../entities.ts",{"_index":2102,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../firebase.decorator.ts",{"_index":1943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../firebase.interface.ts",{"_index":2094,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../getfirebaseadmin.ts",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../helpers.ts",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../inject",{"_index":1942,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../jwt",{"_index":2096,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../neo4j",{"_index":2099,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../neo4j.constants.ts",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../neo4j.util.ts",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../pattern.ts",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../ping.ts",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../prisma.provider.ts",{"_index":1941,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../services.ts",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../types.ts",{"_index":2095,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../user.decorator.ts",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.ts",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/auth/.env",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["libs/auth/src/auth.module.ts",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["libs/auth/src/decorator/user.decorator.ts",{"_index":1862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/entity/auth.entity.ts",{"_index":241,"title":{},"body":{"classes/AuthEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/auth/src/entity/auth.entity.ts:18",{"_index":264,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:19",{"_index":261,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:20",{"_index":265,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:21",{"_index":263,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:22",{"_index":268,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:23",{"_index":267,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:24",{"_index":266,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:25",{"_index":262,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:27",{"_index":259,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/entity/auth.entity.ts:57",{"_index":270,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/auth/src/guard/gql.guard.ts",{"_index":781,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["libs/auth/src/guard/gql.guard.ts:11",{"_index":789,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["libs/auth/src/guard/gql.guard.ts:17",{"_index":792,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["libs/auth/src/guard/gql.guard.ts:32",{"_index":787,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["libs/auth/src/guard/gql.guard.ts:9",{"_index":796,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["libs/auth/src/jwt/jwt",{"_index":870,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/auth/src/jwt/jwt.strategy.ts",{"_index":897,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["libs/auth/src/jwt/jwt.strategy.ts:12",{"_index":900,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["libs/auth/src/jwt/jwt.strategy.ts:40",{"_index":902,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["libs/auth/src/service/auth.service.ts",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["libs/auth/src/service/auth.service.ts:15",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["libs/auth/src/service/auth.service.ts:6",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["libs/common/src/constants/pattern.ts",{"_index":1868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/graphql/error.gql",{"_index":1719,"title":{},"body":{"modules/UserModule.html":{}}}],["libs/common/src/rmq/rmq",{"_index":1604,"title":{},"body":{"injectables/RmqConfigService.html":{},"coverage.html":{}}}],["libs/common/src/rmq/rmq.module.ts",{"_index":1618,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["libs/common/src/rmq/rmq.module.ts:19",{"_index":1621,"title":{},"body":{"modules/RmqModule.html":{}}}],["libs/common/src/rmq/rmq.service.ts",{"_index":1587,"title":{},"body":{"injectables/RMQService.html":{},"coverage.html":{}}}],["libs/common/src/rmq/rmq.service.ts:21",{"_index":1592,"title":{},"body":{"injectables/RMQService.html":{}}}],["libs/common/src/rmq/rmq.service.ts:6",{"_index":1590,"title":{},"body":{"injectables/RMQService.html":{}}}],["libs/common/src/rmq/rmq.service.ts:9",{"_index":1595,"title":{},"body":{"injectables/RMQService.html":{}}}],["libs/common/src/services.ts",{"_index":1869,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/types.ts",{"_index":2104,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/common/src/utils/entities.ts",{"_index":2110,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/common/src/utils/helpers.ts",{"_index":1871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/firebase/src/firebase.constants.ts",{"_index":727,"title":{},"body":{"classes/FirebaseConstants.html":{},"coverage.html":{}}}],["libs/firebase/src/firebase.constants.ts:2",{"_index":730,"title":{},"body":{"classes/FirebaseConstants.html":{}}}],["libs/firebase/src/firebase.constants.ts:3",{"_index":731,"title":{},"body":{"classes/FirebaseConstants.html":{}}}],["libs/firebase/src/firebase.decorator.ts",{"_index":1872,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/firebase/src/firebase.interface.ts",{"_index":711,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/firebase/src/firebase.interface.ts:9",{"_index":771,"title":{},"body":{"interfaces/FirebaseModuleOptionsFactory.html":{}}}],["libs/firebase/src/firebase.module.ts",{"_index":733,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["libs/firebase/src/firebase.module.ts:20",{"_index":744,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["libs/firebase/src/firebase.module.ts:33",{"_index":748,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["libs/firebase/src/firebase.module.ts:52",{"_index":741,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["libs/firebase/src/firebase.module.ts:69",{"_index":736,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["libs/firebase/src/util/getfirebaseadmin.ts",{"_index":1873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/generate",{"_index":1875,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/neo4j",{"_index":997,"title":{},"body":{"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/prisma/src/inject",{"_index":1882,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/prisma/src/prisma.module.ts",{"_index":1535,"title":{},"body":{"modules/PrismaModule.html":{}}}],["libs/prisma/src/prisma.module.ts:14",{"_index":1539,"title":{},"body":{"modules/PrismaModule.html":{}}}],["libs/prisma/src/prisma.module.ts:33",{"_index":1543,"title":{},"body":{"modules/PrismaModule.html":{}}}],["libs/prisma/src/prisma.provider.ts",{"_index":1553,"title":{},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/prisma/src/prisma.provider.ts:12",{"_index":1562,"title":{},"body":{"interfaces/PrismaOptionsFactory.html":{}}}],["libs/prisma/src/prisma.service.ts",{"_index":1563,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["libs/prisma/src/prisma.service.ts:37",{"_index":1566,"title":{},"body":{"injectables/PrismaService.html":{}}}],["libs/prisma/src/prisma.service.ts:7",{"_index":1565,"title":{},"body":{"injectables/PrismaService.html":{}}}],["license",{"_index":2000,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["life",{"_index":1961,"title":{},"body":{"index.html":{}}}],["limit",{"_index":975,"title":{},"body":{"injectables/MessageService.html":{},"injectables/Neo4jService.html":{}}}],["limitation",{"_index":2026,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2049,"title":{},"body":{"license.html":{}}}],["literal",{"_index":1075,"title":{},"body":{"controllers/Neo4jController.html":{},"classes/PingResolver.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":1966,"title":{},"body":{"index.html":{}}}],["localized",{"_index":1951,"title":{},"body":{"index.html":{}}}],["location",{"_index":462,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/Neo4jService.html":{}}}],["log",{"_index":1570,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["logger",{"_index":162,"title":{},"body":{"injectables/ActivityService.html":{},"modules/AppModule.html":{},"classes/ChannelGateway.html":{},"controllers/FileFlowEngineController.html":{},"injectables/GqlAuthGuard.html":{},"injectables/Neo4jService.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{}}}],["logger(activityservice.name",{"_index":172,"title":{},"body":{"injectables/ActivityService.html":{}}}],["logger(channelgateway.name",{"_index":520,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["logger(fileflowenginecontroller.name",{"_index":685,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["logger(gqlauthguard.name",{"_index":795,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["logger(neo4jservice.name",{"_index":1165,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["logger(payloadresolver.name",{"_index":1331,"title":{},"body":{"classes/PayloadResolver.html":{}}}],["logger(pingresolver.name",{"_index":1365,"title":{},"body":{"classes/PingResolver.html":{}}}],["logger(pingservice.name",{"_index":1450,"title":{},"body":{"injectables/PingService.html":{}}}],["logger(usercontroller.name",{"_index":1697,"title":{},"body":{"controllers/UserController.html":{}}}],["logger(userresolver.name",{"_index":1729,"title":{},"body":{"classes/UserResolver.html":{}}}],["logqueries",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":359,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["longituderesolver",{"_index":1350,"title":{},"body":{"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["management",{"_index":1994,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":518,"title":{},"body":{"classes/ChannelGateway.html":{},"injectables/Neo4jTypeInterceptor.html":{}}}],["map((data",{"_index":1323,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["map((user",{"_index":1207,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["maps",{"_index":242,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["match",{"_index":1189,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["matched",{"_index":1201,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["matching",{"_index":89,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":613,"title":{"interfaces/Media.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["mediainput",{"_index":614,"title":{"interfaces/MediaInput.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["members",{"_index":628,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["members.length",{"_index":1534,"title":{},"body":{"injectables/PingService.html":{}}}],["membership",{"_index":1452,"title":{},"body":{"injectables/PingService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["membership.admin",{"_index":1464,"title":{},"body":{"injectables/PingService.html":{}}}],["membership.member",{"_index":1520,"title":{},"body":{"injectables/PingService.html":{}}}],["merchantability",{"_index":2051,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1180,"title":{},"body":{"injectables/Neo4jService.html":{},"license.html":{}}}],["message",{"_index":347,"title":{},"body":{"interfaces/BaseError.html":{},"injectables/BroadcastService.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"classes/Neo4jErrorFilter.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"miscellaneous/typealiases.html":{}}}],["message.channelid",{"_index":987,"title":{},"body":{"injectables/MessageService.html":{}}}],["message.resolver",{"_index":961,"title":{},"body":{"modules/MessageModule.html":{}}}],["message.service",{"_index":962,"title":{},"body":{"modules/MessageModule.html":{}}}],["message.text",{"_index":989,"title":{},"body":{"injectables/MessageService.html":{}}}],["message.userid",{"_index":986,"title":{},"body":{"injectables/MessageService.html":{}}}],["message/message.module",{"_index":576,"title":{},"body":{"modules/ChannelModule.html":{}}}],["message/message.service",{"_index":541,"title":{},"body":{"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{}}}],["messagebody",{"_index":534,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["messagemodule",{"_index":568,"title":{"modules/MessageModule.html":{}},"body":{"modules/ChannelModule.html":{},"modules/MessageModule.html":{},"modules.html":{},"overview.html":{}}}],["messagepattern",{"_index":1091,"title":{},"body":{"controllers/Neo4jController.html":{},"controllers/UserController.html":{}}}],["messagepattern('test",{"_index":1088,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["messagepattern(pattern.getpingswithinradius",{"_index":1071,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["messagepattern(pattern.userdevices",{"_index":1691,"title":{},"body":{"controllers/UserController.html":{}}}],["messageresolver",{"_index":960,"title":{"classes/MessageResolver.html":{}},"body":{"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"coverage.html":{}}}],["messages",{"_index":979,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageservice",{"_index":516,"title":{"injectables/MessageService.html":{}},"body":{"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"coverage.html":{},"overview.html":{}}}],["messaging",{"_index":713,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":13,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"controllers/DeletionServiceController.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"injectables/FileFlowEngineService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["microservice",{"_index":817,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"index.html":{}}}],["microservicehealthindicator",{"_index":813,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{}}}],["middlename",{"_index":278,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["minds",{"_index":1958,"title":{},"body":{"index.html":{}}}],["minimal",{"_index":1569,"title":{},"body":{"injectables/PrismaService.html":{}}}],["minimumscope",{"_index":937,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["minimumscope.indexof(scope",{"_index":943,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["miscellaneous",{"_index":1938,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2001,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":2028,"title":{},"body":{"license.html":{}}}],["module",{"_index":117,"title":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/FirebaseModule.html":{},"modules/HealthModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/FirebaseModule.html":{},"modules/HealthModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modulemetadata",{"_index":716,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["modules",{"_index":119,"title":{"modules.html":{}},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/FirebaseModule.html":{},"modules/HealthModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":1980,"title":{},"body":{"index.html":{}}}],["more",{"_index":1993,"title":{},"body":{"index.html":{}}}],["muhammed",{"_index":2087,"title":{},"body":{"properties.html":{}}}],["mustexist",{"_index":1130,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["mutation",{"_index":1392,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["mutation('addparticipant",{"_index":1429,"title":{},"body":{"classes/PingResolver.html":{}}}],["mutation('addparticipant')@useguards(gqlauthguard",{"_index":1367,"title":{},"body":{"classes/PingResolver.html":{}}}],["mutation('createping",{"_index":1401,"title":{},"body":{"classes/PingResolver.html":{}}}],["mutation('createping')@useguards(gqlauthguard",{"_index":1370,"title":{},"body":{"classes/PingResolver.html":{}}}],["mutation('createuser",{"_index":1733,"title":{},"body":{"classes/UserResolver.html":{}}}],["mutation('removeparticipant",{"_index":1432,"title":{},"body":{"classes/PingResolver.html":{}}}],["mutation('removeparticipant')@useguards(gqlauthguard",{"_index":1381,"title":{},"body":{"classes/PingResolver.html":{}}}],["mutation('updateping",{"_index":1387,"title":{},"body":{"classes/PingResolver.html":{}}}],["mutation('updateuser",{"_index":1744,"title":{},"body":{"classes/UserResolver.html":{}}}],["name",{"_index":24,"title":{"classes/Name.html":{}},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"classes/CreateUserInput.html":{},"controllers/FileFlowEngineController.html":{},"modules/FirebaseModule.html":{},"classes/ForbiddenError.html":{},"injectables/GqlAuthGuard.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"modules/PingModule.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["name.map((queue",{"_index":1613,"title":{},"body":{"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["namespace",{"_index":542,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["neo.clienterror.schema.constraintvalidationfailed",{"_index":1116,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["neo4j",{"_index":830,"title":{},"body":{"controllers/HealthController-1.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["neo4j+s",{"_index":2105,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["neo4j+ssc",{"_index":2106,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["neo4j.auth.basic(config.username",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["neo4j.constants",{"_index":1010,"title":{},"body":{"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{}}}],["neo4j.controller",{"_index":1138,"title":{},"body":{"modules/Neo4jModule.html":{}}}],["neo4j.driver",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["neo4j.service",{"_index":1006,"title":{},"body":{"modules/Neo4jCommonModule.html":{},"controllers/Neo4jController.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jTransactionInterceptor.html":{}}}],["neo4j.session.read",{"_index":1058,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["neo4j.session.write",{"_index":1059,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["neo4j.util",{"_index":1012,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["neo4j_config",{"_index":1008,"title":{},"body":{"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["neo4j_database",{"_index":423,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["neo4j_driver",{"_index":1009,"title":{},"body":{"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["neo4j_host",{"_index":419,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["neo4j_password",{"_index":422,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["neo4j_port",{"_index":420,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["neo4j_scheme",{"_index":418,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["neo4j_service",{"_index":406,"title":{},"body":{"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["neo4j_username",{"_index":421,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["neo4jclient",{"_index":445,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["neo4jcommon",{"_index":1152,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["neo4jcommonmodule",{"_index":996,"title":{"modules/Neo4jCommonModule.html":{}},"body":{"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"modules.html":{},"overview.html":{}}}],["neo4jcommonmodule.forrootasync",{"_index":426,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["neo4jcommonservice",{"_index":1005,"title":{"injectables/Neo4jCommonService.html":{}},"body":{"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"coverage.html":{}}}],["neo4jconfig",{"_index":429,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"modules/Neo4jModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["neo4jcontroller",{"_index":1065,"title":{"controllers/Neo4jController.html":{}},"body":{"controllers/Neo4jController.html":{},"modules/Neo4jModule.html":{},"coverage.html":{}}}],["neo4jerror",{"_index":1107,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["neo4jerrorfilter",{"_index":1102,"title":{"classes/Neo4jErrorFilter.html":{}},"body":{"classes/Neo4jErrorFilter.html":{},"coverage.html":{}}}],["neo4jmodule",{"_index":1133,"title":{"modules/Neo4jModule.html":{}},"body":{"modules/Neo4jModule.html":{},"modules.html":{},"overview.html":{}}}],["neo4jscheme",{"_index":1139,"title":{},"body":{"modules/Neo4jModule.html":{},"miscellaneous/typealiases.html":{}}}],["neo4jservice",{"_index":1090,"title":{"injectables/Neo4jService.html":{}},"body":{"controllers/Neo4jController.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["neo4jtransactioninterceptor",{"_index":1013,"title":{"injectables/Neo4jTransactionInterceptor.html":{}},"body":{"modules/Neo4jCommonModule.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"coverage.html":{}}}],["neo4jtypeinterceptor",{"_index":1257,"title":{"injectables/Neo4jTypeInterceptor.html":{}},"body":{"injectables/Neo4jTypeInterceptor.html":{},"coverage.html":{}}}],["nestinterceptor",{"_index":1248,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{}}}],["nestjs",{"_index":1979,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":847,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":45,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"injectables/ChannelService.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MessageModule.html":{},"injectables/MessageService.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":46,"title":{},"body":{"injectables/AWSService.html":{},"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/JwtStrategy.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/GqlAuthGuard.html":{},"classes/MessageResolver.html":{},"classes/PayloadResolver.html":{},"modules/PingModule.html":{},"classes/PingResolver.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":107,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"injectables/RMQService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"controllers/FileFlowEngineController.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":814,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":537,"title":{},"body":{"classes/ChannelGateway.html":{},"dependencies.html":{}}}],["networking",{"_index":1953,"title":{},"body":{"index.html":{}}}],["new",{"_index":55,"title":{},"body":{"injectables/AWSService.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/ChannelGateway.html":{},"controllers/FileFlowEngineController.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Neo4jService.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1245,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{}}}],["next.handle().pipe",{"_index":1253,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["noack",{"_index":1594,"title":{},"body":{"injectables/RMQService.html":{}}}],["node",{"_index":623,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["node(54776",{"_index":1117,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["node(54778",{"_index":1129,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["noninfringement",{"_index":2055,"title":{},"body":{"license.html":{}}}],["notfounderror",{"_index":369,"title":{"classes/NotFoundError.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["notice",{"_index":2041,"title":{},"body":{"license.html":{}}}],["null",{"_index":381,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":357,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":258,"title":{},"body":{"classes/AuthEntity.html":{},"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/MessageService.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["obj",{"_index":1336,"title":{},"body":{"classes/PayloadResolver.html":{}}}],["obj.constructor",{"_index":1339,"title":{},"body":{"classes/PayloadResolver.html":{}}}],["object",{"_index":1317,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"classes/WrappedPayload.html":{},"miscellaneous/variables.html":{}}}],["object.fromentries",{"_index":1318,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["object.fromentries(row.keys.map((key",{"_index":1277,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["object.keys(value).map((key",{"_index":1319,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["object.values(options).filter((v",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid",{"_index":274,"title":{},"body":{"classes/AuthEntity.html":{},"interfaces/BaseError.html":{},"modules/ChannelModule.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["objectid(dbresult.id).gettimestamp",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{}}}],["objectid(id).gettimestamp",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["objectid(item.id).gettimestamp",{"_index":1497,"title":{},"body":{"injectables/PingService.html":{}}}],["objectid(ping.id).gettimestamp",{"_index":1513,"title":{},"body":{"injectables/PingService.html":{}}}],["objectid(result.id).gettimestamp",{"_index":291,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/PingService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["objectid(result[0].id).gettimestamp",{"_index":1472,"title":{},"body":{"injectables/PingService.html":{}}}],["objectidresolver",{"_index":579,"title":{},"body":{"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["observable",{"_index":1111,"title":{},"body":{"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{}}}],["obtaining",{"_index":2017,"title":{},"body":{"license.html":{}}}],["omit",{"_index":719,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/User.html":{}}}],["onapplicationshutdown",{"_index":1023,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["ongatewayconnection",{"_index":509,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["ongatewayinit",{"_index":510,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["onmoduleinit",{"_index":155,"title":{},"body":{"injectables/ActivityRepository.html":{},"injectables/ForumRepository.html":{},"injectables/PingRepository.html":{},"injectables/PrismaService.html":{}}}],["openid",{"_index":938,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["optional",{"_index":26,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/FileFlowEngineController.html":{},"modules/FirebaseModule.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/UPingInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":737,"title":{},"body":{"modules/FirebaseModule.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.imports",{"_index":763,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/PrismaModule.html":{}}}],["options.inject",{"_index":768,"title":{},"body":{"modules/FirebaseModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["options.logqueries",{"_index":1571,"title":{},"body":{"injectables/PrismaService.html":{}}}],["options.useclass",{"_index":767,"title":{},"body":{"modules/FirebaseModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["options.useexisting",{"_index":765,"title":{},"body":{"modules/FirebaseModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["options.usefactory",{"_index":764,"title":{},"body":{"modules/FirebaseModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["options.usefactory(...args",{"_index":1559,"title":{},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["optionsfactory",{"_index":769,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["optionsfactory.createfirebasemoduleoptions",{"_index":770,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["orderby",{"_index":982,"title":{},"body":{"injectables/MessageService.html":{},"injectables/PingService.html":{}}}],["origin",{"_index":547,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["originalmsg",{"_index":1600,"title":{},"body":{"injectables/RMQService.html":{}}}],["otherwise",{"_index":2065,"title":{},"body":{"license.html":{}}}],["out",{"_index":133,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":2074,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":76,"title":{},"body":{"injectables/AWSService.html":{},"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["p",{"_index":1182,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["p:ping",{"_index":1181,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["package",{"_index":1889,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pageinfo",{"_index":616,"title":{"interfaces/PageInfo.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["param",{"_index":290,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"classes/User.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FirebaseModule.html":{},"injectables/GqlAuthGuard.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1041,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["parent",{"_index":1393,"title":{},"body":{"classes/PingResolver.html":{}}}],["partial",{"_index":1558,"title":{},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["participant",{"_index":1234,"title":{},"body":{"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["participantadded",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["participantremoved",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["participants",{"_index":603,"title":{},"body":{"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["participated",{"_index":1230,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["particular",{"_index":2053,"title":{},"body":{"license.html":{}}}],["party",{"_index":893,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["passport",{"_index":906,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportjwtsecret",{"_index":911,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":910,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(basestrategy",{"_index":898,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":437,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["path",{"_index":410,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["path.join",{"_index":413,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["pattern",{"_index":1092,"title":{},"body":{"controllers/Neo4jController.html":{},"injectables/PingService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pattern.participantadded",{"_index":1521,"title":{},"body":{"injectables/PingService.html":{}}}],["pattern.participantremoved",{"_index":1531,"title":{},"body":{"injectables/PingService.html":{}}}],["pattern.pingcreated",{"_index":1466,"title":{},"body":{"injectables/PingService.html":{}}}],["pattern.removemembership",{"_index":1530,"title":{},"body":{"injectables/PingService.html":{}}}],["pattern.usercreated",{"_index":1782,"title":{},"body":{"injectables/UserService.html":{}}}],["payload",{"_index":106,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"interfaces/IQuery-1.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["payload.interface",{"_index":909,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":871,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["payload.interface.ts:3",{"_index":874,"title":{},"body":{"interfaces/JsonObject.html":{}}}],["payload.resolver",{"_index":1714,"title":{},"body":{"modules/UserModule.html":{}}}],["payload?.scope",{"_index":940,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload['api.volunteerx/email",{"_index":948,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloadresolver",{"_index":1328,"title":{"classes/PayloadResolver.html":{}},"body":{"classes/PayloadResolver.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["people",{"_index":1967,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2011,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2035,"title":{},"body":{"license.html":{}}}],["persistent",{"_index":1598,"title":{},"body":{"injectables/RMQService.html":{}}}],["person",{"_index":2016,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2036,"title":{},"body":{"license.html":{}}}],["pick",{"_index":725,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["picks",{"_index":251,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"injectables/BroadcastService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["picture",{"_index":252,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["ping",{"_index":169,"title":{"classes/Ping.html":{}},"body":{"injectables/ActivityService.html":{},"modules/AppModule.html":{},"classes/AuthEntity.html":{},"interfaces/BaseError.html":{},"injectables/BroadcastService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ping.__typename",{"_index":302,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["ping.createdat",{"_index":185,"title":{},"body":{"injectables/ActivityService.html":{}}}],["ping.description",{"_index":182,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/PingService.html":{}}}],["ping.geometry.coordinates",{"_index":188,"title":{},"body":{"injectables/ActivityService.html":{}}}],["ping.geometry.coordinates[0",{"_index":1515,"title":{},"body":{"injectables/PingService.html":{}}}],["ping.geometry.coordinates[1",{"_index":1516,"title":{},"body":{"injectables/PingService.html":{}}}],["ping.gql",{"_index":1356,"title":{},"body":{"modules/PingModule.html":{}}}],["ping.id",{"_index":177,"title":{},"body":{"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["ping.latitude",{"_index":1213,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["ping.longitude",{"_index":1214,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["ping.media",{"_index":1517,"title":{},"body":{"injectables/PingService.html":{}}}],["ping.picks",{"_index":1216,"title":{},"body":{"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["ping.radius",{"_index":1514,"title":{},"body":{"injectables/PingService.html":{}}}],["ping.records[0].get('p').properties",{"_index":1186,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["ping.resolver",{"_index":1354,"title":{},"body":{"modules/PingModule.html":{}}}],["ping.service",{"_index":1352,"title":{},"body":{"modules/PingModule.html":{},"classes/PingResolver.html":{}}}],["ping.title",{"_index":180,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/PingService.html":{}}}],["ping.url",{"_index":183,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/PingService.html":{}}}],["ping.userid",{"_index":179,"title":{},"body":{"injectables/ActivityService.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["ping:ping",{"_index":1212,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["pingclient",{"_index":1358,"title":{},"body":{"injectables/PingRepository.html":{}}}],["pingconnection",{"_index":624,"title":{"interfaces/PingConnection.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["pingcreated",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingedge",{"_index":621,"title":{"interfaces/PingEdge.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["pingid",{"_index":176,"title":{},"body":{"injectables/ActivityService.html":{},"interfaces/IQuery-1.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["pingmodule",{"_index":1342,"title":{"modules/PingModule.html":{}},"body":{"modules/PingModule.html":{},"modules.html":{},"overview.html":{}}}],["pingnode",{"_index":395,"title":{},"body":{"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"miscellaneous/typealiases.html":{}}}],["pingparticipantadded",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingparticipantremoved",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingrepository",{"_index":842,"title":{"injectables/PingRepository.html":{}},"body":{"controllers/HealthController-3.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"injectables/PingService.html":{},"coverage.html":{},"overview.html":{}}}],["pingresolver",{"_index":1353,"title":{"classes/PingResolver.html":{}},"body":{"modules/PingModule.html":{},"classes/PingResolver.html":{},"coverage.html":{}}}],["pings",{"_index":280,"title":{},"body":{"classes/AuthEntity.html":{},"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["pings(@parent",{"_index":1761,"title":{},"body":{"classes/UserResolver.html":{}}}],["pings.length",{"_index":1419,"title":{},"body":{"classes/PingResolver.html":{}}}],["pings.map((ping",{"_index":1417,"title":{},"body":{"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["pingservice",{"_index":1346,"title":{"injectables/PingService.html":{}},"body":{"modules/PingModule.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"coverage.html":{},"overview.html":{}}}],["pingupdated",{"_index":1481,"title":{},"body":{"injectables/PingService.html":{}}}],["pipe",{"_index":1322,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["platform",{"_index":1955,"title":{},"body":{"index.html":{}}}],["playground",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["please",{"_index":2005,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["point",{"_index":189,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["point({latitude",{"_index":1210,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["point.distance",{"_index":1203,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["point[0",{"_index":1183,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["point[1",{"_index":1184,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["port",{"_index":434,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["portconfig",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":2045,"title":{},"body":{"license.html":{}}}],["possess",{"_index":946,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["post",{"_index":499,"title":{},"body":{"controllers/ChannelController.html":{},"index.html":{}}}],["post('createchannel",{"_index":496,"title":{},"body":{"controllers/ChannelController.html":{}}}],["prefix",{"_index":668,"title":{},"body":{"controllers/FileFlowEngineController.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["presigned",{"_index":64,"title":{},"body":{"injectables/AWSService.html":{}}}],["presigner",{"_index":44,"title":{},"body":{"injectables/AWSService.html":{},"dependencies.html":{}}}],["primsa_options",{"_index":1545,"title":{},"body":{"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["primsahealth",{"_index":836,"title":{},"body":{"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["prisma",{"_index":271,"title":{},"body":{"classes/AuthEntity.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.provider",{"_index":1548,"title":{},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{}}}],["prisma.service",{"_index":1544,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":780,"title":{},"body":{"injectables/ForumRepository.html":{},"injectables/PingRepository.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/db",{"_index":157,"title":{},"body":{"injectables/ActivityRepository.html":{}}}],["prismaclient",{"_index":154,"title":{},"body":{"injectables/ActivityRepository.html":{},"injectables/ForumRepository.html":{},"injectables/PingRepository.html":{},"injectables/PrismaService.html":{}}}],["prismadelegatenames",{"_index":1945,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["prismahealthindicator",{"_index":835,"title":{},"body":{"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["prismamodule",{"_index":308,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismamodule.register",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prismamoduleasyncoptions",{"_index":1542,"title":{"interfaces/PrismaModuleAsyncOptions.html":{}},"body":{"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismamoduleoptions",{"_index":1538,"title":{},"body":{"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"miscellaneous/typealiases.html":{}}}],["prismaoptionsfactory",{"_index":1556,"title":{"interfaces/PrismaOptionsFactory.html":{}},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"coverage.html":{}}}],["prismarepositories",{"_index":1886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prismaservice",{"_index":336,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/HealthController-2.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["prismaservice['user",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["private",{"_index":111,"title":{},"body":{"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FirebaseModule.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"injectables/JwtStrategy.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["problems",{"_index":1962,"title":{},"body":{"index.html":{}}}],["profile",{"_index":939,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["projects",{"_index":1999,"title":{},"body":{"index.html":{}}}],["promise",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"injectables/AWSService.html":{},"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"interfaces/BaseError.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JwtPayload.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"injectables/Neo4jService.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"injectables/PrismaService.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/WrappedPayload.html":{},"properties.html":{}}}],["property",{"_index":1121,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["property.replace(/`/g",{"_index":1127,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["provide",{"_index":755,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["provided",{"_index":1195,"title":{},"body":{"injectables/Neo4jService.html":{},"license.html":{}}}],["provider",{"_index":738,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/Neo4jCommonModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":124,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/FirebaseModule.html":{},"modules/HealthModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["proximity",{"_index":1989,"title":{},"body":{"index.html":{}}}],["public",{"_index":732,"title":{},"body":{"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{}}}],["publish",{"_index":2029,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2054,"title":{},"body":{"license.html":{}}}],["push",{"_index":1518,"title":{},"body":{"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["putobjectcommand",{"_index":37,"title":{},"body":{"injectables/AWSService.html":{}}}],["quasi",{"_index":1950,"title":{},"body":{"index.html":{}}}],["query",{"_index":587,"title":{},"body":{"classes/ChannelResolver.html":{},"controllers/FileFlowEngineController.html":{},"injectables/Neo4jService.html":{},"classes/PingResolver.html":{},"injectables/PrismaService.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["query('forums",{"_index":585,"title":{},"body":{"classes/ChannelResolver.html":{}}}],["query('getallping",{"_index":1411,"title":{},"body":{"classes/PingResolver.html":{}}}],["query('getallping')@useguards(gqlauthguard",{"_index":1373,"title":{},"body":{"classes/PingResolver.html":{}}}],["query('getparticipants",{"_index":1426,"title":{},"body":{"classes/PingResolver.html":{}}}],["query('getparticipants')@useguards(gqlauthguard",{"_index":1375,"title":{},"body":{"classes/PingResolver.html":{}}}],["query('getping",{"_index":1408,"title":{},"body":{"classes/PingResolver.html":{}}}],["query('getping')@useguards(gqlauthguard",{"_index":1377,"title":{},"body":{"classes/PingResolver.html":{}}}],["query('getpingswithinradius",{"_index":1422,"title":{},"body":{"classes/PingResolver.html":{}}}],["query('getpingswithinradius')@useguards(gqlauthguard",{"_index":1379,"title":{},"body":{"classes/PingResolver.html":{}}}],["query('isusernameavailable",{"_index":1741,"title":{},"body":{"classes/UserResolver.html":{}}}],["query('key",{"_index":694,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["query('type",{"_index":695,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["query('user",{"_index":1749,"title":{},"body":{"classes/UserResolver.html":{}}}],["query('user')@useguards(gqlauthguard",{"_index":1736,"title":{},"body":{"classes/UserResolver.html":{}}}],["query('userbyid",{"_index":1739,"title":{},"body":{"classes/UserResolver.html":{}}}],["queue",{"_index":823,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/RMQService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["queueoptions",{"_index":825,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{}}}],["r",{"_index":1238,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["r:participated",{"_index":1236,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["rabbitmq",{"_index":1976,"title":{},"body":{"index.html":{}}}],["rabbitmq_activity_queue",{"_index":149,"title":{},"body":{"modules/ActivityModule.html":{}}}],["rabbitmq_broadcast_queue",{"_index":425,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["rabbitmq_neo4j_queue",{"_index":1143,"title":{},"body":{"modules/Neo4jModule.html":{}}}],["rabbitmq_uri",{"_index":147,"title":{},"body":{"modules/ActivityModule.html":{},"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["radius",{"_index":461,"title":{},"body":{"injectables/BroadcastService.html":{},"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/Neo4jService.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["ratelimit",{"_index":917,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["reach",{"_index":2006,"title":{},"body":{"index.html":{}}}],["read",{"_index":1024,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["read(cypher",{"_index":1040,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"controllers/DeletionServiceController.html":{},"controllers/FileFlowEngineController.html":{},"classes/FirebaseConstants.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["real",{"_index":1960,"title":{},"body":{"index.html":{}}}],["recieved",{"_index":561,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["record",{"_index":1042,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["record.get('u').properties",{"_index":1206,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["reference",{"_index":1385,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["refers",{"_index":880,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["reflect",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":56,"title":{},"body":{"injectables/AWSService.html":{}}}],["register",{"_index":1536,"title":{},"body":{"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["register(options",{"_index":1537,"title":{},"body":{"modules/PrismaModule.html":{}}}],["register(undefined",{"_index":1619,"title":{},"body":{"modules/RmqModule.html":{}}}],["registerasync",{"_index":1540,"title":{},"body":{"modules/PrismaModule.html":{}}}],["registerasync(options",{"_index":1541,"title":{},"body":{"modules/PrismaModule.html":{}}}],["related",{"_index":1997,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":1191,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["remotegraphqldatasource",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["removed",{"_index":1239,"title":{},"body":{"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["removemembership",{"_index":1686,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["removemembership(@payload",{"_index":1704,"title":{},"body":{"controllers/UserController.html":{}}}],["removemembership(payload",{"_index":1693,"title":{},"body":{"controllers/UserController.html":{}}}],["removemembership(userid",{"_index":1777,"title":{},"body":{"injectables/UserService.html":{}}}],["removeparticipant",{"_index":1148,"title":{},"body":{"injectables/Neo4jService.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["removeparticipant(id",{"_index":637,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["removeparticipant(userid",{"_index":1163,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["removeuser",{"_index":849,"title":{},"body":{"classes/IMutation.html":{}}}],["removeuser(id",{"_index":377,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{}}}],["repository",{"_index":166,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/ChannelService.html":{},"injectables/PingService.html":{},"index.html":{},"properties.html":{}}}],["repository.decorator",{"_index":1550,"title":{},"body":{"modules/PrismaModule.html":{}}}],["repository.decorator.ts",{"_index":1883,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["repositoryproviders",{"_index":1551,"title":{},"body":{"modules/PrismaModule.html":{}}}],["representations",{"_index":246,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["request",{"_index":43,"title":{},"body":{"injectables/AWSService.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["request.http.headers.set",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":947,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["reset",{"_index":132,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolve",{"_index":1959,"title":{},"body":{"index.html":{}}}],["resolvefield",{"_index":1334,"title":{},"body":{"classes/PayloadResolver.html":{},"classes/PingResolver.html":{}}}],["resolvefield('ping",{"_index":1760,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvefield('user",{"_index":1390,"title":{},"body":{"classes/PingResolver.html":{}}}],["resolver",{"_index":588,"title":{},"body":{"classes/ChannelResolver.html":{},"classes/MessageResolver.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('forum",{"_index":589,"title":{},"body":{"classes/ChannelResolver.html":{}}}],["resolver('ping",{"_index":1400,"title":{},"body":{"classes/PingResolver.html":{}}}],["resolver('user",{"_index":1748,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolver('userpayload",{"_index":1338,"title":{},"body":{"classes/PayloadResolver.html":{}}}],["resolvereference",{"_index":1361,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["resolvereference(reference",{"_index":1383,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["resolvers",{"_index":582,"title":{},"body":{"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["response",{"_index":480,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["responsecontenttype",{"_index":86,"title":{},"body":{"injectables/AWSService.html":{}}}],["restriction",{"_index":2024,"title":{},"body":{"license.html":{}}}],["result",{"_index":272,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"controllers/ChannelController.html":{},"injectables/ChannelService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"injectables/PingService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["result.data",{"_index":1512,"title":{},"body":{"injectables/PingService.html":{}}}],["result.description",{"_index":1486,"title":{},"body":{"injectables/PingService.html":{}}}],["result.devices",{"_index":300,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.email",{"_index":293,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.geometry.coordinates[0",{"_index":1489,"title":{},"body":{"injectables/PingService.html":{}}}],["result.geometry.coordinates[1",{"_index":1490,"title":{},"body":{"injectables/PingService.html":{}}}],["result.id",{"_index":292,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/PingService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.map((item",{"_index":1495,"title":{},"body":{"injectables/PingService.html":{}}}],["result.media",{"_index":1491,"title":{},"body":{"injectables/PingService.html":{}}}],["result.name.firstname",{"_index":295,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.name.lastname",{"_index":297,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.name.middlename",{"_index":296,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.participants.map((id",{"_index":1533,"title":{},"body":{"injectables/PingService.html":{}}}],["result.picks",{"_index":299,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/PingService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.picture",{"_index":298,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.pings.length",{"_index":303,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result.pings.map",{"_index":301,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["result.pings.map((ping",{"_index":1784,"title":{},"body":{"injectables/UserService.html":{}}}],["result.radius",{"_index":1488,"title":{},"body":{"injectables/PingService.html":{}}}],["result.records.length",{"_index":1177,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["result.records[0",{"_index":1226,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["result.records[0].get('ping').properties",{"_index":1235,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["result.records[0].get('result').data",{"_index":1225,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["result.title",{"_index":1485,"title":{},"body":{"injectables/PingService.html":{}}}],["result.totalcount",{"_index":1511,"title":{},"body":{"injectables/PingService.html":{}}}],["result.url",{"_index":1487,"title":{},"body":{"injectables/PingService.html":{}}}],["result.userid",{"_index":1492,"title":{},"body":{"injectables/PingService.html":{}}}],["result.username",{"_index":294,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["result[0].description",{"_index":1474,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].geometry.coordinates[0",{"_index":1468,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].geometry.coordinates[1",{"_index":1469,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].id",{"_index":1462,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].media",{"_index":1476,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].picks",{"_index":1467,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].radius",{"_index":1470,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].title",{"_index":1473,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].url",{"_index":1475,"title":{},"body":{"injectables/PingService.html":{}}}],["result[0].userid",{"_index":1463,"title":{},"body":{"injectables/PingService.html":{}}}],["results",{"_index":88,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":84,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"controllers/DeletionServiceController.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"injectables/FileFlowEngineService.html":{},"modules/FirebaseModule.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"controllers/DeletionServiceController.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"injectables/FileFlowEngineService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"injectables/ForumRepository.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":2027,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["rmq.service",{"_index":1622,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rmqconfigservice",{"_index":1603,"title":{"injectables/RmqConfigService.html":{}},"body":{"injectables/RmqConfigService.html":{},"coverage.html":{}}}],["rmqcontext",{"_index":97,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"controllers/Neo4jController.html":{},"injectables/RMQService.html":{},"controllers/UserController.html":{}}}],["rmqmodule",{"_index":129,"title":{"modules/RmqModule.html":{}},"body":{"modules/ActivityModule.html":{},"modules/BroadcastModule.html":{},"modules/DeletionServiceModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["rmqmodule.register",{"_index":416,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["rmqmoduleoptions",{"_index":1620,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["rmqoptions",{"_index":1596,"title":{},"body":{"injectables/RMQService.html":{}}}],["rmqservice",{"_index":109,"title":{"injectables/RMQService.html":{}},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/ChannelController.html":{},"controllers/Neo4jController.html":{},"injectables/RMQService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["roadmap",{"_index":1991,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":936,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["rsa",{"_index":913,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["rxjs",{"_index":456,"title":{},"body":{"injectables/BroadcastService.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["s3",{"_index":40,"title":{},"body":{"injectables/AWSService.html":{},"dependencies.html":{}}}],["s3/aws.service",{"_index":682,"title":{},"body":{"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{}}}],["s3/aws.service.ts",{"_index":9,"title":{},"body":{"injectables/AWSService.html":{},"coverage.html":{}}}],["s3/aws.service.ts:13",{"_index":21,"title":{},"body":{"injectables/AWSService.html":{}}}],["s3/aws.service.ts:26",{"_index":29,"title":{},"body":{"injectables/AWSService.html":{}}}],["s3/aws.service.ts:46",{"_index":33,"title":{},"body":{"injectables/AWSService.html":{}}}],["s3client",{"_index":12,"title":{},"body":{"injectables/AWSService.html":{}}}],["sapphire/snowflake",{"_index":49,"title":{},"body":{"injectables/AWSService.html":{},"dependencies.html":{}}}],["scalars",{"_index":354,"title":{},"body":{"interfaces/BaseError.html":{},"modules/ChannelModule.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["scheme",{"_index":430,"title":{},"body":{"modules/BroadcastModule.html":{},"modules/Neo4jModule.html":{}}}],["scope",{"_index":895,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["sdk/client",{"_index":39,"title":{},"body":{"injectables/AWSService.html":{},"dependencies.html":{}}}],["sdk/s3",{"_index":42,"title":{},"body":{"injectables/AWSService.html":{},"dependencies.html":{}}}],["search",{"_index":1990,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":886,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["secretaccesskey",{"_index":61,"title":{},"body":{"injectables/AWSService.html":{}}}],["secretorkeyprovider",{"_index":915,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":1970,"title":{},"body":{"index.html":{}}}],["select",{"_index":1524,"title":{},"body":{"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["sell",{"_index":2033,"title":{},"body":{"license.html":{}}}],["send",{"_index":472,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["sendeachformulticast",{"_index":474,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["sending",{"_index":483,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["sent",{"_index":479,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["server",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"classes/ChannelGateway.html":{},"classes/WrappedPayload.html":{},"index.html":{}}}],["serverinfo",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverinfo.address",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverinfo.protocolversion",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":465,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/PingService.html":{}}}],["service.controller",{"_index":662,"title":{},"body":{"modules/DeletionServiceModule.html":{}}}],["service.controller.ts",{"_index":651,"title":{},"body":{"controllers/DeletionServiceController.html":{},"coverage.html":{}}}],["service.controller.ts:9",{"_index":652,"title":{},"body":{"controllers/DeletionServiceController.html":{}}}],["service.module.ts",{"_index":661,"title":{},"body":{"modules/DeletionServiceModule.html":{}}}],["service.service",{"_index":655,"title":{},"body":{"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{}}}],["service.service.ts",{"_index":663,"title":{},"body":{"injectables/DeletionServiceService.html":{},"coverage.html":{}}}],["service.service.ts:5",{"_index":664,"title":{},"body":{"injectables/DeletionServiceService.html":{}}}],["service/.env",{"_index":417,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["service/auth.service",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["service/forum.service",{"_index":575,"title":{},"body":{"modules/ChannelModule.html":{},"injectables/ChannelService.html":{},"modules/MessageModule.html":{}}}],["service/prisma.service",{"_index":139,"title":{},"body":{"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"controllers/HealthController-3.html":{},"injectables/PingService.html":{}}}],["service/src/broadcast.controller.ts",{"_index":384,"title":{},"body":{"controllers/BroadcastController.html":{},"coverage.html":{}}}],["service/src/broadcast.controller.ts:14",{"_index":389,"title":{},"body":{"controllers/BroadcastController.html":{}}}],["service/src/broadcast.controller.ts:25",{"_index":391,"title":{},"body":{"controllers/BroadcastController.html":{}}}],["service/src/broadcast.module.ts",{"_index":404,"title":{},"body":{"modules/BroadcastModule.html":{}}}],["service/src/broadcast.service.ts",{"_index":441,"title":{},"body":{"injectables/BroadcastService.html":{},"coverage.html":{}}}],["service/src/broadcast.service.ts:13",{"_index":448,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["service/src/broadcast.service.ts:27",{"_index":451,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["service/src/broadcast.service.ts:58",{"_index":452,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["service/src/deletion",{"_index":650,"title":{},"body":{"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"coverage.html":{}}}],["service/src/health/health.controller.ts",{"_index":804,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["service/src/health/health.controller.ts:21",{"_index":808,"title":{},"body":{"controllers/HealthController.html":{}}}],["service/src/health/health.module.ts",{"_index":843,"title":{},"body":{"modules/HealthModule.html":{}}}],["service/src/main.ts",{"_index":1843,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serviceaccountpath",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":1985,"title":{},"body":{"index.html":{}}}],["session",{"_index":1052,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["session.begintransaction",{"_index":1054,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["session.run(cypher",{"_index":1062,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["set",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":2042,"title":{},"body":{"license.html":{}}}],["showidentity",{"_index":1260,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["showlabelsortype",{"_index":1262,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["signed",{"_index":877,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["signedurl",{"_index":79,"title":{},"body":{"injectables/AWSService.html":{},"controllers/FileFlowEngineController.html":{}}}],["similar",{"_index":463,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/Neo4jService.html":{}}}],["snowflake",{"_index":48,"title":{},"body":{"injectables/AWSService.html":{}}}],["snowflake.generate().tostring",{"_index":69,"title":{},"body":{"injectables/AWSService.html":{}}}],["social",{"_index":1952,"title":{},"body":{"index.html":{}}}],["socket",{"_index":527,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["socket.io",{"_index":538,"title":{},"body":{"classes/ChannelGateway.html":{},"dependencies.html":{},"index.html":{}}}],["software",{"_index":2019,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"modules/ActivityModule.html":{},"injectables/ActivityRepository.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"modules/ChannelModule.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"modules/DeletionServiceModule.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"modules/FileFlowEngineModule.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"injectables/ForumRepository.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{},"modules/HealthModule.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"modules/MessageModule.html":{},"classes/MessageResolver.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingRepository.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{}}}],["spatial",{"_index":1988,"title":{},"body":{"index.html":{}}}],["split",{"_index":941,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/user/graphql/user.schema",{"_index":1660,"title":{},"body":{"classes/User.html":{}}}],["stack",{"_index":1978,"title":{},"body":{"index.html":{}}}],["startcursor",{"_index":619,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["started",{"_index":1948,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":254,"title":{},"body":{"classes/AuthEntity.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/PrismaModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"classes/User.html":{}}}],["status",{"_index":791,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["strategy",{"_index":903,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":28,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"classes/ChannelGateway.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/DeletionServiceController.html":{},"injectables/DeletionServiceService.html":{},"controllers/FileFlowEngineController.html":{},"injectables/FileFlowEngineService.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1698,"title":{},"body":{"controllers/UserController.html":{}}}],["sub",{"_index":881,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["subgraphhealthcheck",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["subgraphs",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["subject",{"_index":879,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"license.html":{}}}],["sublicense",{"_index":2031,"title":{},"body":{"license.html":{}}}],["subscribemessage",{"_index":535,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["subscribemessage('message",{"_index":532,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["substantial",{"_index":2044,"title":{},"body":{"license.html":{}}}],["success",{"_index":605,"title":{},"body":{"injectables/ChannelService.html":{},"injectables/MessageService.html":{}}}],["successful",{"_index":1101,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["super",{"_index":914,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super.canactivate(context",{"_index":802,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["supergraphsdl",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["support",{"_index":2069,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2070,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1301,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"classes/WrappedPayload.html":{},"miscellaneous/variables.html":{}}}],["symbol('primsa_options",{"_index":1555,"title":{},"body":{"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["sync",{"_index":1956,"title":{},"body":{"index.html":{}}}],["t",{"_index":380,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/WrappedPayload.html":{},"miscellaneous/typealiases.html":{}}}],["t.constructor",{"_index":1833,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["table",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":981,"title":{},"body":{"injectables/MessageService.html":{},"injectables/PingService.html":{}}}],["taken",{"_index":1128,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["tap",{"_index":1250,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["tech",{"_index":1977,"title":{},"body":{"index.html":{}}}],["terminusmodule",{"_index":844,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":386,"title":{},"body":{"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{}}}],["test').subscribe((data",{"_index":487,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["test(@payload",{"_index":1100,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["test(payload",{"_index":1087,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["testing",{"_index":1995,"title":{},"body":{"index.html":{}}}],["text",{"_index":988,"title":{},"body":{"injectables/MessageService.html":{}}}],["then((response",{"_index":477,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["this.$connect",{"_index":160,"title":{},"body":{"injectables/ActivityRepository.html":{},"injectables/ForumRepository.html":{},"injectables/PingRepository.html":{},"injectables/PrismaService.html":{}}}],["this.$on",{"_index":1575,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":1585,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.activityclient.emit",{"_index":1480,"title":{},"body":{"injectables/PingService.html":{}}}],["this.activitycount",{"_index":289,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.activityservice.createactivity",{"_index":114,"title":{},"body":{"controllers/ActivityController.html":{}}}],["this.authservice.finduser(email.tostring",{"_index":955,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.awsservice.createpresignedurl(type",{"_index":692,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["this.awsservice.createpresignedurldownload(key",{"_index":697,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["this.broadcastclient.emit",{"_index":1208,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["this.broadcastservice.broadcastping(id",{"_index":396,"title":{},"body":{"controllers/BroadcastController.html":{}}}],["this.broadcastservice.test",{"_index":397,"title":{},"body":{"controllers/BroadcastController.html":{}}}],["this.channelrepository.create",{"_index":597,"title":{},"body":{"injectables/ChannelService.html":{}}}],["this.channelservice.createchannel(channel",{"_index":505,"title":{},"body":{"controllers/ChannelController.html":{}}}],["this.config",{"_index":1051,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["this.config.database",{"_index":1056,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["this.configservice.get('aws_bucket",{"_index":73,"title":{},"body":{"injectables/AWSService.html":{}}}],["this.configservice.get('rabbit_mq_uri",{"_index":1612,"title":{},"body":{"injectables/RmqConfigService.html":{}}}],["this.configservice.get('rabbitmq_broadcast_queue",{"_index":824,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get('rabbitmq_neo4j_queue",{"_index":831,"title":{},"body":{"controllers/HealthController-1.html":{}}}],["this.configservice.get('rabbitmq_uri",{"_index":822,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/RMQService.html":{}}}],["this.configservice.get(`rabbit_mq_${queue}_queue",{"_index":1614,"title":{},"body":{"injectables/RmqConfigService.html":{}}}],["this.configservice.get(`rabbitmq_${queue}_queue",{"_index":1597,"title":{},"body":{"injectables/RMQService.html":{}}}],["this.connectionclients.delete(clientid",{"_index":557,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["this.connectionclients.set(clientid",{"_index":552,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":766,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["this.createasyncproviders(options",{"_index":762,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["this.createdat",{"_index":282,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.deletionserviceservice.gethello",{"_index":656,"title":{},"body":{"controllers/DeletionServiceController.html":{}}}],["this.devices",{"_index":288,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.driver",{"_index":1050,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["this.driver.close",{"_index":1064,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["this.driver.session",{"_index":1055,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["this.email",{"_index":284,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.firebase.messaging",{"_index":473,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["this.firebase.messaging.send",{"_index":489,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["this.forumrepository.message.create",{"_index":985,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.forumrepository.message.delete",{"_index":991,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.forumrepository.message.findmany",{"_index":980,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.getreadsession(databaseortransaction",{"_index":1061,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["this.getuserswithinradius",{"_index":1185,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["this.getwritesession(database",{"_index":1053,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["this.getwritesession(databaseortransaction",{"_index":1063,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["this.health.check",{"_index":818,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["this.id",{"_index":281,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.internalservererror",{"_index":1828,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["this.internalservererror.message",{"_index":1829,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["this.logger.error('unauthorized",{"_index":801,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["this.logger.log",{"_index":1233,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["this.logger.log('createactivity",{"_index":174,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.logger.log('gateway",{"_index":548,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["this.logger.log('ping",{"_index":1436,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.logger.log('user",{"_index":1762,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.logger.log('userid",{"_index":1424,"title":{},"body":{"classes/PingResolver.html":{},"injectables/PingService.html":{}}}],["this.logger.log(`client",{"_index":553,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["this.logger.log(client.connected",{"_index":555,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["this.logger.log(payload",{"_index":1702,"title":{},"body":{"controllers/UserController.html":{}}}],["this.logger.verbose(query",{"_index":1577,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.messageservice",{"_index":563,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["this.messageservice.addmessage(message",{"_index":562,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["this.microservice.pingcheck('rabbitmq",{"_index":819,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{}}}],["this.name",{"_index":283,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.neo4jclient.emit",{"_index":1465,"title":{},"body":{"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["this.neo4jclient.send('getpingswithinradius",{"_index":1508,"title":{},"body":{"injectables/PingService.html":{}}}],["this.neo4jclient.send('test",{"_index":486,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["this.neo4jcommon.int(first",{"_index":1224,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["this.neo4jcommon.read(cypher",{"_index":1223,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["this.neo4jcommon.write(cypher",{"_index":1171,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["this.neo4jservice.addparticipant(userid",{"_index":1098,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["this.neo4jservice.begintransaction",{"_index":1251,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["this.neo4jservice.createping(json.parse(ping",{"_index":1096,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["this.neo4jservice.createuser(json.parse(user",{"_index":1095,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["this.neo4jservice.getpingswithinradius",{"_index":1097,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["this.neo4jservice.removeparticipant(userid",{"_index":1099,"title":{},"body":{"controllers/Neo4jController.html":{}}}],["this.notfounderror",{"_index":1826,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["this.notfounderror.message",{"_index":1827,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["this.picks",{"_index":287,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.picture",{"_index":286,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.pings",{"_index":1661,"title":{},"body":{"classes/User.html":{}}}],["this.pingservice.addparticipant(id",{"_index":1431,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.pingservice.createping(payload",{"_index":1404,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.pingservice.getallping",{"_index":1415,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.pingservice.getparticipants",{"_index":1428,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.pingservice.getping(id",{"_index":1410,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.pingservice.getpingswithinradius",{"_index":1425,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.pingservice.removeparticipant(id",{"_index":1434,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.pingservice.updateping(id",{"_index":1407,"title":{},"body":{"classes/PingResolver.html":{}}}],["this.primsahealth.pingcheck('prisma",{"_index":837,"title":{},"body":{"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["this.prisma",{"_index":838,"title":{},"body":{"controllers/HealthController-2.html":{},"controllers/HealthController-3.html":{}}}],["this.repository.$transaction",{"_index":1454,"title":{},"body":{"injectables/PingService.html":{}}}],["this.repository.activity.create",{"_index":175,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.repository.channel",{"_index":594,"title":{},"body":{"injectables/ChannelService.html":{}}}],["this.repository.ping.create",{"_index":1455,"title":{},"body":{"injectables/PingService.html":{}}}],["this.repository.ping.findmany",{"_index":1494,"title":{},"body":{"injectables/PingService.html":{}}}],["this.repository.ping.findunique",{"_index":1493,"title":{},"body":{"injectables/PingService.html":{}}}],["this.repository.ping.update",{"_index":1477,"title":{},"body":{"injectables/PingService.html":{}}}],["this.rmqservice.ack(context",{"_index":116,"title":{},"body":{"controllers/ActivityController.html":{},"controllers/BroadcastController.html":{},"controllers/Neo4jController.html":{},"controllers/UserController.html":{}}}],["this.s3client",{"_index":54,"title":{},"body":{"injectables/AWSService.html":{}}}],["this.server.emit('message",{"_index":560,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["this.showidentity",{"_index":1326,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["this.showlabelsortype",{"_index":1325,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["this.unauthorizederror",{"_index":1823,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["this.unauthorizederror.message",{"_index":1824,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["this.unknownerror",{"_index":1831,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["this.unknownerror.message",{"_index":1832,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["this.userclient.send('userdevices",{"_index":468,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["this.username",{"_index":285,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["this.userrepo.count",{"_index":1786,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.create",{"_index":1781,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findmany",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findunique",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.userrepo.update",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.addmembership(userid",{"_index":1703,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.emit",{"_index":1529,"title":{},"body":{"injectables/PingService.html":{}}}],["this.userservice.emit(pattern.addmembership",{"_index":1461,"title":{},"body":{"injectables/PingService.html":{}}}],["this.userservice.getuserdevices(users",{"_index":1701,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removemembership(userid",{"_index":1705,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.createuser(user.toentityfrominput(payload",{"_index":1755,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.usersservice.findone(graphqlobjectid.parsevalue(id",{"_index":1754,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.usersservice.findone(graphqlobjectid.parsevalue(reference.id",{"_index":1759,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.usersservice.isusernameavailable(username",{"_index":1753,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.usersservice.update(payload",{"_index":1757,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.wrappayload.wrap(user",{"_index":1751,"title":{},"body":{"classes/UserResolver.html":{}}}],["throw",{"_index":945,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/PingService.html":{}}}],["throwerror",{"_index":1112,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["time",{"_index":891,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/Neo4jService.html":{}}}],["title",{"_index":601,"title":{},"body":{"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["toentityfrominput",{"_index":1644,"title":{},"body":{"classes/User.html":{}}}],["toentityfrominput(input",{"_index":1655,"title":{},"body":{"classes/User.html":{}}}],["toentityfromprisma",{"_index":255,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["toentityfromprisma(result",{"_index":269,"title":{},"body":{"classes/AuthEntity.html":{},"classes/User.html":{}}}],["token",{"_index":464,"title":{},"body":{"injectables/BroadcastService.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["tokens",{"_index":467,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["tokens.length",{"_index":470,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["tonative",{"_index":1274,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tonative(data",{"_index":1324,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["tonative(row.get(key",{"_index":1278,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tonative(v",{"_index":1281,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tonative(value.identity",{"_index":1284,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tonative(value.labels",{"_index":1286,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tonative(value.properties",{"_index":1287,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tonative(value.type",{"_index":1290,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tonative(value[key",{"_index":1320,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":2064,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":625,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/Neo4jService.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["totalcount.tonumber",{"_index":1228,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["totalcount=0",{"_index":1220,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["transaction",{"_index":1030,"title":{},"body":{"injectables/Neo4jCommonService.html":{},"injectables/Neo4jTransactionInterceptor.html":{}}}],["transaction.commit",{"_index":1254,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["transaction.interceptor",{"_index":1014,"title":{},"body":{"modules/Neo4jCommonModule.html":{}}}],["transaction.interceptor.ts",{"_index":1240,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{},"coverage.html":{}}}],["transaction.interceptor.ts:12",{"_index":1243,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["transaction.interceptor.ts:14",{"_index":1247,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["transaction.rollback",{"_index":1256,"title":{},"body":{"injectables/Neo4jTransactionInterceptor.html":{}}}],["transformer",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":809,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/RMQService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["transport.rmq",{"_index":820,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/RMQService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["transports",{"_index":544,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["true",{"_index":142,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"injectables/ChannelService.html":{},"modules/FileFlowEngineModule.html":{},"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/JwtStrategy.html":{},"injectables/MessageService.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"injectables/RMQService.html":{},"injectables/UserService.html":{}}}],["try",{"_index":596,"title":{},"body":{"injectables/ChannelService.html":{},"injectables/MessageService.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tuser",{"_index":793,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"classes/UserResolver.html":{},"miscellaneous/typealiases.html":{}}}],["twittersnowflake",{"_index":47,"title":{},"body":{"injectables/AWSService.html":{}}}],["type",{"_index":25,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"controllers/FileFlowEngineController.html":{},"interfaces/FirebaseAdmin.html":{},"classes/FirebaseConstants.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/MessageService.html":{},"classes/Name.html":{},"modules/Neo4jCommonModule.html":{},"injectables/Neo4jCommonService.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTransactionInterceptor.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"modules/PrismaModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"injectables/RmqConfigService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.interceptor.ts",{"_index":1258,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.interceptor.ts:77",{"_index":1261,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["type.interceptor.ts:83",{"_index":1263,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{}}}],["typealiases",{"_index":2089,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":379,"title":{},"body":{"interfaces/BaseError.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["typepaths",{"_index":580,"title":{},"body":{"modules/ChannelModule.html":{},"modules/PingModule.html":{},"modules/UserModule.html":{}}}],["types",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["typings/channel.ts",{"_index":1876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typings/ping.ts",{"_index":1878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typings/user.ts",{"_index":1879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":1170,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["u.id",{"_index":1202,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["u.latitude",{"_index":1204,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["u.longitude",{"_index":1205,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["u001b[90m",{"_index":1582,"title":{},"body":{"injectables/PrismaService.html":{}}}],["u001b[96m",{"_index":1580,"title":{},"body":{"injectables/PrismaService.html":{}}}],["u:user",{"_index":1169,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["unauthorized",{"_index":1825,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["unauthorizederror",{"_index":370,"title":{"classes/UnauthorizedError.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"injectables/GqlAuthGuard.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["unauthorizedexception",{"_index":907,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('signing",{"_index":930,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":1115,"title":{},"body":{"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["unix",{"_index":887,"title":{},"body":{"interfaces/JsonObject.html":{},"interfaces/JwtPayload.html":{}}}],["unknown",{"_index":31,"title":{},"body":{"injectables/AWSService.html":{},"controllers/ActivityController.html":{},"injectables/ActivityService.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"controllers/ChannelController.html":{},"classes/ChannelResolver.html":{},"injectables/ChannelService.html":{},"controllers/FileFlowEngineController.html":{},"injectables/MessageService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/WrappedPayload.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":373,"title":{"classes/UnknownError.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/WrappedPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["update",{"_index":1479,"title":{},"body":{"injectables/PingService.html":{},"injectables/UserService.html":{}}}],["update(payload",{"_index":1779,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedparticipants",{"_index":1525,"title":{},"body":{"injectables/PingService.html":{}}}],["updatedping",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["updatemedia",{"_index":1362,"title":{},"body":{"classes/PingResolver.html":{}}}],["updatemedia(@args('id",{"_index":1405,"title":{},"body":{"classes/PingResolver.html":{}}}],["updatemedia(id",{"_index":1386,"title":{},"body":{"classes/PingResolver.html":{}}}],["updateping",{"_index":1438,"title":{},"body":{"injectables/PingService.html":{}}}],["updateping(id",{"_index":635,"title":{},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{}}}],["updateuser",{"_index":850,"title":{},"body":{"classes/IMutation.html":{},"classes/UserResolver.html":{}}}],["updateuser(@args('payload",{"_index":1756,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateuser(payload",{"_index":376,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{}}}],["updateuserinput",{"_index":361,"title":{"classes/UpdateUserInput.html":{}},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["upinginput",{"_index":612,"title":{"interfaces/UPingInput.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["upingswithinradiusinput",{"_index":615,"title":{"interfaces/UPingsWithinRadiusInput.html":{}},"body":{"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"coverage.html":{}}}],["upload",{"_index":66,"title":{},"body":{"injectables/AWSService.html":{}}}],["uri",{"_index":696,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["url",{"_index":65,"title":{},"body":{"injectables/AWSService.html":{},"injectables/ActivityService.html":{},"modules/AppModule.html":{},"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"miscellaneous/typealiases.html":{}}}],["url.tostring",{"_index":1456,"title":{},"body":{"injectables/PingService.html":{}}}],["urlresolver",{"_index":1351,"title":{},"body":{"modules/PingModule.html":{}}}],["urls",{"_index":821,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HealthController-1.html":{},"injectables/RMQService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["use",{"_index":949,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{}}}],["useclass",{"_index":723,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["used",{"_index":1188,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["useexisting",{"_index":724,"title":{},"body":{"interfaces/FirebaseAdmin.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{}}}],["usefactory",{"_index":428,"title":{},"body":{"modules/BroadcastModule.html":{},"interfaces/FirebaseAdmin.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptionsFactory.html":{},"modules/Neo4jCommonModule.html":{},"modules/Neo4jModule.html":{},"interfaces/PrismaModuleAsyncOptions.html":{},"interfaces/PrismaOptionsFactory.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["useguards",{"_index":392,"title":{},"body":{"controllers/BroadcastController.html":{},"controllers/FileFlowEngineController.html":{},"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["useguards(authguard",{"_index":689,"title":{},"body":{"controllers/FileFlowEngineController.html":{}}}],["useguards(gqlauthguard",{"_index":1402,"title":{},"body":{"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["user",{"_index":243,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"injectables/BroadcastService.html":{},"interfaces/CreatePingInput.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"interfaces/Forum.html":{},"interfaces/GetParticipantsResponse.html":{},"injectables/GqlAuthGuard.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"interfaces/IQuery-1.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"injectables/JwtStrategy.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"classes/Name.html":{},"controllers/Neo4jController.html":{},"classes/Neo4jErrorFilter.html":{},"injectables/Neo4jService.html":{},"classes/NotFoundError.html":{},"interfaces/PageInfo.html":{},"classes/PayloadResolver.html":{},"classes/Ping.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1200,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["user(@parent",{"_index":1435,"title":{},"body":{"classes/PingResolver.html":{}}}],["user(ping",{"_index":1389,"title":{},"body":{"classes/PingResolver.html":{}}}],["user.controller",{"_index":1715,"title":{},"body":{"modules/UserModule.html":{}}}],["user.devices",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["user.devices.length",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["user.gql",{"_index":1718,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":1172,"title":{},"body":{"injectables/Neo4jService.html":{},"classes/PingResolver.html":{},"classes/UserResolver.html":{}}}],["user.latitude",{"_index":1174,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["user.longitude",{"_index":1175,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["user.picks",{"_index":1173,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["user.resolver",{"_index":1717,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":1696,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user.toentityfromprisma(result",{"_index":1783,"title":{},"body":{"injectables/UserService.html":{}}}],["user/graphql/user.schema",{"_index":1822,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["user:user",{"_index":1229,"title":{},"body":{"injectables/Neo4jService.html":{}}}],["user_service",{"_index":407,"title":{},"body":{"modules/BroadcastModule.html":{},"injectables/BroadcastService.html":{},"modules/PingModule.html":{},"injectables/PingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userbyid",{"_index":855,"title":{},"body":{"classes/IQuery.html":{}}}],["userbyid(id",{"_index":365,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{}}}],["userclient",{"_index":447,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["usercontroller",{"_index":1682,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercreated",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercreateinput",{"_index":1658,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userdevices",{"_index":1700,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":178,"title":{},"body":{"injectables/ActivityService.html":{},"interfaces/CreatePingInput.html":{},"interfaces/GetParticipantsResponse.html":{},"interfaces/IQuery-1.html":{},"interfaces/Media.html":{},"interfaces/MediaInput.html":{},"injectables/MessageService.html":{},"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"interfaces/PageInfo.html":{},"interfaces/PingConnection.html":{},"interfaces/PingEdge.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"interfaces/UPingInput.html":{},"interfaces/UPingsWithinRadiusInput.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":1706,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":253,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"interfaces/BaseError.html":{},"modules/BroadcastModule.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"modules/Neo4jModule.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["usernode",{"_index":1093,"title":{},"body":{"controllers/Neo4jController.html":{},"injectables/Neo4jService.html":{},"miscellaneous/typealiases.html":{}}}],["userpayload",{"_index":364,"title":{},"body":{"interfaces/BaseError.html":{},"classes/CreateUserInput.html":{},"classes/ForbiddenError.html":{},"classes/IMutation.html":{},"classes/IQuery.html":{},"classes/InternalServerError.html":{},"classes/InvalidInputError.html":{},"classes/Name.html":{},"classes/NotFoundError.html":{},"classes/Ping.html":{},"classes/UnauthorizedError.html":{},"classes/UnknownError.html":{},"classes/UpdateUserInput.html":{},"classes/User-1.html":{},"miscellaneous/typealiases.html":{}}}],["userrepo",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userresolver",{"_index":1716,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"controllers/BroadcastController.html":{},"injectables/BroadcastService.html":{},"injectables/Neo4jService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":1439,"title":{"injectables/UserService.html":{}},"body":{"injectables/PingService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":1728,"title":{},"body":{"classes/UserResolver.html":{}}}],["usevalue",{"_index":757,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/Neo4jCommonModule.html":{},"modules/PrismaModule.html":{}}}],["using",{"_index":1975,"title":{},"body":{"index.html":{}}}],["util",{"_index":754,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["v).length",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":899,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":901,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":145,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/Neo4jModule.html":{}}}],["validator",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":171,"title":{},"body":{"injectables/ActivityService.html":{},"classes/ChannelGateway.html":{},"injectables/ChannelService.html":{},"classes/FirebaseConstants.html":{},"injectables/GqlAuthGuard.html":{},"injectables/Neo4jCommonService.html":{},"injectables/Neo4jService.html":{},"injectables/Neo4jTypeInterceptor.html":{},"classes/PayloadResolver.html":{},"classes/PingResolver.html":{},"injectables/PingService.html":{},"injectables/PrismaService.html":{},"injectables/RMQService.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["value.map((v",{"_index":1280,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["value.records",{"_index":1275,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["value.records?.map((row",{"_index":1276,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["value.srid.tonumber",{"_index":1302,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["value.tonumber",{"_index":1292,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["value.tostring",{"_index":1299,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["value.x",{"_index":1305,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["value.y",{"_index":1304,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["value.z",{"_index":1311,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2111,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2081,"title":{},"body":{"properties.html":{}}}],["void",{"_index":525,"title":{},"body":{"classes/ChannelGateway.html":{},"injectables/RMQService.html":{}}}],["volunteers",{"_index":1954,"title":{},"body":{"index.html":{}}}],["volunteerx",{"_index":1949,"title":{},"body":{"index.html":{},"license.html":{}}}],["want",{"_index":1969,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2050,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2046,"title":{},"body":{"license.html":{}}}],["websocket",{"_index":545,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["websocketgateway",{"_index":536,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["websocketserver",{"_index":521,"title":{},"body":{"classes/ChannelGateway.html":{}}}],["well",{"_index":922,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/Neo4jService.html":{}}}],["wgs",{"_index":1306,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["whether",{"_index":2061,"title":{},"body":{"license.html":{}}}],["willsendrequest",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["within",{"_index":459,"title":{},"body":{"injectables/BroadcastService.html":{},"injectables/Neo4jService.html":{},"injectables/PingService.html":{}}}],["without",{"_index":2023,"title":{},"body":{"license.html":{}}}],["world",{"_index":238,"title":{},"body":{"injectables/AppService.html":{},"classes/ChannelResolver.html":{},"injectables/DeletionServiceService.html":{},"injectables/FileFlowEngineService.html":{},"index.html":{}}}],["wrap",{"_index":1815,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["wrap(t",{"_index":1820,"title":{},"body":{"classes/WrappedPayload.html":{}}}],["wrappayload",{"_index":1723,"title":{},"body":{"classes/UserResolver.html":{}}}],["wrappedpayload",{"_index":1731,"title":{"classes/WrappedPayload.html":{}},"body":{"classes/UserResolver.html":{},"classes/WrappedPayload.html":{},"coverage.html":{}}}],["write",{"_index":1025,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["write(cypher",{"_index":1046,"title":{},"body":{"injectables/Neo4jCommonService.html":{}}}],["x",{"_index":1313,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["x/server.git",{"_index":2084,"title":{},"body":{"properties.html":{}}}],["y",{"_index":1314,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":260,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/GqlAuthGuard.html":{},"interfaces/IQuery-1.html":{},"injectables/Neo4jCommonService.html":{},"classes/PingResolver.html":{},"classes/User.html":{}}}],["ykyof3i2hlke9luxzr2xskyaxy2p_gkjuri7kpuxzyvlrhbzu_okvch5obypzcmatdzu5gcnllgpb3ytnprihnrq",{"_index":476,"title":{},"body":{"injectables/BroadcastService.html":{}}}],["z",{"_index":1315,"title":{},"body":{"injectables/Neo4jTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":1125,"title":{},"body":{"classes/Neo4jErrorFilter.html":{}}}],["zoom",{"_index":131,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BroadcastModule.html":{},"modules/ChannelModule.html":{},"modules/DeletionServiceModule.html":{},"modules/FileFlowEngineModule.html":{},"modules/MessageModule.html":{},"modules/Neo4jModule.html":{},"modules/PingModule.html":{},"modules/RmqModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AWSService.html":{"url":"injectables/AWSService.html","title":"injectable - AWSService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AWSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/file-flow-engine/src/aws-s3/aws.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPresignedUrl\n                            \n                            \n                                    Async\n                                createPresignedUrlDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/file-flow-engine/src/aws-s3/aws.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPresignedUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPresignedUrl(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-flow-engine/src/aws-s3/aws.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPresignedUrlDownload\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPresignedUrlDownload(Key: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-flow-engine/src/aws-s3/aws.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in apps/file-flow-engine/src/aws-s3/aws.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  GetObjectCommand,\n  PutObjectCommand,\n  S3Client,\n} from '@aws-sdk/client-s3';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TwitterSnowflake as Snowflake } from '@sapphire/snowflake';\n\n@Injectable()\nexport class AWSService {\n  s3Client: S3Client;\n\n  constructor(private readonly configService: ConfigService) {\n    this.s3Client = new S3Client({\n      region: configService.get('AWS_REGION'),\n      credentials: {\n        accessKeyId: configService.get('AWS_ACCESS_KEY'),\n        secretAccessKey: configService.get('AWS_SECRET_ACCESS_KEY'),\n      },\n    });\n  }\n\n  //   Create Presigned Url for upload\n  async createPresignedUrl(type: string) {\n    const _Key = Snowflake.generate().toString();\n\n    const Key = `${_Key}.${type.split('/')[1]}`;\n\n    const command = new PutObjectCommand({\n      Bucket: this.configService.get('AWS_BUCKET'),\n      Key,\n      ContentType: type,\n      // ACL: 'bucket-owner-full-control',\n    });\n\n    const signedUrl = await getSignedUrl(this.s3Client, command, {\n      expiresIn: 60,\n    });\n\n    return { Key, signedUrl };\n  }\n\n  //   Create Presigned Url for download\n  async createPresignedUrlDownload(Key: string, type: string) {\n    const command = new GetObjectCommand({\n      Bucket: this.configService.get('AWS_BUCKET'),\n      Key,\n      ResponseContentType: type,\n    });\n\n    return await getSignedUrl(this.s3Client, command, {\n      expiresIn: 600,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ActivityController.html":{"url":"controllers/ActivityController.html","title":"controller - ActivityController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ActivityController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/activity/src/activity.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handlePingCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handlePingCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePingCreated(data: string, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('pingCreated')\n                \n            \n\n                    \n                        \n                            Defined in apps/activity/src/activity.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ActivityService } from './activity.service';\nimport { Ctx, EventPattern, Payload, RmqContext } from '@nestjs/microservices';\nimport { IPing, RMQService } from '@app/common';\n\n@Controller()\nexport class ActivityController {\n  constructor(\n    private readonly activityService: ActivityService,\n    private readonly rmqService: RMQService,\n  ) {}\n\n  @EventPattern('pingCreated')\n  async handlePingCreated(@Payload() data: string, @Ctx() context: RmqContext) {\n    const activityID = this.activityService.createActivity(\n      JSON.parse(data) as IPing,\n    );\n    this.rmqService.ack(context);\n    return activityID;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActivityModule.html":{"url":"modules/ActivityModule.html","title":"module - ActivityModule","body":"\n                   \n\n\n\n\n    Modules\n    ActivityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivityModule\n\n\n\ncluster_ActivityModule_imports\n\n\n\ncluster_ActivityModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nActivityModule\n\nActivityModule\n\nActivityModule -->\n\nRmqModule->ActivityModule\n\n\n\n\n\nActivityRepository\n\nActivityRepository\n\nActivityModule -->\n\nActivityRepository->ActivityModule\n\n\n\n\n\nActivityService\n\nActivityService\n\nActivityModule -->\n\nActivityService->ActivityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/activity/src/activity.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActivityRepository\n                        \n                        \n                            ActivityService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ActivityController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ActivityService } from './activity.service';\nimport { RmqModule } from '@app/common';\nimport { ConfigModule } from '@nestjs/config';\nimport * as Joi from 'joi';\nimport { ActivityController } from './activity.controller';\nimport { ActivityRepository } from './service/prisma.service';\n\n@Module({\n  imports: [\n    RmqModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/activity/.env',\n      validationSchema: Joi.object({\n        RABBITMQ_URI: Joi.string().required(),\n        RABBITMQ_ACTIVITY_QUEUE: Joi.string().required(),\n        ACTIVITY_PORT: Joi.number().required(),\n      }),\n    }),\n  ],\n  controllers: [ActivityController],\n  providers: [ActivityService, ActivityRepository],\n})\nexport class ActivityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivityRepository.html":{"url":"injectables/ActivityRepository.html","title":"injectable - ActivityRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivityRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/activity/src/service/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/activity/src/service/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/db-activity';\n\n@Injectable()\nexport class ActivityRepository extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivityService.html":{"url":"injectables/ActivityService.html","title":"injectable - ActivityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/activity/src/activity.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ActivityRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/activity/src/activity.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ActivityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createActivity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createActivity(ping: IPing)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/activity/src/activity.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ping\n                                            \n                                                            IPing\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ActivityService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/activity/src/activity.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { IPing } from '@app/common';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ActivityRepository } from './service/prisma.service';\n\n@Injectable()\nexport class ActivityService {\n  constructor(private readonly repository: ActivityRepository) {}\n\n  private readonly logger = new Logger(ActivityService.name);\n\n  async createActivity(ping: IPing) {\n    this.logger.log('createActivity', ping);\n    const activity = await this.repository.activity.create({\n      data: {\n        pingID: ping.id,\n        userID: ping.userID,\n        name: ping.title,\n        description: ping.description,\n        url: ping.url,\n        createdAt: ping.createdAt,\n        geometry: {\n          coordinates: ping.geometry.coordinates,\n          type: 'Point',\n        },\n      },\n    });\n\n    return activity.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose, RemoteGraphQLDataSource } from '@apollo/gateway';\nimport { ConfigModule } from '@nestjs/config';\nimport { portConfig } from '@app/common';\nimport { ApolloServerPluginLandingPageLocalDefault } from '@apollo/server/plugin/landingPage/default';\nimport { AuthModule } from '@app/auth';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloGatewayDriver,\n      server: {\n        playground: false,\n        plugins: [ApolloServerPluginLandingPageLocalDefault()],\n      },\n      gateway: {\n        buildService: ({ url }) => {\n          return new RemoteGraphQLDataSource({\n            url,\n            willSendRequest: ({ request, context }) => {\n              request.http.headers.set(\n                'authorization',\n                context?.req?.get('authorization'),\n              );\n            },\n          });\n        },\n        supergraphSdl: new IntrospectAndCompose({\n          subgraphHealthCheck: true,\n          subgraphs: [\n            {\n              name: 'users',\n              // url: 'http://localhost:3510/graphql',\n              url: 'http://users:3510/graphql',\n            },\n            {\n              name: 'ping',\n              // url: 'http://localhost:3520/graphql',\n              url: 'http://ping:3520/graphql',\n            },\n          ],\n        }),\n      },\n    }),\n    AuthModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [portConfig],\n      envFilePath: './apps/gateway/.env',\n      expandVariables: true,\n    }),\n  ],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntity.html":{"url":"classes/AuthEntity.html","title":"class - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/entity/auth.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Maps user data between different representations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activityCount\n                            \n                            \n                                createdAt\n                            \n                            \n                                devices\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                picks\n                            \n                            \n                                    Optional\n                                picture\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ToEntityFromPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: Name, email: string, username: string, picks: string[], devices: string[], picture?: string, id?: string, createdAt?: Date, activityCount?: number)\n                    \n                \n                        \n                            \n                                Defined in libs/auth/src/entity/auth.entity.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        Name\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        picks\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devices\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        picture\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        activityCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activityCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        devices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Name\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/entity/auth.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ToEntityFromPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    ToEntityFromPrisma(result: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/entity/auth.entity.ts:57\n                        \n                    \n\n\n            \n                \n                        Maps a Prisma result to a user entity.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Prisma result.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthEntity\n\n                        \n                            \n                                The user entity.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'bson';\n\n// type Ping = {\n//   __typename: 'Ping';\n//   id: string;\n// };\n\ntype Name = {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n};\n\n/**\n * Maps user data between different representations.\n */\nexport class AuthEntity {\n  id: string;\n  createdAt: Date;\n  name: Name;\n  email: string;\n  username: string;\n  picture?: string;\n  picks: string[];\n  devices: string[];\n  //   pings?: Ping[];\n  activityCount: number;\n\n  constructor(\n    name: Name,\n    email: string,\n    username: string,\n    picks: string[],\n    devices: string[],\n    picture?: string,\n    id?: string,\n    createdAt?: Date,\n    activityCount?: number,\n  ) {\n    this.id = id;\n    this.createdAt = createdAt;\n    this.name = name;\n    this.email = email;\n    this.username = username;\n    this.picture = picture;\n    this.picks = picks;\n    this.devices = devices;\n    this.activityCount = activityCount;\n  }\n\n  /**\n   * Maps a Prisma result to a user entity.\n   *\n   * @param result The Prisma result.\n   * @returns The user entity.\n   */\n  static ToEntityFromPrisma(result: any): AuthEntity {\n    return {\n      createdAt: new ObjectId(result.id).getTimestamp(),\n      id: result.id,\n      email: result.email,\n      username: result.username,\n      name: {\n        firstName: result.name.firstName,\n        middleName: result.name.middleName,\n        lastName: result.name.lastName,\n      },\n      picture: result.picture,\n      picks: result.picks,\n      devices: result.devices,\n      //   pings: result.pings.map(\n      //     (ping: Ping): Ping => ({\n      //       __typename: ping.__typename,\n      //       id: ping.id,\n      //     }),\n      //   ),\n      activityCount: result.pings.length,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nGqlAuthGuard \n\nGqlAuthGuard \n\nGqlAuthGuard  -->\n\nAuthModule->GqlAuthGuard \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGqlAuthGuard\n\nGqlAuthGuard\n\nAuthModule -->\n\nGqlAuthGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GqlAuthGuard\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GqlAuthGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt/jwt.strategy';\nimport * as Joi from 'joi';\nimport { PrismaModule } from '@app/prisma';\nimport { AuthService } from './service/auth.service';\nimport { GqlAuthGuard } from './guard/gql.guard';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: './libs/auth/.env',\n      validationSchema: Joi.object({\n        AUTH0_DOMAIN: Joi.string().required(),\n        AUTH0_AUDIENCE: Joi.string().required(),\n      }),\n      isGlobal: true,\n      expandVariables: true,\n    }),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    PrismaModule.register({ logQueries: false }),\n  ],\n  providers: [JwtStrategy, AuthService, GqlAuthGuard],\n\n  exports: [PassportModule, GqlAuthGuard],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/service/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo)\n                    \n                \n                        \n                            \n                                Defined in libs/auth/src/service/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/service/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository, PrismaService } from '@app/prisma';\nimport { Injectable } from '@nestjs/common';\nimport { AuthEntity } from '@app/auth/entity/auth.entity';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository('user')\n    private readonly userRepo: PrismaService['user'],\n  ) {}\n\n  /*\n  ? Get user details by email\n  */\n  async findUser(email: string): Promise {\n    const result = await this.userRepo.findUnique({\n      where: { email: email },\n    });\n\n    return AuthEntity.ToEntityFromPrisma(result);\n\n    // return {\n    //   id: result.id,\n    //   createdAt: new ObjectId(result.id).getTimestamp(),\n    //   name: {\n    //     firstName: result.name.firstName,\n    //     middleName: result.name.middleName,\n    //     lastName: result.name.lastName,\n    //   },\n    //   email: result.email,\n    //   username: result.username,\n    //   picture: result.picture,\n    //   picks: result.picks,\n    //   activityCount: result.pings.length,\n    //   devices: result.devices,\n    // };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseError.html":{"url":"interfaces/BaseError.html","title":"interface - BaseError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BroadcastController.html":{"url":"controllers/BroadcastController.html","title":"controller - BroadcastController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BroadcastController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/broadcast-service/src/broadcast.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleBroadcastPing\n                            \n                            \n                                    \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleBroadcastPing\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleBroadcastPing(data: string, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('broadcastPing')\n                \n            \n\n                    \n                        \n                            Defined in apps/broadcast-service/src/broadcast.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test')\n                \n            \n\n                    \n                        \n                            Defined in apps/broadcast-service/src/broadcast.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { BroadcastService } from './broadcast.service';\nimport { PingNode, RMQService } from '@app/common';\nimport { Ctx, EventPattern, Payload, RmqContext } from '@nestjs/microservices';\n\n@Controller()\nexport class BroadcastController {\n  constructor(\n    private readonly broadcastService: BroadcastService,\n    private readonly rmqService: RMQService,\n  ) {}\n\n  @EventPattern('broadcastPing')\n  async handleBroadcastPing(\n    @Payload() data: string,\n    @Ctx() context: RmqContext,\n  ) {\n    const { id, users } = JSON.parse(data) as { id: string; users: string[] };\n\n    this.broadcastService.broadcastPing(id, users);\n    this.rmqService.ack(context);\n  }\n\n  @Get('test')\n  async test() {\n    const test = await this.broadcastService.test();\n\n    return test;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BroadcastModule.html":{"url":"modules/BroadcastModule.html","title":"module - BroadcastModule","body":"\n                   \n\n\n\n\n    Modules\n    BroadcastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BroadcastModule\n\n\n\ncluster_BroadcastModule_imports\n\n\n\ncluster_BroadcastModule_providers\n\n\n\n\nFirebaseModule\n\nFirebaseModule\n\n\n\nBroadcastModule\n\nBroadcastModule\n\nBroadcastModule -->\n\nFirebaseModule->BroadcastModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nBroadcastModule -->\n\nHealthModule->BroadcastModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nBroadcastModule -->\n\nRmqModule->BroadcastModule\n\n\n\nBroadcastModule -->\n\nRmqModule->BroadcastModule\n\n\n\n\n\nBroadcastService\n\nBroadcastService\n\nBroadcastModule -->\n\nBroadcastService->BroadcastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/broadcast-service/src/broadcast.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BroadcastService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BroadcastController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FirebaseModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RmqModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BroadcastController } from './broadcast.controller';\nimport { BroadcastService } from './broadcast.service';\nimport { ConfigModule } from '@nestjs/config';\nimport * as Joi from 'joi';\nimport { NEO4J_SERVICE, RmqModule, USER_SERVICE } from '@app/common';\nimport { HealthModule } from './health/health.module';\nimport { FirebaseModule } from '@app/firebase';\nimport * as path from 'path';\n\n@Module({\n  imports: [\n    FirebaseModule.forRoot({\n      googleApplicationCredential: path.join(\n        __dirname,\n        '..',\n        '..',\n        '..',\n        'firebase.json',\n      ),\n    }),\n    HealthModule,\n    RmqModule,\n    RmqModule.register({ name: [NEO4J_SERVICE, USER_SERVICE] }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/broadcast-service/.env',\n      validationSchema: Joi.object({\n        // NEO4J_SCHEME: Joi.string().required(),\n        // NEO4J_HOST: Joi.string().required(),\n        // NEO4J_PORT: Joi.number().required(),\n        // NEO4J_USERNAME: Joi.string().required(),\n        // NEO4J_PASSWORD: Joi.string().required(),\n        // NEO4J_DATABASE: Joi.string(),\n        RABBITMQ_URI: Joi.string().required(),\n        RABBITMQ_BROADCAST_QUEUE: Joi.string().required(),\n      }),\n    }),\n    // Neo4jCommonModule.forRootAsync({\n    //   imports: [ConfigModule],\n    //   inject: [ConfigService],\n    //   useFactory: (configService: ConfigService): Neo4jConfig => ({\n    //     scheme: configService.get('NEO4J_SCHEME'),\n    //     host: configService.get('NEO4J_HOST'),\n    //     port: configService.get('NEO4J_PORT'),\n    //     username: configService.get('NEO4J_USERNAME'),\n    //     password: configService.get('NEO4J_PASSWORD'),\n    //     database: configService.get('NEO4J_DATABASE'),\n    //   }),\n    // }),\n  ],\n\n  controllers: [BroadcastController],\n  providers: [BroadcastService],\n})\nexport class BroadcastModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BroadcastService.html":{"url":"injectables/BroadcastService.html","title":"injectable - BroadcastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BroadcastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/broadcast-service/src/broadcast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                broadcastPing\n                            \n                            \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseAdmin, neo4jClient: ClientProxy, userClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/broadcast-service/src/broadcast.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseAdmin\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        neo4jClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        broadcastPing\n                        \n                    \n                \n            \n            \n                \n                        \n                    broadcastPing(id: string, users: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/broadcast-service/src/broadcast.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                users\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/broadcast-service/src/broadcast.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BROADCAST_SERVICE,\n  NEO4J_SERVICE,\n  PingNode,\n  USER_SERVICE,\n} from '@app/common';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { FirebaseAdmin, InjectFirebaseAdmin } from '@app/firebase';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { lastValueFrom } from 'rxjs';\n\n@Injectable()\nexport class BroadcastService {\n  constructor(\n    @InjectFirebaseAdmin() private readonly firebase: FirebaseAdmin,\n    @Inject(NEO4J_SERVICE) private neo4jClient: ClientProxy,\n    @Inject(USER_SERVICE) private userClient: ClientProxy,\n  ) {}\n\n  /* \n  * Ping\n  get all users \n  within a certain radius of a location \n  with similar picks\n  */\n\n  async broadcastPing(id: string, users: string[]) {\n    // get user device token from the user service and broadcast to them\n    const tokens = await lastValueFrom(\n      this.userClient.send('userDevices', users),\n    );\n\n    console.log('Broadcast Service:: tokens', tokens);\n\n    // if (tokens.length === 0) {\n    //   return;\n    // }\n\n    // send ping to users\n    this.firebase.messaging\n      .sendEachForMulticast({\n        tokens: [\n          'eK_p6UbuSka3aXetlqcPWg:APA91bGtfrwnvoUhSGBcbjbsCNIjhk9pkfqQgErJNfh7JnN2jqG-yKYof3I2hlKE9LUXzR2XSKYaxy2p_GkjUrI7kPuXzYVlrhbzU_okVCh5oBYpzCMaTdzu5gcnlLGPB3YtnpriHnrQ',\n        ],\n        data: {\n          type: 'ping',\n          id,\n        },\n      })\n      .then((response) => {\n        console.log('Successfully sent message:', response);\n      })\n      .catch((error) => {\n        console.log('Error sending message:', error);\n      });\n  }\n\n  async test() {\n    // let _data;\n    // this.neo4jClient.send('test', 'test').subscribe((data) => {\n    //   console.log('data', data);\n    //   _data = data;\n    // });\n\n    // return _data;\n\n    const message = await this.firebase.messaging.send({\n      token:\n        'eK_p6UbuSka3aXetlqcPWg:APA91bGtfrwnvoUhSGBcbjbsCNIjhk9pkfqQgErJNfh7JnN2jqG-yKYof3I2hlKE9LUXzR2XSKYaxy2p_GkjUrI7kPuXzYVlrhbzU_okVCh5oBYpzCMaTdzu5gcnlLGPB3YtnpriHnrQ',\n      data: {\n        type: 'ping',\n        id: '6576257c3120201ecfdf6482',\n      },\n    });\n    return message;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChannelController.html":{"url":"controllers/ChannelController.html","title":"controller - ChannelController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChannelController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/forum/src/channel/channel.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createChannel(channel: Channel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('createChannel')\n                \n            \n\n                    \n                        \n                            Defined in apps/forum/src/channel/channel.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { ChannelService } from './channel.service';\nimport { Ctx, EventPattern, Payload, RmqContext } from '@nestjs/microservices';\nimport { Channel } from 'apps/forum/src/common/dto/message.dto';\nimport { RMQService } from '@app/common';\n\n@Controller()\nexport class ChannelController {\n  constructor(\n    private readonly channelService: ChannelService, // private readonly rmqService: RMQService,\n  ) {}\n\n  // @EventPattern('createChannel')\n  // async createChannel(@Payload() channel: Channel, @Ctx() context: RmqContext) {\n  //   return await this.channelService.createChannel(channel);\n  // }\n\n  @Post('createChannel')\n  async createChannel(@Body() channel: Channel) {\n    const result = await this.channelService.createChannel(channel);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChannelGateway.html":{"url":"classes/ChannelGateway.html","title":"class - ChannelGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChannelGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/forum/src/channel/channel.gatway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                connectionClients\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterInit\n                            \n                            \n                                handleConnection\n                            \n                            \n                                    \n                                handleMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in apps/forum/src/channel/channel.gatway.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        connectionClients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/forum/src/channel/channel.gatway.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ChannelGateway.name)\n                    \n                \n                    \n                        \n                                Defined in apps/forum/src/channel/channel.gatway.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/forum/src/channel/channel.gatway.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterInit\n                        \n                    \n                \n            \n            \n                \nafterInit(server: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/forum/src/channel/channel.gatway.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: Socket, ...args: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/forum/src/channel/channel.gatway.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleMessage(message: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('message')\n                \n            \n\n                    \n                        \n                            Defined in apps/forum/src/channel/channel.gatway.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayInit,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Server, Socket } from 'socket.io';\nimport { CreateMessage } from '../common/dto/message.dto';\nimport { MessageService } from '../message/message.service';\nimport { Logger } from '@nestjs/common';\n\n@WebSocketGateway({\n  // namespace: 'chat',\n  transports: ['websocket'],\n  cors: { origin: '*' },\n})\nexport class ChannelGateway implements OnGatewayConnection, OnGatewayInit {\n  private readonly connectionClients: Map = new Map();\n  private readonly logger = new Logger(ChannelGateway.name);\n\n  constructor(private readonly messageService: MessageService) {}\n  afterInit(server: any) {\n    this.logger.log('Gateway Init');\n  }\n  handleConnection(client: Socket, ...args: any[]) {\n    const clientID = client.id;\n    this.connectionClients.set(clientID, client);\n\n    this.logger.log(`Client connected: ${clientID}`);\n\n    this.logger.log(client.connected);\n\n    // client.on('disconnect', () => {\n    //   this.connectionClients.delete(clientID);\n    // });\n  }\n\n  @WebSocketServer()\n  server: Server;\n\n  @SubscribeMessage('message')\n  handleMessage(@MessageBody() message: string) {\n    console.log('message', message);\n\n    this.server.emit('message', `Recieved message:: ${message}`);\n    // this.messageService.addMessage(message);\n    // this.messageService\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChannelModule.html":{"url":"modules/ChannelModule.html","title":"module - ChannelModule","body":"\n                   \n\n\n\n\n    Modules\n    ChannelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChannelModule\n\n\n\ncluster_ChannelModule_providers\n\n\n\ncluster_ChannelModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nChannelModule\n\nChannelModule\n\nChannelModule -->\n\nAuthModule->ChannelModule\n\n\n\n\n\nMessageModule\n\nMessageModule\n\nChannelModule -->\n\nMessageModule->ChannelModule\n\n\n\n\n\nChannelService\n\nChannelService\n\nChannelModule -->\n\nChannelService->ChannelModule\n\n\n\n\n\nForumRepository\n\nForumRepository\n\nChannelModule -->\n\nForumRepository->ChannelModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nChannelModule -->\n\nMessageService->ChannelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/forum/src/channel/channel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChannelService\n                        \n                        \n                            ForumRepository\n                        \n                        \n                            MessageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChannelController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MessageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChannelController } from './channel.controller';\nimport { ChannelService } from './channel.service';\nimport { ChannelResolver } from './channel.resolver';\nimport { ChannelGateway } from './channel.gatway';\nimport { ForumRepository } from '../service/forum.service';\nimport { MessageModule } from '../message/message.module';\nimport { MessageService } from '../message/message.service';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\nimport { ApolloServerPluginLandingPageLocalDefault } from '@apollo/server/plugin/landingPage/default';\nimport { ObjectIDResolver } from 'graphql-scalars';\nimport { AuthModule } from '@app/auth';\n\n@Module({\n  imports: [\n    MessageModule,\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      typePaths: ['./**/channel.gql'],\n      playground: false,\n      plugins: [ApolloServerPluginLandingPageLocalDefault()],\n      resolvers: {\n        ObjectID: ObjectIDResolver,\n      },\n    }),\n    AuthModule,\n  ],\n  controllers: [ChannelController],\n  providers: [\n    ChannelResolver,\n    ChannelService,\n    ChannelGateway,\n    MessageService,\n    ForumRepository,\n  ],\n})\nexport class ChannelModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChannelResolver.html":{"url":"classes/ChannelResolver.html","title":"class - ChannelResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChannelResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/forum/src/channel/channel.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getForum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getForum\n                        \n                    \n                \n            \n            \n                \n                        \n                    getForum()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('forums')\n                \n            \n\n                    \n                        \n                            Defined in apps/forum/src/channel/channel.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver('forum')\nexport class ChannelResolver {\n  @Query('forums')\n  async getForum() {\n    return 'Hello World';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChannelService.html":{"url":"injectables/ChannelService.html","title":"injectable - ChannelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChannelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/forum/src/channel/channel.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                channelRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ForumRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/forum/src/channel/channel.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ForumRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createChannel(channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/forum/src/channel/channel.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        channelRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.repository.channel\n                    \n                \n                    \n                        \n                                Defined in apps/forum/src/channel/channel.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Channel } from 'apps/forum/src/common/dto/message.dto';\nimport { ForumRepository } from '../service/forum.service';\n\n@Injectable()\nexport class ChannelService {\n  constructor(private readonly repository: ForumRepository) {}\n\n  private readonly channelRepository = this.repository.channel;\n\n  async createChannel(channel: Channel) {\n    try {\n      const result = await this.channelRepository.create({\n        data: {\n          activityID: channel.activityID,\n          admin: channel.admin,\n          title: channel.title,\n          participants: channel.participants,\n        },\n      });\n      return { success: true, message: 'Channel created', result };\n    } catch (error) {\n      console.log(error);\n      return { success: false, message: 'Channel was not created' };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreatePingInput.html":{"url":"interfaces/CreatePingInput.html","title":"interface - CreatePingInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreatePingInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            picks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            radius\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            userID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         Latitude\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Latitude\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         Longitude\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Longitude\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picks:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        radius:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userID:         ObjectID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ObjectID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                device\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                latitude\n                            \n                            \n                                    Optional\n                                longitude\n                            \n                            \n                                    Optional\n                                middleName\n                            \n                            \n                                picks\n                            \n                            \n                                    Optional\n                                picture\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmailAddress\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        middleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeletionServiceController.html":{"url":"controllers/DeletionServiceController.html","title":"controller - DeletionServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeletionServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/deletion-service/src/deletion-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/deletion-service/src/deletion-service.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DeletionServiceService } from './deletion-service.service';\n\n@Controller()\nexport class DeletionServiceController {\n  constructor(private readonly deletionServiceService: DeletionServiceService) {}\n\n  @Get()\n  getHello(): string {\n    return this.deletionServiceService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeletionServiceModule.html":{"url":"modules/DeletionServiceModule.html","title":"module - DeletionServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    DeletionServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeletionServiceModule\n\n\n\ncluster_DeletionServiceModule_providers\n\n\n\ncluster_DeletionServiceModule_imports\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nDeletionServiceModule\n\nDeletionServiceModule\n\nDeletionServiceModule -->\n\nRmqModule->DeletionServiceModule\n\n\n\n\n\nDeletionServiceService\n\nDeletionServiceService\n\nDeletionServiceModule -->\n\nDeletionServiceService->DeletionServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/deletion-service/src/deletion-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeletionServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeletionServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeletionServiceController } from './deletion-service.controller';\nimport { DeletionServiceService } from './deletion-service.service';\nimport { RmqModule } from '@app/common';\n\n@Module({\n  imports: [RmqModule],\n  controllers: [DeletionServiceController],\n  providers: [DeletionServiceService],\n})\nexport class DeletionServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeletionServiceService.html":{"url":"injectables/DeletionServiceService.html","title":"injectable - DeletionServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeletionServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/deletion-service/src/deletion-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/deletion-service/src/deletion-service.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DeletionServiceService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileFlowEngineController.html":{"url":"controllers/FileFlowEngineController.html","title":"controller - FileFlowEngineController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileFlowEngineController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/file-flow-engine/src/file-flow-engine.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/v1/\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAWSPresignedUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAWSPresignedUrlDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getAWSPresignedUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAWSPresignedUrl(type: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('upload')@Header('Content-Type', 'application/json')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/file-flow-engine/src/file-flow-engine.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getAWSPresignedUrlDownload\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAWSPresignedUrlDownload(Key: string, type: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download/')@Header('Content-Type', 'application/json')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/file-flow-engine/src/file-flow-engine.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Header,\n  Logger,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { FileFlowEngineService } from './file-flow-engine.service';\nimport { AWSService } from './aws-s3/aws.service';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('api/v1/')\nexport class FileFlowEngineController {\n  constructor(\n    private readonly fileFlowEngineService: FileFlowEngineService,\n    private readonly awsService: AWSService,\n  ) {}\n\n  private readonly logger = new Logger(FileFlowEngineController.name);\n\n  @Get('upload')\n  @Header('Content-Type', 'application/json')\n  @UseGuards(AuthGuard())\n  async getAWSPresignedUrl(@Query('type') type: string) {\n    console.log(type);\n    const { Key, signedUrl } = await this.awsService.createPresignedUrl(type);\n\n    return {\n      signedUrl,\n      Key,\n    };\n  }\n\n  @Get('download/')\n  @Header('Content-Type', 'application/json')\n  @UseGuards(AuthGuard())\n  async getAWSPresignedUrlDownload(\n    @Query('Key') Key: string,\n    @Query('type') type: string,\n  ) {\n    const uri = await this.awsService.createPresignedUrlDownload(Key, type);\n\n    // console.log(type);\n\n    return {\n      uri,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileFlowEngineModule.html":{"url":"modules/FileFlowEngineModule.html","title":"module - FileFlowEngineModule","body":"\n                   \n\n\n\n\n    Modules\n    FileFlowEngineModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileFlowEngineModule\n\n\n\ncluster_FileFlowEngineModule_imports\n\n\n\ncluster_FileFlowEngineModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nFileFlowEngineModule\n\nFileFlowEngineModule\n\nFileFlowEngineModule -->\n\nAuthModule->FileFlowEngineModule\n\n\n\n\n\nAWSService\n\nAWSService\n\nFileFlowEngineModule -->\n\nAWSService->FileFlowEngineModule\n\n\n\n\n\nFileFlowEngineService\n\nFileFlowEngineService\n\nFileFlowEngineModule -->\n\nFileFlowEngineService->FileFlowEngineModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/file-flow-engine/src/file-flow-engine.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AWSService\n                        \n                        \n                            FileFlowEngineService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FileFlowEngineController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileFlowEngineController } from './file-flow-engine.controller';\nimport { FileFlowEngineService } from './file-flow-engine.service';\nimport { ConfigModule } from '@nestjs/config';\nimport * as Joi from 'joi';\nimport { AWSService } from './aws-s3/aws.service';\nimport { AuthModule } from '@app/auth';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: './apps/file-flow-engine/.env',\n      isGlobal: true,\n      validationSchema: Joi.object({\n        AWS_ACCESS_KEY: Joi.string().required(),\n        AWS_SECRET_ACCESS_KEY: Joi.string().required(),\n        AWS_REGION: Joi.string().required(),\n        AWS_BUCKET: Joi.string().required(),\n      }),\n    }),\n    AuthModule,\n  ],\n  controllers: [FileFlowEngineController],\n  providers: [FileFlowEngineService, AWSService],\n})\nexport class FileFlowEngineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileFlowEngineService.html":{"url":"injectables/FileFlowEngineService.html","title":"injectable - FileFlowEngineService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileFlowEngineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/file-flow-engine/src/file-flow-engine.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-flow-engine/src/file-flow-engine.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class FileFlowEngineService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseAdmin.html":{"url":"interfaces/FirebaseAdmin.html","title":"interface - FirebaseAdmin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseAdmin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/firebase/src/firebase.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth\n                                        \n                                \n                                \n                                        \n                                            messaging\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth:     Firebase.auth.Auth\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Firebase.auth.Auth\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messaging\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messaging:     Firebase.messaging.Messaging\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Firebase.messaging.Messaging\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common';\nimport * as Firebase from 'firebase-admin';\n\nexport type FirebaseModuleOptions = {\n  googleApplicationCredential: string | Firebase.ServiceAccount;\n} & Omit;\n\nexport interface FirebaseModuleOptionsFactory {\n  createFirebaseModuleOptions():\n    | Promise\n    | FirebaseModuleOptions;\n}\n\nexport type FirebaseModuleAsyncOptions = {\n  useClass?: Type;\n  useFactory?: (\n    ...args: any[]\n  ) => Promise | FirebaseModuleOptions;\n  inject?: any[];\n  useExisting?: Type;\n} & Pick;\n\nexport interface FirebaseAdmin {\n  auth: Firebase.auth.Auth;\n  messaging: Firebase.messaging.Messaging;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseConstants.html":{"url":"classes/FirebaseConstants.html","title":"class - FirebaseConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/firebase/src/firebase.constants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                FIREBASE_MODULE\n                            \n                            \n                                    Static\n                                    Readonly\n                                FIREBASE_TOKEN\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        FIREBASE_MODULE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FirebaseModule'\n                    \n                \n                    \n                        \n                                Defined in libs/firebase/src/firebase.constants.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        FIREBASE_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FIREBASE_TOKEN'\n                    \n                \n                    \n                        \n                                Defined in libs/firebase/src/firebase.constants.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FirebaseConstants {\n  public static readonly FIREBASE_MODULE = 'FirebaseModule';\n  public static readonly FIREBASE_TOKEN = 'FIREBASE_TOKEN';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FirebaseModule.html":{"url":"modules/FirebaseModule.html","title":"module - FirebaseModule","body":"\n                   \n\n\n\n\n    Modules\n    FirebaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/firebase/src/firebase.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        createAsyncOptionsProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAsyncOptionsProvider(options: FirebaseModuleAsyncOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/firebase/src/firebase.module.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FirebaseModuleAsyncOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        createAsyncProviders\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAsyncProviders(options: FirebaseModuleAsyncOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/firebase/src/firebase.module.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FirebaseModuleAsyncOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: FirebaseModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/firebase/src/firebase.module.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FirebaseModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: FirebaseModuleAsyncOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/firebase/src/firebase.module.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FirebaseModuleAsyncOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  ClassProvider,\n  DynamicModule,\n  Global,\n  Module,\n  Provider,\n} from '@nestjs/common';\nimport {\n  FirebaseAdmin,\n  FirebaseModuleAsyncOptions,\n  FirebaseModuleOptions,\n  FirebaseModuleOptionsFactory,\n} from './firebase.interface';\nimport { FirebaseConstants } from './firebase.constants';\nimport { getFirebaseAdmin } from './util';\n\n@Global()\n@Module({})\nexport class FirebaseModule {\n  public static forRoot(options: FirebaseModuleOptions): DynamicModule {\n    const provider: Provider = {\n      provide: FirebaseConstants.FIREBASE_TOKEN,\n      useValue: getFirebaseAdmin(options),\n    };\n\n    return {\n      exports: [provider],\n      module: FirebaseModule,\n      providers: [provider],\n    };\n  }\n\n  public static forRootAsync(\n    options: FirebaseModuleAsyncOptions,\n  ): DynamicModule {\n    const firebaseProvider: Provider = {\n      inject: [FirebaseConstants.FIREBASE_MODULE],\n      provide: FirebaseConstants.FIREBASE_TOKEN,\n      useFactory: (options: FirebaseModuleOptions) => getFirebaseAdmin(options),\n    };\n\n    const asyncProviders = this.createAsyncProviders(options);\n\n    return {\n      module: FirebaseModule,\n      imports: [...(options.imports || [])],\n      providers: [...asyncProviders, firebaseProvider],\n      exports: [firebaseProvider],\n    };\n  }\n\n  private static createAsyncProviders(\n    options: FirebaseModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useFactory || options.useExisting) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n        inject: options.inject,\n      } as ClassProvider,\n    ];\n  }\n\n  private static createAsyncOptionsProvider(\n    options: FirebaseModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        inject: options.inject || [],\n        provide: FirebaseConstants.FIREBASE_MODULE,\n        useFactory: options.useFactory,\n      };\n    }\n    return {\n      provide: FirebaseConstants.FIREBASE_MODULE,\n      useFactory: async (\n        optionsFactory: FirebaseModuleOptionsFactory,\n      ): Promise =>\n        await optionsFactory.createFirebaseModuleOptions(),\n      inject: options.useClass ? [options.useClass] : [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseModuleOptionsFactory.html":{"url":"interfaces/FirebaseModuleOptionsFactory.html","title":"interface - FirebaseModuleOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseModuleOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/firebase/src/firebase.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createFirebaseModuleOptions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createFirebaseModuleOptions\n                        \n                    \n                \n            \n            \n                \ncreateFirebaseModuleOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/firebase/src/firebase.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise | FirebaseModuleOptions\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common';\nimport * as Firebase from 'firebase-admin';\n\nexport type FirebaseModuleOptions = {\n  googleApplicationCredential: string | Firebase.ServiceAccount;\n} & Omit;\n\nexport interface FirebaseModuleOptionsFactory {\n  createFirebaseModuleOptions():\n    | Promise\n    | FirebaseModuleOptions;\n}\n\nexport type FirebaseModuleAsyncOptions = {\n  useClass?: Type;\n  useFactory?: (\n    ...args: any[]\n  ) => Promise | FirebaseModuleOptions;\n  inject?: any[];\n  useExisting?: Type;\n} & Pick;\n\nexport interface FirebaseAdmin {\n  auth: Firebase.auth.Auth;\n  messaging: Firebase.messaging.Messaging;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenError.html":{"url":"classes/ForbiddenError.html","title":"class - ForbiddenError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Forum.html":{"url":"interfaces/Forum.html","title":"interface - Forum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Forum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/forum/src/channel/graphql/channel.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activityID\n                                        \n                                \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            participants\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activityID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activityID:         ObjectID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ObjectID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         ObjectID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ObjectID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participants\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        participants:     User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLObjectID } from 'graphql-scalars'\n\nexport interface Forum {\n    id: ObjectID;\n    activityID: ObjectID;\n    title: string;\n    admin: User;\n    participants: User[];\n}\n\nexport interface IQuery {\n    forum(id: ObjectID): Nullable | Promise>;\n    forums(): Forum[] | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n}\n\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ForumRepository.html":{"url":"injectables/ForumRepository.html","title":"injectable - ForumRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ForumRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/forum/src/service/forum.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ForumClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/forum/src/service/forum.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient as ForumClient } from '@prisma/client-forum';\n\n@Injectable()\nexport class ForumRepository extends ForumClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetParticipantsResponse.html":{"url":"interfaces/GetParticipantsResponse.html","title":"interface - GetParticipantsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetParticipantsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlAuthGuard.html":{"url":"injectables/GqlAuthGuard.html","title":"injectable - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/guard/gql.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard()\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                getRequest\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/guard/gql.guard.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/guard/gql.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any, context: ExecutionContext, status?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/guard/gql.guard.ts:17\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TUser\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GqlAuthGuard.name)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/guard/gql.guard.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, Logger } from '@nestjs/common';\n\nimport { AuthGuard } from '@nestjs/passport';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { UnauthorizedError } from 'apps/users/src/user/graphql/user.schema';\n\n@Injectable()\nexport class GqlAuthGuard extends AuthGuard() {\n  private logger = new Logger(GqlAuthGuard.name);\n\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n\n    return ctx.getContext().req;\n  }\n\n  handleRequest(\n    err: any,\n    user: any,\n    info: any,\n    context: ExecutionContext,\n    status?: any,\n  ): TUser {\n    if (err || !user) {\n      // this.logger.error('Unauthorized');\n      return new UnauthorizedError() as TUser;\n    }\n\n    return user as TUser;\n  }\n\n  async canActivate(context: ExecutionContext): Promise {\n    const result = (await super.canActivate(context)) as boolean;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/broadcast-service/src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in apps/broadcast-service/src/health/health.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Transport } from '@nestjs/microservices';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  HttpHealthIndicator,\n  MicroserviceHealthIndicator,\n} from '@nestjs/terminus';\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private readonly health: HealthCheckService,\n    private readonly http: HttpHealthIndicator,\n    private readonly microservice: MicroserviceHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      async () =>\n        this.microservice.pingCheck('RabbitMQ Broadcast', {\n          transport: Transport.RMQ,\n          options: {\n            urls: [this.configService.get('RABBITMQ_URI')],\n            queue: this.configService.get('RABBITMQ_BROADCAST_QUEUE'),\n            queueOptions: {\n              durable: true,\n            },\n          },\n        }),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController-1.html":{"url":"controllers/HealthController-1.html","title":"controller - HealthController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/neo4j/src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in apps/neo4j/src/health/health.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Transport } from '@nestjs/microservices';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  HttpHealthIndicator,\n  MicroserviceHealthIndicator,\n} from '@nestjs/terminus';\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private readonly health: HealthCheckService,\n    private readonly http: HttpHealthIndicator,\n    private readonly microservice: MicroserviceHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      async () =>\n        this.microservice.pingCheck('RabbitMQ Neo4j', {\n          transport: Transport.RMQ,\n          options: {\n            urls: [this.configService.get('RABBITMQ_URI')],\n            queue: this.configService.get('RABBITMQ_NEO4J_QUEUE'),\n            queueOptions: {\n              durable: true,\n            },\n          },\n        }),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController-2.html":{"url":"controllers/HealthController-2.html","title":"controller - HealthController-2","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/health/health.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { PrismaService } from '@app/prisma';\nimport { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  PrismaHealthIndicator,\n} from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private readonly health: HealthCheckService,\n    private readonly primsaHealth: PrismaHealthIndicator,\n    private prisma: PrismaService,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      // () => this.primsaHealth.pingCheck('prisma', this.prisma),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController-3.html":{"url":"controllers/HealthController-3.html","title":"controller - HealthController-3","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/health/health.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  HttpHealthIndicator,\n  PrismaHealthIndicator,\n} from '@nestjs/terminus';\nimport { PingRepository } from '../service/prisma.service';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private readonly health: HealthCheckService,\n    private readonly http: HttpHealthIndicator,\n    private readonly primsaHealth: PrismaHealthIndicator,\n    private prisma: PingRepository,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      // () => this.primsaHealth.pingCheck('prisma', this.prisma),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/broadcast-service/src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n  providers: [],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IMutation.html":{"url":"classes/IMutation.html","title":"class - IMutation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IMutation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createUser\n                            \n                            \n                                    Abstract\n                                removeUser\n                            \n                            \n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(payload: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/graphql/user.schema.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     User | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUser(id: ObjectID)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/graphql/user.schema.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            ObjectID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Nullable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(payload: UpdateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/graphql/user.schema.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     User | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IQuery.html":{"url":"classes/IQuery.html","title":"class - IQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                isUsernameAvailable\n                            \n                            \n                                    Abstract\n                                user\n                            \n                            \n                                    Abstract\n                                userById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        isUsernameAvailable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isUsernameAvailable(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/graphql/user.schema.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        user\n                        \n                    \n                \n            \n            \n                \n                        \n                    user()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/graphql/user.schema.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UserPayload | Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        userById\n                        \n                    \n                \n            \n            \n                \n                        \n                    userById(id: ObjectID)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/graphql/user.schema.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            ObjectID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     User | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IQuery-1.html":{"url":"interfaces/IQuery-1.html","title":"interface - IQuery-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAllPing\n                                    \n                                \n                                \n                                    \n                                        getParticipants\n                                    \n                                \n                                \n                                    \n                                        getPing\n                                    \n                                \n                                \n                                    \n                                        getPingsWithinRadius\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllPing\n                        \n                    \n                \n            \n            \n                \ngetAllPing(first: number, after?: Nullable, userID?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/graphql/ping.schema.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                        Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                        Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PingConnection | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParticipants\n                        \n                    \n                \n            \n            \n                \ngetParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/graphql/ping.schema.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pingID\n                                            \n                                                            ObjectID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                first\n                                            \n                                                        Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                        Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GetParticipantsResponse | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPing\n                        \n                    \n                \n            \n            \n                \ngetPing(id: ObjectID)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/graphql/ping.schema.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            ObjectID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Ping | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPingsWithinRadius\n                        \n                    \n                \n            \n            \n                \ngetPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/graphql/ping.schema.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UPingsWithinRadiusInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                        Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                picks\n                                            \n                                                        Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Nullable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalServerError.html":{"url":"classes/InternalServerError.html","title":"class - InternalServerError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalServerError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidInputError.html":{"url":"classes/InvalidInputError.html","title":"class - InvalidInputError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidInputError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JsonObject.html":{"url":"interfaces/JsonObject.html","title":"interface - JsonObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JsonObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/jwt/jwt-payload.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        JsonValue | [] | JsonObject\n\n                    \n                \n                        \n                            \n                                Defined in libs/auth/src/jwt/jwt-payload.interface.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export type JsonValue = string | number | boolean;\n\nexport interface JsonObject {\n  [key: string]: JsonValue | JsonValue[] | JsonObject;\n}\n\nexport interface JwtPayload extends JsonObject {\n  /** Issuer (who created and signed this token) */\n  iss?: string;\n  /** Subject (whom the token refers to) */\n  sub?: string;\n  /** Audience (who or what the token is intended for) */\n  aud?: string[];\n  /** Issued at (seconds since Unix epoch) */\n  iat?: number;\n  /** Expiration time (seconds since Unix epoch) */\n  exp?: number;\n  /** Authorization party (the party to which this token was issued) */\n  azp?: string;\n  /** Token scope (what the token has access to) */\n  scope?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/jwt/jwt-payload.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            JsonObject\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            aud\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            azp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iat\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iss\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scope\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Audience (who or what the token is intended for)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        azp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        azp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Authorization party (the party to which this token was issued)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Expiration time (seconds since Unix epoch)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Issued at (seconds since Unix epoch)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Issuer (who created and signed this token)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Token scope (what the token has access to)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subject (whom the token refers to)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type JsonValue = string | number | boolean;\n\nexport interface JsonObject {\n  [key: string]: JsonValue | JsonValue[] | JsonObject;\n}\n\nexport interface JwtPayload extends JsonObject {\n  /** Issuer (who created and signed this token) */\n  iss?: string;\n  /** Subject (whom the token refers to) */\n  sub?: string;\n  /** Audience (who or what the token is intended for) */\n  aud?: string[];\n  /** Issued at (seconds since Unix epoch) */\n  iat?: number;\n  /** Expiration time (seconds since Unix epoch) */\n  exp?: number;\n  /** Authorization party (the party to which this token was issued) */\n  azp?: string;\n  /** Token scope (what the token has access to) */\n  scope?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/jwt/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(BaseStrategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in libs/auth/src/jwt/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/jwt/jwt.strategy.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy as BaseStrategy, ExtractJwt } from 'passport-jwt';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\n\nimport { AuthEntity } from '@app/auth/entity/auth.entity';\nimport { AuthService } from '@app/auth/service/auth.service';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtPayload } from './jwt-payload.interface';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { passportJwtSecret } from 'jwks-rsa';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(BaseStrategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly authService: AuthService,\n  ) {\n    super({\n      secretOrKeyProvider: passportJwtSecret({\n        cache: true,\n        rateLimit: true,\n        jwksRequestsPerMinute: 5,\n        jwksUri: `https://${configService.get(\n          'AUTH0_DOMAIN',\n        )}/.well-known/jwks.json`,\n        handleSigningKeyError(err, cb) {\n          if (err instanceof Error) {\n            console.log('err', err);\n            return cb(err);\n          }\n          return cb(new UnauthorizedException('Signing key error'));\n        },\n      }),\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      // audience: configService.get('AUTH0_AUDIENCE'),\n      issuer: `https://${configService.get('AUTH0_DOMAIN')}/`,\n      algorithms: ['RS256'],\n    });\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    // get user info from payload\n\n    const minimumScope = ['openid', 'profile', 'email'];\n\n    if (\n      payload?.scope\n        ?.split(' ')\n        .filter((scope) => minimumScope.indexOf(scope) > -1).length !== 3\n    ) {\n      throw new UnauthorizedException(\n        'JWT does not possess the required scope (`openid profile email`).',\n      );\n    }\n\n    const email = payload['api.volunteerx/email'];\n\n    // ! if error, use an api based on the auth0 user email to get the user info, eg: http://localhost:3510/users?email=${email}\n\n    const user = await this.authService.findUser(email.toString());\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaInput.html":{"url":"interfaces/MediaInput.html","title":"interface - MediaInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessageModule.html":{"url":"modules/MessageModule.html","title":"module - MessageModule","body":"\n                   \n\n\n\n\n    Modules\n    MessageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessageModule\n\n\n\ncluster_MessageModule_exports\n\n\n\ncluster_MessageModule_providers\n\n\n\n\nMessageService \n\nMessageService \n\n\n\nMessageModule\n\nMessageModule\n\nMessageService  -->\n\nMessageModule->MessageService \n\n\n\n\n\nForumRepository\n\nForumRepository\n\nMessageModule -->\n\nForumRepository->MessageModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nMessageModule -->\n\nMessageService->MessageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/forum/src/message/message.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ForumRepository\n                        \n                        \n                            MessageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MessageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MessageResolver } from './message.resolver';\nimport { MessageService } from './message.service';\nimport { ForumRepository } from '../service/forum.service';\n\n@Module({\n  exports: [MessageService],\n  providers: [MessageResolver, MessageService, ForumRepository],\n})\nexport class MessageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageResolver.html":{"url":"classes/MessageResolver.html","title":"class - MessageResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/forum/src/message/message.resolver.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MessageResolver {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/forum/src/message/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMessage\n                            \n                            \n                                    Async\n                                deleteMessage\n                            \n                            \n                                    Async\n                                getMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(forumRepository: ForumRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/forum/src/message/message.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forumRepository\n                                                  \n                                                        \n                                                                        ForumRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMessage(message: CreateMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/forum/src/message/message.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            CreateMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMessage(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/forum/src/message/message.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMessages(channelID: string, limit: number, cursor: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/forum/src/message/message.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cursor\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMessage } from 'apps/forum/src/common/dto/message.dto';\nimport { ForumRepository } from 'apps/forum/src/service/forum.service';\n\n@Injectable()\nexport class MessageService {\n  constructor(private readonly forumRepository: ForumRepository) {}\n\n  async getMessages(channelID: string, limit: number, cursor: string) {\n    try {\n      const messages = await this.forumRepository.message.findMany({\n        where: { channelID },\n        take: limit,\n        cursor: { id: cursor },\n        orderBy: { id: 'asc' },\n      });\n\n      return messages;\n    } catch (error) {\n      console.log(error);\n\n      return { success: false, message: 'Messages were not found' };\n    }\n  }\n\n  async addMessage(message: CreateMessage) {\n    try {\n      await this.forumRepository.message.create({\n        data: {\n          userID: message.userID,\n          channelID: message.channelID,\n          text: message.text,\n        },\n      });\n\n      return { success: true, message: 'Message added' };\n    } catch (error) {\n      console.log(error);\n\n      return { success: false, message: 'Message was not added' };\n    }\n  }\n\n  async deleteMessage(id: string) {\n    try {\n      await this.forumRepository.message.delete({ where: { id } });\n\n      return { success: true, message: 'Message deleted' };\n    } catch (error) {\n      console.log(error);\n\n      return { success: false, message: 'Message was not deleted' };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Name.html":{"url":"classes/Name.html","title":"class - Name","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                middleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        middleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Neo4jCommonModule.html":{"url":"modules/Neo4jCommonModule.html","title":"module - Neo4jCommonModule","body":"\n                   \n\n\n\n\n    Modules\n    Neo4jCommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/neo4j-common/src/neo4j.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(config: Neo4jConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.module.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            Neo4jConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(configProvider)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.module.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                configProvider\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from '@nestjs/common';\nimport { Neo4jCommonService } from './neo4j.service';\nimport { Neo4jConfig } from './neo4j-config.interface';\nimport { NEO4J_CONFIG, NEO4J_DRIVER } from './neo4j.constants';\nimport { createDriver } from './neo4j.util';\nimport { Neo4jTransactionInterceptor } from './neo4j-transaction.interceptor';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({})\nexport class Neo4jCommonModule {\n  static forRoot(config: Neo4jConfig): DynamicModule {\n    return {\n      module: Neo4jCommonModule,\n      global: true,\n      providers: [\n        {\n          provide: NEO4J_CONFIG,\n          useValue: config,\n        },\n        {\n          provide: NEO4J_DRIVER,\n          inject: [NEO4J_CONFIG],\n          useFactory: async (config: Neo4jConfig) => createDriver(config),\n        },\n        Neo4jCommonService,\n      ],\n      exports: [Neo4jCommonService, Neo4jTransactionInterceptor],\n    };\n  }\n\n  static forRootAsync(configProvider): DynamicModule {\n    return {\n      module: Neo4jCommonModule,\n      global: true,\n      imports: [ConfigModule],\n      providers: [\n        {\n          provide: NEO4J_CONFIG,\n          ...configProvider,\n        } as Provider,\n        {\n          provide: NEO4J_DRIVER,\n          inject: [NEO4J_CONFIG],\n          useFactory: async (config: Neo4jConfig) => createDriver(config),\n        },\n        Neo4jCommonService,\n      ],\n      exports: [Neo4jCommonService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Neo4jCommonService.html":{"url":"injectables/Neo4jCommonService.html","title":"injectable - Neo4jCommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Neo4jCommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/neo4j-common/src/neo4j.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginTransaction\n                            \n                            \n                                getConfig\n                            \n                            \n                                getDriver\n                            \n                            \n                                getReadSession\n                            \n                            \n                                getWriteSession\n                            \n                            \n                                int\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                read\n                            \n                            \n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Neo4jConfig, driver: Driver)\n                    \n                \n                        \n                            \n                                Defined in libs/neo4j-common/src/neo4j.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Neo4jConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        driver\n                                                  \n                                                        \n                                                                    Driver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginTransaction\n                        \n                    \n                \n            \n            \n                \nbeginTransaction(database?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                database\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Transaction\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Neo4jConfig\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDriver\n                        \n                    \n                \n            \n            \n                \ngetDriver()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Driver\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReadSession\n                        \n                    \n                \n            \n            \n                \ngetReadSession(database: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                database\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWriteSession\n                        \n                    \n                \n            \n            \n                \ngetWriteSession(database: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                database\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        int\n                        \n                    \n                \n            \n            \n                \nint(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(cypher: string, params?: Record, databaseOrTransaction?: string | Transaction)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cypher\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                databaseOrTransaction\n                                            \n                                                        string | Transaction\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Result\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        write\n                        \n                    \n                \n            \n            \n                \nwrite(cypher: string, params?: Record, databaseOrTransaction?: string | Transaction)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cypher\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                databaseOrTransaction\n                                            \n                                                        string | Transaction\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Result\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnApplicationShutdown } from '@nestjs/common';\nimport neo4j, { Driver, Result, Transaction, int } from 'neo4j-driver';\nimport { Neo4jConfig } from './neo4j-config.interface';\nimport { NEO4J_CONFIG, NEO4J_DRIVER } from './neo4j.constants';\n\n@Injectable()\nexport class Neo4jCommonService implements OnApplicationShutdown {\n  constructor(\n    @Inject(NEO4J_CONFIG) private readonly config: Neo4jConfig,\n    @Inject(NEO4J_DRIVER) private readonly driver: Driver,\n  ) {}\n\n  getDriver(): Driver {\n    return this.driver;\n  }\n\n  getConfig(): Neo4jConfig {\n    return this.config;\n  }\n\n  int(value: number) {\n    return int(value);\n  }\n\n  beginTransaction(database?: string): Transaction {\n    const session = this.getWriteSession(database);\n    return session.beginTransaction();\n  }\n\n  getReadSession(database: string) {\n    return this.driver.session({\n      database: database || this.config.database,\n      defaultAccessMode: neo4j.session.READ,\n    });\n  }\n\n  getWriteSession(database: string) {\n    return this.driver.session({\n      database: database || this.config.database,\n      defaultAccessMode: neo4j.session.WRITE,\n    });\n  }\n\n  read(\n    cypher: string,\n    params?: Record,\n    databaseOrTransaction?: string | Transaction,\n  ): Result {\n    if (databaseOrTransaction instanceof Transaction) {\n      return (databaseOrTransaction).run(cypher, params);\n    }\n    const session = this.getReadSession(databaseOrTransaction);\n    return session.run(cypher, params);\n  }\n\n  write(\n    cypher: string,\n    params?: Record,\n    databaseOrTransaction?: string | Transaction,\n  ): Result {\n    if (databaseOrTransaction instanceof Transaction) {\n      return (databaseOrTransaction).run(cypher, params);\n    }\n\n    const session = this.getWriteSession(databaseOrTransaction);\n    return session.run(cypher, params);\n  }\n\n  onApplicationShutdown() {\n    return this.driver.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Neo4jController.html":{"url":"controllers/Neo4jController.html","title":"controller - Neo4jController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Neo4jController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/neo4j/src/neo4j.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getPingsWithinRadius\n                            \n                            \n                                    \n                                    Async\n                                handleParticipantAdded\n                            \n                            \n                                    \n                                    Async\n                                handleParticipantRemoved\n                            \n                            \n                                    \n                                    Async\n                                handlePingCreated\n                            \n                            \n                                    \n                                    Async\n                                handleUserCreated\n                            \n                            \n                                    \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPingsWithinRadius\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPingsWithinRadius(_payload: any, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(Pattern.getPingsWithinRadius)\n                \n            \n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleParticipantAdded\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleParticipantAdded(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(Pattern.participantAdded)\n                \n            \n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleParticipantRemoved\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleParticipantRemoved(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(Pattern.participantRemoved)\n                \n            \n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handlePingCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePingCreated(ping: string, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(Pattern.pingCreated)\n                \n            \n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ping\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleUserCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUserCreated(user: string, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(Pattern.userCreated)\n                \n            \n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test(payload: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('test')\n                \n            \n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { Neo4jService } from './neo4j.service';\nimport {\n  Ctx,\n  EventPattern,\n  MessagePattern,\n  Payload,\n  RmqContext,\n} from '@nestjs/microservices';\nimport { Pattern } from '@app/common';\nimport { PingNode, RMQService, UserNode } from '@app/common';\n\n@Controller()\nexport class Neo4jController {\n  constructor(\n    private readonly neo4jService: Neo4jService,\n    private readonly rmqService: RMQService,\n  ) {}\n\n  @EventPattern(Pattern.userCreated)\n  async handleUserCreated(@Payload() user: string, @Ctx() context: RmqContext) {\n    await this.neo4jService.createUser(JSON.parse(user) as UserNode);\n    this.rmqService.ack(context);\n  }\n\n  @EventPattern(Pattern.pingCreated)\n  async handlePingCreated(@Payload() ping: string, @Ctx() context: RmqContext) {\n    await this.neo4jService.createPing(JSON.parse(ping) as PingNode);\n    this.rmqService.ack(context);\n  }\n\n  @MessagePattern(Pattern.getPingsWithinRadius)\n  async getPingsWithinRadius(\n    @Payload() _payload: any,\n    @Ctx() context: RmqContext,\n  ) {\n    const { payload, first, after, picks, userID } = _payload as {\n      payload: any;\n      first: number;\n      after: string;\n      picks: string[];\n      userID: string;\n    };\n\n    const result = await this.neo4jService.getPingsWithinRadius(\n      payload,\n      first,\n      after,\n      picks,\n      userID,\n    );\n\n    this.rmqService.ack(context);\n\n    return result;\n  }\n\n  @EventPattern(Pattern.participantAdded)\n  async handleParticipantAdded(\n    @Payload() payload: { userID: string; id: string },\n  ) {\n    const { userID, id } = payload;\n\n    await this.neo4jService.addParticipant(userID, id);\n  }\n\n  @EventPattern(Pattern.participantRemoved)\n  async handleParticipantRemoved(\n    @Payload() payload: { userID: string; id: string },\n  ) {\n    const { userID, id } = payload;\n\n    await this.neo4jService.removeParticipant(userID, id);\n  }\n\n  @MessagePattern('test')\n  async test(@Payload() payload: string) {\n    return `Test successful:: ${payload}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Neo4jErrorFilter.html":{"url":"classes/Neo4jErrorFilter.html","title":"class - Neo4jErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Neo4jErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/neo4j-common/src/neo4j-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Neo4jError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j-error.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Neo4jError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Neo4jError } from 'neo4j-driver';\nimport { Observable, throwError } from 'rxjs';\n\n@Catch(Neo4jError)\nexport class Neo4jErrorFilter implements ExceptionFilter {\n  catch(exception: Neo4jError, host: ArgumentsHost): Observable {\n    // const ctx = host.switchToRpc();\n\n    let message: string[] = undefined;\n\n    // Neo.ClientError.Schema.ConstraintValidationFailed\n    // Node(54776) already exists with label `User` and property `email` = 'duplicate@email.com'\n    if (exception.message.includes('already exists with')) {\n      const [label, property] = exception.message.match(/`([a-z0-9]+)`/gi);\n      message = [`${property.replace(/`/g, '')} already taken`];\n    }\n    // Neo.ClientError.Schema.ConstraintValidationFailed\n    // Node(54778) with label `Test` must have the property `mustExist`\n    else if (exception.message.includes('must have the property')) {\n      const [label, property] = exception.message.match(/`([a-z0-9]+)`/gi);\n      message = [`${property.replace(/`/g, '')} should not be empty`];\n    }\n\n    return throwError(() => message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Neo4jModule.html":{"url":"modules/Neo4jModule.html","title":"module - Neo4jModule","body":"\n                   \n\n\n\n\n    Modules\n    Neo4jModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Neo4jModule\n\n\n\ncluster_Neo4jModule_providers\n\n\n\ncluster_Neo4jModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nNeo4jModule\n\nNeo4jModule\n\nNeo4jModule -->\n\nHealthModule->Neo4jModule\n\n\n\n\n\nNeo4jCommonModule\n\nNeo4jCommonModule\n\nNeo4jModule -->\n\nNeo4jCommonModule->Neo4jModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nNeo4jModule -->\n\nRmqModule->Neo4jModule\n\n\n\nNeo4jModule -->\n\nRmqModule->Neo4jModule\n\n\n\n\n\nNeo4jService\n\nNeo4jService\n\nNeo4jModule -->\n\nNeo4jService->Neo4jModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/neo4j/src/neo4j.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Neo4jService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            Neo4jController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            Neo4jCommonModule\n                        \n                        \n                            RmqModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Neo4jController } from './neo4j.controller';\nimport { Neo4jService } from './neo4j.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport * as Joi from 'joi';\nimport { Neo4jConfig, Neo4jScheme } from '@app/neo4j/neo4j-config.interface';\nimport { Neo4jCommonModule } from '@app/neo4j';\nimport { BROADCAST_SERVICE, RmqModule } from '@app/common';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    HealthModule,\n    RmqModule,\n    RmqModule.register({ name: [BROADCAST_SERVICE] }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: './apps/neo4j/.env',\n      validationSchema: Joi.object({\n        NEO4J_SCHEME: Joi.string().required(),\n        NEO4J_HOST: Joi.string().required(),\n        NEO4J_PORT: Joi.number().required(),\n        NEO4J_USERNAME: Joi.string().required(),\n        NEO4J_PASSWORD: Joi.string().required(),\n        NEO4J_DATABASE: Joi.string(),\n        RABBITMQ_URI: Joi.string().required(),\n        RABBITMQ_NEO4J_QUEUE: Joi.string().required(),\n      }),\n    }),\n    Neo4jCommonModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService): Neo4jConfig => ({\n        scheme: configService.get('NEO4J_SCHEME'),\n        host: configService.get('NEO4J_HOST'),\n        port: configService.get('NEO4J_PORT'),\n        username: configService.get('NEO4J_USERNAME'),\n        password: configService.get('NEO4J_PASSWORD'),\n        database: configService.get('NEO4J_DATABASE'),\n      }),\n    }),\n  ],\n  controllers: [Neo4jController],\n  providers: [Neo4jService],\n})\nexport class Neo4jModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Neo4jService.html":{"url":"injectables/Neo4jService.html","title":"injectable - Neo4jService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Neo4jService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/neo4j/src/neo4j.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addParticipant\n                            \n                            \n                                    Async\n                                createPing\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getPingsWithinRadius\n                            \n                            \n                                    Async\n                                getUsersWithinRadius\n                            \n                            \n                                    Async\n                                removeParticipant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(neo4jCommon: Neo4jCommonService, broadcastClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/neo4j/src/neo4j.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        neo4jCommon\n                                                  \n                                                        \n                                                                        Neo4jCommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broadcastClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addParticipant\n                        \n                    \n                \n            \n            \n                \n                        \n                    addParticipant(userID: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPing\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPing(_ping: PingNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _ping\n                                            \n                                                            PingNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(user: UserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPingsWithinRadius\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPingsWithinRadius(payload: any, first: number, after: string, picks: string[], userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                after\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                picks\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsersWithinRadius\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersWithinRadius(ping: any, radius: number, userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ping\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                radius\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeParticipant\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeParticipant(userID: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/neo4j/src/neo4j.service.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(Neo4jService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/neo4j/src/neo4j.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BROADCAST_SERVICE, PingNode, UserNode } from '@app/common';\nimport { Neo4jCommonService } from '@app/neo4j';\nimport { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@Injectable()\nexport class Neo4jService {\n  constructor(\n    private readonly neo4jCommon: Neo4jCommonService,\n    @Inject(BROADCAST_SERVICE) private broadcastClient: ClientProxy,\n  ) {}\n\n  private readonly logger = new Logger(Neo4jService.name);\n\n  // Add a new user to the database\n  async createUser(user: UserNode) {\n    const cypher = `\n      CREATE (u:User {id: $id, picks: $picks, latitude: $latitude, longitude: $longitude})\n      RETURN u\n    `;\n\n    const result = await this.neo4jCommon.write(cypher, {\n      id: user.id,\n      picks: user.picks,\n      latitude: user.latitude,\n      longitude: user.longitude,\n    });\n\n    // console.log(result.records[0].get('u').properties);\n\n    if (result.records.length === 0) {\n      throw new Error('User not created');\n    }\n  }\n\n  // hydrate ping\n  async createPing(_ping: PingNode) {\n    const cypher = `\n      MERGE (u:User {id: $userID})\n      MERGE (p:Ping {id: $id, latitude: $latitude, longitude: $longitude, picks: $picks})\n      MERGE (u)-[:CREATED]->(p)\n      RETURN p\n    `;\n\n    const { id, userID, picks, point, radius } = _ping;\n\n    try {\n      const ping = await this.neo4jCommon.write(cypher, {\n        id: id,\n        userID: userID,\n        latitude: point[0],\n        longitude: point[1],\n        picks: picks,\n      });\n\n      this.getUsersWithinRadius(\n        ping.records[0].get('p').properties,\n        radius,\n        userID,\n      );\n    } catch (error) {\n      console.log(error);\n      throw new Error('Ping not created');\n    }\n  }\n\n  // get all users within a certain radius of a location with similar picks\n  async getUsersWithinRadius(ping: any, radius: number, userID: string) {\n    /**\n     * The Cypher query used to match users based on certain criteria.\n     * @remarks\n     * The query filters users based on their distance from a given latitude and longitude,\n     * as well as their picks matching a provided array of picks.\n     * @param userID - The ID of the user to exclude from the results.\n     * @param latitude - The latitude used to calculate the distance.\n     * @param longitude - The longitude used to calculate the distance.\n     * @param picks - An array of picks to match against the user's picks.\n     * @returns The matched users.\n     */\n    const cypher = `\n    MATCH (u:User)\n    WHERE\n      u.id <> $userID\n      AND\n      point.distance(\n        point({\n          latitude: u.latitude,\n          longitude: u.longitude\n        }),\n        point({\n          latitude: $latitude,\n          longitude: $longitude\n        })\n      )  record.get('u').properties)\n      .map((user) => user.id);\n\n    this.broadcastClient.emit(\n      'broadcastPing',\n      JSON.stringify({\n        id: ping.id,\n        users,\n      }),\n    );\n\n    return users;\n  }\n\n  async getPingsWithinRadius(\n    payload: any,\n    first: number,\n    after: string,\n    picks: string[] = null,\n    userID: string,\n  ) {\n    const cypher = `\n    WITH point({latitude: $latitude, longitude: $longitude}) AS centerPoint\n    OPTIONAL MATCH (ping:Ping)\n      WHERE NOT (:User {id: $userID})-[:CREATED]->(ping)\n      AND \n      point.distance(\n        point(\n          {\n            latitude: ping.latitude,\n            longitude: ping.longitude\n          }), \n          centerPoint) (ping)\n        AND coalesce(ANY(picks IN ping.picks WHERE picks IN $picks), TRUE)\n    WITH ping, totalCount\n    LIMIT $first\n    WITH collect(ping.id) AS IDs, totalCount\n    RETURN CASE \n      WHEN totalCount=0 THEN {totalCount: 0, data: []}\n      ELSE {totalCount: totalCount, data: IDs}\n    END AS result\n    `;\n\n    console.log(userID);\n\n    const { latitude, longitude, radius } = payload;\n\n    const result = await this.neo4jCommon.read(cypher, {\n      latitude,\n      longitude,\n      radius,\n      cursor: after,\n      picks,\n      first: this.neo4jCommon.int(first),\n      userID,\n    });\n\n    const data: string[] = result.records[0].get('result').data;\n    const totalCount: number = result.records[0]\n      .get('result')\n      .totalCount.toNumber();\n\n    return {\n      totalCount,\n      data,\n    };\n  }\n\n  async addParticipant(userID: string, id: string) {\n    const cypher = `\n    MATCH (user:User {id: $userID}), (ping:Ping {id: $id})\n    MERGE (user)-[:PARTICIPATED {since: $time}]->(ping)\n    RETURN ping\n    `;\n\n    const result = await this.neo4jCommon.write(cypher, {\n      userID,\n      id,\n      time: new Date().toISOString(),\n    });\n\n    if (result.records.length === 0) {\n      throw new Error('Participant not added');\n    }\n\n    this.logger.log(\n      'participant added',\n      result.records[0].get('ping').properties,\n    );\n  }\n\n  async removeParticipant(userID: string, id: string) {\n    const cypher = `\n    MATCH (user:User {id: $userID})-[r:PARTICIPATED]->(ping:Ping {id: $id})\n    DELETE r\n    RETURN ping\n    `;\n\n    const result = await this.neo4jCommon.write(cypher, {\n      userID,\n      id,\n    });\n\n    if (result.records.length === 0) {\n      throw new Error('Participant not removed');\n    }\n\n    this.logger.log(\n      'participant removed',\n      result.records[0].get('ping').properties,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Neo4jTransactionInterceptor.html":{"url":"injectables/Neo4jTransactionInterceptor.html","title":"injectable - Neo4jTransactionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Neo4jTransactionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/neo4j-common/src/neo4j-transaction.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(neo4jService: Neo4jCommonService)\n                    \n                \n                        \n                            \n                                Defined in libs/neo4j-common/src/neo4j-transaction.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        neo4jService\n                                                  \n                                                        \n                                                                        Neo4jCommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j-transaction.interceptor.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Transaction } from 'neo4j-driver';\nimport { Observable, catchError, tap } from 'rxjs';\nimport { Neo4jCommonService } from './neo4j.service';\n\n@Injectable()\nexport class Neo4jTransactionInterceptor implements NestInterceptor {\n  constructor(private readonly neo4jService: Neo4jCommonService) {}\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const transaction: Transaction = this.neo4jService.beginTransaction();\n\n    context.switchToRpc().getContext().transaction = transaction;\n\n    return next.handle().pipe(\n      tap(() => transaction.commit()),\n      catchError((err) => {\n        transaction.rollback();\n        throw err;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Neo4jTypeInterceptor.html":{"url":"injectables/Neo4jTypeInterceptor.html","title":"injectable - Neo4jTypeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Neo4jTypeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/neo4j-common/src/neo4j-type.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(showLabelsOrType: boolean, showIdentity: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/neo4j-common/src/neo4j-type.interceptor.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        showLabelsOrType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        showIdentity\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/neo4j-common/src/neo4j-type.interceptor.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport {\n  Result,\n  isDate,\n  isDateTime,\n  isDuration,\n  isInt,\n  isLocalDateTime,\n  isLocalTime,\n  isNode,\n  isPoint,\n  isRelationship,\n  isTime,\n} from 'neo4j-driver';\nimport { Observable, map } from 'rxjs';\n\nconst toNative = (\n  value: any,\n  showLabelsOrType?: boolean,\n  showIdentity?: boolean,\n) => {\n  if (value === null || value === undefined) return undefined;\n  else if (value instanceof Result || value.records) {\n    return value.records?.map((row) =>\n      Object.fromEntries(row.keys.map((key) => [key, toNative(row.get(key))])),\n    );\n  } else if (Array.isArray(value)) return value.map((v) => toNative(v));\n  else if (isNode(value))\n    return toNative({\n      _id: showIdentity ? toNative(value.identity) : null,\n      _labels: showLabelsOrType ? toNative(value.labels) : null,\n      ...toNative(value.properties),\n    });\n  else if (isRelationship(value))\n    return toNative({\n      _id: toNative(value.identity),\n      _type: showLabelsOrType ? toNative(value.type) : null,\n      ...toNative(value.properties),\n    });\n  else if (isInt(value)) return value.toNumber();\n  else if (\n    isDuration(value) ||\n    isLocalTime(value) ||\n    isTime(value) ||\n    isDate(value) ||\n    isDateTime(value) ||\n    isLocalDateTime(value)\n  ) {\n    return value.toString();\n  }\n  if (isPoint(value)) {\n    switch (value.srid.toNumber()) {\n      case 4326:\n        return { longitude: value.y, latitude: value.x }; // WGS 84 2D\n      case 4979:\n        return { longitude: value.y, latitude: value.x, height: value.z }; // WGS 84 3D\n      default:\n        toNative({ x: value.x, y: value.y, z: value.z }); // Cartesian\n    }\n  } else if (typeof value === 'object') {\n    return Object.fromEntries(\n      Object.keys(value).map((key) => [\n        key,\n        toNative(value[key], showLabelsOrType, showIdentity),\n      ]),\n    );\n  }\n  return value;\n};\n\n@Injectable()\nexport class Neo4jTypeInterceptor implements NestInterceptor {\n  constructor(\n    private readonly showLabelsOrType: boolean = false,\n    private readonly showIdentity: boolean = false,\n  ) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next\n      .handle()\n      .pipe(\n        map((data) => toNative(data, this.showLabelsOrType, this.showIdentity)),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundError.html":{"url":"classes/NotFoundError.html","title":"class - NotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageInfo.html":{"url":"interfaces/PageInfo.html","title":"interface - PageInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            endCursor\n                                        \n                                \n                                \n                                        \n                                            hasNextPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasPreviousPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startCursor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endCursor:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasNextPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasNextPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPreviousPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasPreviousPage:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startCursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startCursor:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadResolver.html":{"url":"classes/PayloadResolver.html","title":"class - PayloadResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/payload.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                __resolveType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PayloadResolver.name)\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/payload.resolver.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        __resolveType\n                        \n                    \n                \n            \n            \n                \n                        \n                    __resolveType(obj, context, info)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField()\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/payload.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"UnauthorizedError\" | \"User\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundError, UnauthorizedError } from './graphql/user.schema';\nimport { ResolveField, Resolver } from '@nestjs/graphql';\n\nimport { Logger } from '@nestjs/common';\n\n@Resolver('UserPayload')\nexport class PayloadResolver {\n  private logger = new Logger(PayloadResolver.name);\n\n  @ResolveField()\n  __resolveType(obj, context, info) {\n    // if (obj instanceof NotFoundError) {\n    //   return 'NotFoundError';\n    // }\n    switch (obj.constructor) {\n      case UnauthorizedError:\n        return 'UnauthorizedError';\n      default:\n        return 'User';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ping.html":{"url":"classes/Ping.html","title":"class - Ping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ObjectID\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:97\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PingConnection.html":{"url":"interfaces/PingConnection.html","title":"interface - PingConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PingConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            edges\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            pageInfo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         PingEdge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PingEdge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageInfo:         PageInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PingEdge.html":{"url":"interfaces/PingEdge.html","title":"interface - PingEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PingEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cursor\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         Ping\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ping\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PingModule.html":{"url":"modules/PingModule.html","title":"module - PingModule","body":"\n                   \n\n\n\n\n    Modules\n    PingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PingModule\n\n\n\ncluster_PingModule_imports\n\n\n\ncluster_PingModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPingModule\n\nPingModule\n\nPingModule -->\n\nAuthModule->PingModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nPingModule -->\n\nRmqModule->PingModule\n\n\n\n\n\nPingRepository\n\nPingRepository\n\nPingModule -->\n\nPingRepository->PingModule\n\n\n\n\n\nPingService\n\nPingService\n\nPingModule -->\n\nPingService->PingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ping/src/ping/ping.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PingRepository\n                        \n                        \n                            PingService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\nimport { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  DateTimeResolver,\n  LatitudeResolver,\n  LongitudeResolver,\n  ObjectIDResolver,\n  URLResolver,\n} from 'graphql-scalars';\nimport { ApolloServerPluginLandingPageLocalDefault } from '@apollo/server/plugin/landingPage/default';\n\nimport { PingService } from './ping.service';\nimport { PingResolver } from './ping.resolver';\nimport { PingRepository } from 'apps/ping/src/service/prisma.service';\nimport {\n  BROADCAST_SERVICE,\n  NEO4J_SERVICE,\n  RmqModule,\n  USER_SERVICE,\n} from '@app/common';\nimport { AuthModule } from '@app/auth';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      typePaths: ['./**/ping.gql'],\n      playground: false,\n      plugins: [ApolloServerPluginLandingPageLocalDefault()],\n      resolvers: {\n        ObjectID: ObjectIDResolver,\n        DateTime: DateTimeResolver,\n        URL: URLResolver,\n        Longitude: LongitudeResolver,\n        Latitude: LatitudeResolver,\n      },\n    }),\n    AuthModule,\n    RmqModule.register({\n      name: [BROADCAST_SERVICE, NEO4J_SERVICE, USER_SERVICE],\n    }),\n  ],\n  providers: [PingService, PingResolver, PingRepository],\n})\nexport class PingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PingRepository.html":{"url":"injectables/PingRepository.html","title":"injectable - PingRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PingRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/service/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PingClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/service/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient as PingClient } from '@prisma/client-ping';\n\n@Injectable()\nexport class PingRepository extends PingClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PingResolver.html":{"url":"classes/PingResolver.html","title":"class - PingResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PingResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/ping.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                addParticipant\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllPing\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getParticipants\n                            \n                            \n                                    \n                                    \n                                getPing\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getPingsWithinRadius\n                            \n                            \n                                    \n                                    \n                                    Async\n                                removeParticipant\n                            \n                            \n                                    \n                                    Async\n                                resolveReference\n                            \n                            \n                                    \n                                updateMedia\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pingService: PingService)\n                    \n                \n                        \n                            \n                                Defined in apps/ping/src/ping/ping.resolver.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pingService\n                                                  \n                                                        \n                                                                        PingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PingResolver.name)\n                    \n                \n                    \n                        \n                                Defined in apps/ping/src/ping/ping.resolver.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        addParticipant\n                        \n                    \n                \n            \n            \n                \n                        \n                    addParticipant(id: string, userID: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('addParticipant')@UseGuards(GqlAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: CreatePingInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('createPing')@UseGuards(GqlAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreatePingInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllPing\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllPing(user: User, first: number, after: string, userID?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('getAllPing')@UseGuards(GqlAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getParticipants\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParticipants(pingID: string, first: number, after: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('getParticipants')@UseGuards(GqlAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pingID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getPing\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPing(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('getPing')@UseGuards(GqlAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getPingsWithinRadius\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after: string, picks: string[] | undefined, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('getPingsWithinRadius')@UseGuards(GqlAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UPingsWithinRadiusInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                picks\n                                            \n                                                        string[] | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        removeParticipant\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeParticipant(id: string, userID: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('removeParticipant')@UseGuards(GqlAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        resolveReference\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveReference(reference: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveReference()\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reference\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMedia(id: string, payload: UPingInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('updatePing')\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UPingInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n            \n                \n                        \n                    user(ping: Ping)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField('user')\n                \n            \n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.resolver.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ping\n                                            \n                                                            Ping\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { __typename: string; id: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  ResolveReference,\n  Resolver,\n} from '@nestjs/graphql';\nimport { PingService } from './ping.service';\nimport {\n  CreatePingInput,\n  Ping,\n  UPingInput,\n  UPingsWithinRadiusInput,\n} from './graphql/ping.schema';\nimport { Logger, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '@app/auth';\nimport { User } from '@app/common/utils/entities';\nimport { decodeFromBase64, encodeToBase64 } from '@app/common/utils/helpers';\n\n@Resolver('Ping')\nexport class PingResolver {\n  constructor(private readonly pingService: PingService) {}\n  private readonly logger = new Logger(PingResolver.name);\n\n  @Mutation('createPing')\n  @UseGuards(GqlAuthGuard)\n  create(@Args('payload') payload: CreatePingInput) {\n    return this.pingService.createPing(payload);\n  }\n\n  @Mutation('updatePing')\n  updateMedia(@Args('id') id: string, @Args('payload') payload: UPingInput) {\n    return this.pingService.updatePing(id, payload);\n  }\n\n  @Query('getPing')\n  @UseGuards(GqlAuthGuard)\n  getPing(@Args('id') id: string, @CurrentUser() user: User) {\n    return this.pingService.getPing(id, user.id);\n  }\n\n  @Query('getAllPing')\n  @UseGuards(GqlAuthGuard)\n  async getAllPing(\n    @CurrentUser() user: User,\n    @Args('first') first: number,\n    @Args('after') after: string,\n    @Args('userID') userID?: string,\n  ) {\n    userID = userID ? userID : user.id;\n\n    const pings = await this.pingService.getAllPing(\n      userID,\n      first,\n      decodeFromBase64(after),\n    );\n\n    return {\n      edges: pings.map((ping) => ({\n        node: ping,\n        cursor: encodeToBase64(ping.id),\n      })),\n      owner: { __typename: 'User', id: userID },\n      pageInfo: {\n        hasNextPage: pings.length === first,\n        endCursor:\n          pings.length > 0 ? encodeToBase64(pings[pings.length - 1].id) : null,\n      },\n    };\n  }\n\n  @Query('getPingsWithinRadius')\n  @UseGuards(GqlAuthGuard)\n  async getPingsWithinRadius(\n    @Args('payload') payload: UPingsWithinRadiusInput,\n    @Args('first') first: number,\n    @Args('after') after: string,\n    @Args('picks') picks: string[] | undefined,\n    @CurrentUser() user,\n  ) {\n    this.logger.log('userID', user.id);\n\n    const { pings, totalCount } = await this.pingService.getPingsWithinRadius(\n      payload,\n      first,\n      decodeFromBase64(after),\n      picks,\n      user.id,\n    );\n\n    return {\n      totalCount,\n      edges: pings.map((ping) => ({\n        node: ping,\n        cursor: encodeToBase64(ping.id),\n      })),\n      owner: null,\n      pageInfo: {\n        hasNextPage: pings.length === first,\n        endCursor:\n          pings.length > 0 ? encodeToBase64(pings[pings.length - 1].id) : null,\n      },\n    };\n  }\n\n  @Query('getParticipants')\n  @UseGuards(GqlAuthGuard)\n  async getParticipants(\n    @Args('pingID') pingID: string,\n    @Args('first') first: number,\n    @Args('after') after: string,\n  ) {\n    const { members, totalCount } = await this.pingService.getParticipants(\n      pingID,\n      first,\n      after,\n    );\n\n    return {\n      totalCount,\n      members,\n    };\n  }\n\n  @Mutation('addParticipant')\n  @UseGuards(GqlAuthGuard)\n  async addParticipant(@Args('id') id: string, @Args('userID') userID: string) {\n    return await this.pingService.addParticipant(id, userID);\n  }\n\n  @Mutation('removeParticipant')\n  @UseGuards(GqlAuthGuard)\n  async removeParticipant(\n    @Args('id') id: string,\n    @Args('userID') userID: string,\n  ) {\n    return await this.pingService.removeParticipant(id, userID);\n  }\n\n  @ResolveReference()\n  async resolveReference(reference: {\n    __typename: string;\n    first: number;\n    after: string;\n    userID: string;\n  }) {\n    const { __typename, after, first, userID } = reference;\n\n    const pings = await this.pingService.getAllPing(\n      userID,\n      first,\n      decodeFromBase64(after),\n    );\n\n    return {\n      edges: pings.map((ping) => ({\n        node: ping,\n        cursor: encodeToBase64(ping.id),\n      })),\n      pageInfo: {\n        hasNextPage: pings.length === first,\n        endCursor:\n          pings.length > 0 ? encodeToBase64(pings[pings.length - 1].id) : null,\n      },\n    };\n  }\n\n  @ResolveField('user')\n  user(@Parent() ping: Ping) {\n    this.logger.log('ping', ping.userID);\n    return { __typename: 'User', id: ping.userID };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PingService.html":{"url":"injectables/PingService.html","title":"injectable - PingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/ping.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addParticipant\n                            \n                            \n                                    Async\n                                createPing\n                            \n                            \n                                    Async\n                                getAllPing\n                            \n                            \n                                    Async\n                                getParticipants\n                            \n                            \n                                    Async\n                                getPing\n                            \n                            \n                                    Async\n                                getPingsWithinRadius\n                            \n                            \n                                    Async\n                                removeParticipant\n                            \n                            \n                                    Async\n                                updatePing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PingRepository, neo4jClient: ClientProxy, broadcastClient: ClientProxy, userService: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/ping/src/ping/ping.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PingRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        neo4jClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broadcastClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addParticipant\n                        \n                    \n                \n            \n            \n                \n                        \n                    addParticipant(id: string, userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.service.ts:317\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPing\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPing(payload: CreatePingInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreatePingInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllPing\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllPing(userID: string, first: number, after: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getParticipants\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParticipants(pingID: string, first: number, after: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.service.ts:411\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pingID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPing\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPing(id: string, userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPingsWithinRadius\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after: string, picks: string[], userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.service.ts:252\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UPingsWithinRadiusInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                first\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                after\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                picks\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeParticipant\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeParticipant(id: string, userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.service.ts:358\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePing\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePing(id: string, payload: UPingInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/ping/src/ping/ping.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UPingInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PingService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/ping/src/ping/ping.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport {\n  CreatePingInput,\n  UPingInput,\n  UPingsWithinRadiusInput,\n} from './graphql/ping.schema';\nimport { PingRepository } from '../service/prisma.service';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { lastValueFrom } from 'rxjs';\nimport {\n  GraphQLLatitude,\n  GraphQLLongitude,\n  GraphQLObjectID,\n  GraphQLURL,\n} from 'graphql-scalars';\nimport {\n  BROADCAST_SERVICE,\n  NEO4J_SERVICE,\n  Pattern,\n  USER_SERVICE,\n} from '@app/common';\nimport { ObjectId } from 'bson';\nimport { Membership } from '@prisma/client';\n\n@Injectable()\nexport class PingService {\n  constructor(\n    private readonly repository: PingRepository,\n    @Inject(NEO4J_SERVICE) private readonly neo4jClient: ClientProxy,\n    @Inject(BROADCAST_SERVICE) private readonly broadcastClient: ClientProxy,\n    @Inject(USER_SERVICE) private readonly userService: ClientProxy,\n  ) {}\n\n  private readonly logger = new Logger(PingService.name);\n\n  /* \n  ? Create new Ping\n  * @param {CreatePingInput} input\n  * @returns {Ping}\n  */\n  async createPing(payload: CreatePingInput) {\n    const {\n      title,\n      description,\n      userID,\n      picks,\n      latitude,\n      longitude,\n      url,\n      radius,\n    } = payload;\n\n    const result = await this.repository.$transaction([\n      this.repository.ping.create({\n        data: {\n          title,\n          description,\n          picks,\n          url: url && url.toString(),\n          userID: GraphQLObjectID.parseValue(userID),\n          radius: radius ? radius : 200,\n          geometry: {\n            type: 'Point',\n            coordinates: [\n              GraphQLLatitude.parseValue(latitude),\n              GraphQLLongitude.parseValue(longitude),\n            ],\n          },\n        },\n      }),\n    ]);\n\n    try {\n      await lastValueFrom(\n        this.userService.emit(Pattern.addMembership, {\n          id: result[0].id,\n          userID: result[0].userID,\n          membership: Membership.ADMIN,\n        }),\n      );\n\n      await lastValueFrom(\n        this.neo4jClient.emit(\n          Pattern.pingCreated,\n          JSON.stringify({\n            id: result[0].id,\n            userID: result[0].userID,\n            picks: result[0].picks,\n            point: [\n              result[0].geometry.coordinates[0],\n              result[0].geometry.coordinates[1],\n            ],\n            radius: result[0].radius,\n          }),\n        ),\n      );\n    } catch (error) {\n      throw new Error(`Neo4j error || user service error, ${error}`);\n    }\n\n    const ping = {\n      id: result[0].id,\n      createdAt: new ObjectId(result[0].id).getTimestamp(),\n      title: result[0].title,\n      description: result[0].description,\n      picks: result[0].picks,\n      url: result[0].url,\n      radius: result[0].radius,\n      latitude: result[0].geometry.coordinates[0],\n      longitude: result[0].geometry.coordinates[1],\n      media: result[0].media,\n      userID: result[0].userID,\n      user: { __typename: 'User', id: result[0].userID },\n    };\n\n    return ping;\n  }\n\n  async updatePing(id: string, payload: UPingInput) {\n    const {\n      url,\n      title,\n      description,\n      picks,\n      radius,\n      media,\n      latitude,\n      longitude,\n    } = payload;\n\n    const result = await this.repository.ping.update({\n      where: {\n        id,\n      },\n      data: {\n        title,\n        description,\n        picks,\n        url: url && GraphQLURL.parseValue(url),\n        geometry: latitude &&\n          longitude && {\n            type: 'Point',\n            coordinates: [\n              GraphQLLatitude.parseValue(latitude),\n              GraphQLLongitude.parseValue(longitude),\n            ],\n          },\n        radius,\n        media,\n      },\n    });\n\n    // update activity\n\n    // try {\n    //   await lastValueFrom(\n    //     this.activityClient.emit(\n    //       'pingUpdated',\n    //       JSON.stringify(result),\n    //     ),\n    //   );\n    // } catch (error) {\n    //   throw new Error(`Activity service error: ${error.message}`);\n    // }\n\n    const createdAt = new ObjectId(result.id).getTimestamp();\n\n    const ping = {\n      id: result.id,\n      createdAt: createdAt,\n      title: result.title,\n      description: result.description,\n      picks: result.picks,\n      url: result.url && result.url,\n      radius: result.radius,\n      latitude: result.geometry.coordinates[0],\n      longitude: result.geometry.coordinates[1],\n      media: result.media,\n      userID: result.userID,\n      user: { __typename: 'User', id: result.userID },\n    };\n\n    return ping;\n  }\n\n  // Get Ping by ID\n  async getPing(id: string, userID: string) {\n    const result = await this.repository.ping.findUnique({\n      where: {\n        id,\n        userID,\n      },\n    });\n\n    const createdAt = new ObjectId(result.id).getTimestamp();\n\n    const ping = {\n      id: result.id,\n      createdAt: createdAt,\n      title: result.title,\n      description: result.description,\n      picks: result.picks,\n      url: result.url && result.url,\n      radius: result.radius,\n      latitude: result.geometry.coordinates[0],\n      longitude: result.geometry.coordinates[1],\n      media: result.media,\n      userID: result.userID,\n      user: { __typename: 'User', id: result.userID },\n    };\n\n    return ping;\n  }\n\n  // Get all Pings\n  async getAllPing(userID: string, first: number, after: string) {\n    const cursor = after ? { id: after } : undefined;\n\n    const result = await this.repository.ping.findMany({\n      where: {\n        userID,\n      },\n      take: first,\n      cursor,\n      orderBy: {\n        id: 'asc',\n      },\n    });\n\n    const pings = result.map((item) => ({\n      id: item.id,\n      createdAt: new ObjectId(item.id).getTimestamp(),\n      title: item.title,\n      description: item.description,\n      picks: item.picks,\n      url: item.url && item.url,\n      radius: item.radius,\n      latitude: item.geometry.coordinates[0],\n      longitude: item.geometry.coordinates[1],\n      media: item.media,\n      userID: item.userID,\n      // participants: item.participants.map((i) => ({\n      //   __typename: 'User',\n      //   id: i,\n      // })),\n    }));\n\n    return pings;\n  }\n\n  //Get all Pings within a certain radius\n  async getPingsWithinRadius(\n    payload: UPingsWithinRadiusInput,\n    first: number,\n    after: string,\n    picks: string[],\n    userID: string,\n  ) {\n    let result: { data: string[]; totalCount: number };\n\n    this.logger.log('userID', userID);\n\n    try {\n      result = await lastValueFrom(\n        this.neo4jClient.send('getPingsWithinRadius', {\n          payload,\n          first,\n          after,\n          picks,\n          userID,\n        }),\n      );\n    } catch (error) {\n      console.error('Neo4j Error::', error.message);\n    }\n    console.log('neo4j results', result);\n\n    if (result.totalCount === 0) {\n      return {\n        pings: [],\n        totalCount: 0,\n      };\n    }\n\n    const pings = await this.repository.ping.findMany({\n      where: {\n        id: {\n          in: result.data,\n        },\n      },\n      take: first,\n      cursor: after ? { id: after } : undefined,\n      orderBy: {\n        id: 'asc',\n      },\n    });\n\n    return {\n      pings: pings.map((ping) => ({\n        id: ping.id,\n        createdAt: new ObjectId(ping.id).getTimestamp(),\n        title: ping.title,\n        description: ping.description,\n        picks: ping.picks,\n        url: ping.url && ping.url,\n        radius: ping.radius,\n        latitude: ping.geometry.coordinates[0],\n        longitude: ping.geometry.coordinates[1],\n        media: ping.media,\n        userID: ping.userID,\n        user: { __typename: 'User', id: ping.userID },\n      })),\n      totalCount: result.totalCount,\n    };\n  }\n\n  async addParticipant(id: string, userID: string) {\n    try {\n      await this.repository.ping.update({\n        where: {\n          id,\n        },\n        data: {\n          participants: {\n            push: [userID],\n          },\n        },\n      });\n    } catch (error) {\n      console.error(error.message);\n      return false;\n    }\n    try {\n      await lastValueFrom(\n        this.userService.emit(Pattern.addMembership, {\n          id: id,\n          userID: userID,\n          membership: Membership.MEMBER,\n        }),\n      );\n\n      await lastValueFrom(\n        this.neo4jClient.emit(\n          Pattern.participantAdded,\n          {\n            id,\n            userID,\n          },\n        ),\n      );\n    } catch (error) {\n      console.error(`Neo4j error || user service error, ${error}`);\n      return false;\n    }\n    return true;\n  }\n\n  async removeParticipant(id: string, userID: string) {\n    try {\n      const exisitngDoc = await this.repository.ping.findUnique({\n        where: {\n          id,\n        },\n        select: {\n          participants: true,\n        },\n      });\n\n      const updatedParticipants = exisitngDoc.participants.filter(\n        (participant) => participant !== userID,\n      );\n\n      await this.repository.ping.update({\n        where: {\n          id,\n        },\n        data: {\n          participants: updatedParticipants,\n        },\n      });\n    } catch (error) {\n      throw new Error(error.message);\n    } finally {\n      try {\n        await lastValueFrom(\n          this.userService.emit(\n            Pattern.removeMembership,\n            {\n              id,\n              userID,\n            },\n          ),\n        );\n\n        await lastValueFrom(\n          this.neo4jClient.emit(\n            Pattern.participantRemoved,\n            {\n              id,\n              userID,\n            },\n          ),\n        );\n      } catch (error) {\n        throw new Error('Neo4j error || user service error');\n      }\n    }\n    return 'Participant removed';\n  }\n\n  async getParticipants(pingID: string, first: number, after: string) {\n    const cursor = after ? { id: after } : undefined;\n\n    const result = await this.repository.ping.findUnique({\n      where: {\n        id: pingID,\n      },\n      select: { participants: true },\n      // where: {\n      //   id: pingID,\n      // },\n      // select: { participants: true },\n      // take: first,\n      // cursor,\n      // orderBy: {\n      //   id: '',\n      // },\n    });\n\n    const members = result.participants.map((id) => ({\n      __typename: 'User',\n      id: id,\n    }));\n\n    return { members, totalCount: members.length };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/prisma/src/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(options: PrismaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/prisma/src/prisma.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            PrismaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        registerAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerAsync(options: PrismaModuleAsyncOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/prisma/src/prisma.module.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            PrismaModuleAsyncOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport {\n  PRIMSA_OPTIONS,\n  PrismaModuleAsyncOptions,\n  PrismaModuleOptions,\n  createAsyncProvider,\n  defaultPrismaOptions,\n} from './prisma.provider';\nimport { createRepositoryProviders } from './inject-repository.decorator';\n\n@Module({})\nexport class PrismaModule {\n  static register(options: PrismaModuleOptions): DynamicModule {\n    const repositoryProviders = createRepositoryProviders();\n\n    options = { ...defaultPrismaOptions, ...options };\n    return {\n      global: true,\n      module: PrismaModule,\n      providers: [\n        {\n          provide: PRIMSA_OPTIONS,\n          useValue: options,\n        },\n        PrismaService,\n        ...repositoryProviders,\n      ],\n      exports: [...repositoryProviders, PrismaService],\n    };\n  }\n\n  static registerAsync(options: PrismaModuleAsyncOptions): DynamicModule {\n    const repositoryProviders = createRepositoryProviders();\n    return {\n      global: true,\n      module: PrismaModule,\n      imports: options.imports || [],\n      providers: [\n        ...createAsyncProvider(options),\n        ...repositoryProviders,\n        PrismaService,\n      ],\n      exports: [...repositoryProviders, PrismaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrismaModuleAsyncOptions.html":{"url":"interfaces/PrismaModuleAsyncOptions.html","title":"interface - PrismaModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PrismaModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/prisma/src/prisma.provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            inject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useClass\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useExisting\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useClass:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useExisting:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Provider, Type } from '@nestjs/common';\n\nexport const PRIMSA_OPTIONS = Symbol('PRIMSA_OPTIONS');\n\nexport const defaultPrismaOptions = {\n  logQueries: false,\n};\n\nexport type PrismaModuleOptions = typeof defaultPrismaOptions;\n\nexport interface PrismaOptionsFactory {\n  createPrismaOptions(): Partial;\n}\n\nexport interface PrismaModuleAsyncOptions\n  extends Pick {\n  useClass?: Type;\n  useExisting?: Type;\n  useFactory?: (\n    ...args: any[]\n  ) => Promise> | Partial;\n  inject?: any[];\n}\n\nexport function createAsyncProvider(\n  options: PrismaModuleAsyncOptions,\n): Provider[] {\n  if (options.useFactory || options.useExisting)\n    return [createAsyncOptionsProvider(options)];\n  const useClass = options.useClass as Type;\n  return [createAsyncOptionsProvider(options), { provide: useClass, useClass }];\n}\n\nexport function createAsyncOptionsProvider(\n  options: PrismaModuleAsyncOptions,\n): Provider {\n  if (options.useFactory) {\n    return {\n      provide: PRIMSA_OPTIONS,\n      useFactory: async (...args: any[]) => {\n        return {\n          ...defaultPrismaOptions,\n          ...(options.useFactory && (await options.useFactory(...args))),\n        };\n      },\n      inject: options.inject || [],\n    };\n  }\n  return {\n    provide: PRIMSA_OPTIONS,\n    useFactory: (factory: PrismaOptionsFactory) =>\n      factory.createPrismaOptions(),\n    inject: [\n      (options.useClass || options.useExisting) as Type,\n    ],\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrismaOptionsFactory.html":{"url":"interfaces/PrismaOptionsFactory.html","title":"interface - PrismaOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PrismaOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/prisma/src/prisma.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createPrismaOptions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPrismaOptions\n                        \n                    \n                \n            \n            \n                \ncreatePrismaOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/prisma/src/prisma.provider.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Partial\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ModuleMetadata, Provider, Type } from '@nestjs/common';\n\nexport const PRIMSA_OPTIONS = Symbol('PRIMSA_OPTIONS');\n\nexport const defaultPrismaOptions = {\n  logQueries: false,\n};\n\nexport type PrismaModuleOptions = typeof defaultPrismaOptions;\n\nexport interface PrismaOptionsFactory {\n  createPrismaOptions(): Partial;\n}\n\nexport interface PrismaModuleAsyncOptions\n  extends Pick {\n  useClass?: Type;\n  useExisting?: Type;\n  useFactory?: (\n    ...args: any[]\n  ) => Promise> | Partial;\n  inject?: any[];\n}\n\nexport function createAsyncProvider(\n  options: PrismaModuleAsyncOptions,\n): Provider[] {\n  if (options.useFactory || options.useExisting)\n    return [createAsyncOptionsProvider(options)];\n  const useClass = options.useClass as Type;\n  return [createAsyncOptionsProvider(options), { provide: useClass, useClass }];\n}\n\nexport function createAsyncOptionsProvider(\n  options: PrismaModuleAsyncOptions,\n): Provider {\n  if (options.useFactory) {\n    return {\n      provide: PRIMSA_OPTIONS,\n      useFactory: async (...args: any[]) => {\n        return {\n          ...defaultPrismaOptions,\n          ...(options.useFactory && (await options.useFactory(...args))),\n        };\n      },\n      inject: options.inject || [],\n    };\n  }\n  return {\n    provide: PRIMSA_OPTIONS,\n    useFactory: (factory: PrismaOptionsFactory) =>\n      factory.createPrismaOptions(),\n    inject: [\n      (options.useClass || options.useExisting) as Type,\n    ],\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/prisma/src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: PrismaModuleOptions)\n                    \n                \n                        \n                            \n                                Defined in libs/prisma/src/prisma.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        PrismaModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/prisma/src/prisma.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger()\n                    \n                \n                    \n                        \n                                Defined in libs/prisma/src/prisma.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\nimport { PRIMSA_OPTIONS, PrismaModuleOptions } from './prisma.provider';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  private readonly logger = new Logger();\n\n  constructor(@Inject(PRIMSA_OPTIONS) options: PrismaModuleOptions) {\n    super({\n      errorFormat: 'minimal',\n      log: options.logQueries\n        ? [\n            {\n              emit: 'event',\n              level: 'query',\n            },\n          ]\n        : undefined,\n    });\n\n    // if (options.logQueries) {\n    //   this.$on(\n    //     'query' as any,\n    //     createPrismaQueryEventHandler({\n    //       logger: (query) => {\n    //         this.logger.verbose(query, 'PrismaClient');\n    //       },\n    //       format: false,\n    //       colorQuery: '\\u001B[96m',\n    //       colorParameter: '\\u001B[90m',\n    //     }),\n    //   );\n    // }\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  // async enableShutdownHooks(app: INestApplication) {\n  //   this.$on('beforeExit', async () => {\n  //     await app.close();\n  //   });\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RMQService.html":{"url":"injectables/RMQService.html","title":"injectable - RMQService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RMQService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rmq/rmq.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ack\n                            \n                            \n                                getOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/rmq/rmq.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ack\n                        \n                    \n                \n            \n            \n                \nack(context: RmqContext)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/rmq/rmq.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n            \n                \ngetOptions(queue: string, noAck)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/rmq/rmq.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                queue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                noAck\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     RmqOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { RmqContext, RmqOptions, Transport } from '@nestjs/microservices';\n\n@Injectable()\nexport class RMQService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getOptions(queue: string, noAck = false): RmqOptions {\n    return {\n      transport: Transport.RMQ,\n      options: {\n        urls: [this.configService.get('RABBITMQ_URI')],\n        queue: this.configService.get(`RABBITMQ_${queue}_QUEUE`),\n        noAck,\n        persistent: true,\n      },\n    };\n  }\n\n  ack(context: RmqContext) {\n    const channel = context.getChannelRef();\n    const originalMsg = context.getMessage();\n    channel.ack(originalMsg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RmqConfigService.html":{"url":"injectables/RmqConfigService.html","title":"injectable - RmqConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RmqConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rmq/rmq-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQueues\n                            \n                            \n                                getUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/rmq/rmq-config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getQueues\n                        \n                    \n                \n            \n            \n                \ngetQueues(name: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/rmq/rmq-config.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUri\n                        \n                    \n                \n            \n            \n                \ngetUri()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/rmq/rmq-config.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class RmqConfigService {\n  constructor(private configService: ConfigService) {}\n\n  getUri() {\n    return this.configService.get('RABBIT_MQ_URI');\n  }\n\n  getQueues(name: string[]) {\n    return name.map((queue) =>\n      this.configService.get(`RABBIT_MQ_${queue}_QUEUE`),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RmqModule.html":{"url":"modules/RmqModule.html","title":"module - RmqModule","body":"\n                   \n\n\n\n\n    Modules\n    RmqModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_providers\n\n\n\ncluster_RmqModule_exports\n\n\n\n\nRMQService \n\nRMQService \n\n\n\nRmqModule\n\nRmqModule\n\nRMQService  -->\n\nRmqModule->RMQService \n\n\n\n\n\nRMQService\n\nRMQService\n\nRmqModule -->\n\nRMQService->RmqModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/rmq/rmq.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RMQService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RMQService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(undefined: RmqModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/rmq/rmq.module.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RmqModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RMQService } from './rmq.service';\nimport {\n  ClientsModule,\n  ClientsModuleAsyncOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigService } from '@nestjs/config';\n\ninterface RmqModuleOptions {\n  name: string[];\n}\n\n@Module({\n  providers: [RMQService],\n  exports: [RMQService],\n})\nexport class RmqModule {\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    function getImports(name: string[]): ClientsModuleAsyncOptions {\n      return name.map((queue) => ({\n        name: queue,\n        useFactory: (configService: ConfigService) => ({\n          transport: Transport.RMQ,\n          options: {\n            urls: [configService.get('RABBITMQ_URI')],\n            queue: configService.get(`RABBITMQ_${queue}_QUEUE`),\n          },\n        }),\n        inject: [ConfigService],\n      }));\n    }\n\n    return {\n      module: RmqModule,\n      imports: [\n        ClientsModule.registerAsync(\n          //   [\n          //   {\n          //     name: name,\n          //     useFactory: (configService: ConfigService) => ({\n          //       transport: Transport.RMQ,\n          //       options: {\n          //         urls: [configService.get('RABBITMQ_URI')],\n          //         queue: configService.get(`RABBITMQ_${name}_QUEUE`),\n          //       },\n          //     }),\n          //     inject: [ConfigService],\n          //   },\n          // ]\n          getImports(name),\n        ),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RmqModuleOptions.html":{"url":"interfaces/RmqModuleOptions.html","title":"interface - RmqModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RmqModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rmq/rmq.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RMQService } from './rmq.service';\nimport {\n  ClientsModule,\n  ClientsModuleAsyncOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigService } from '@nestjs/config';\n\ninterface RmqModuleOptions {\n  name: string[];\n}\n\n@Module({\n  providers: [RMQService],\n  exports: [RMQService],\n})\nexport class RmqModule {\n  static register({ name }: RmqModuleOptions): DynamicModule {\n    function getImports(name: string[]): ClientsModuleAsyncOptions {\n      return name.map((queue) => ({\n        name: queue,\n        useFactory: (configService: ConfigService) => ({\n          transport: Transport.RMQ,\n          options: {\n            urls: [configService.get('RABBITMQ_URI')],\n            queue: configService.get(`RABBITMQ_${queue}_QUEUE`),\n          },\n        }),\n        inject: [ConfigService],\n      }));\n    }\n\n    return {\n      module: RmqModule,\n      imports: [\n        ClientsModule.registerAsync(\n          //   [\n          //   {\n          //     name: name,\n          //     useFactory: (configService: ConfigService) => ({\n          //       transport: Transport.RMQ,\n          //       options: {\n          //         urls: [configService.get('RABBITMQ_URI')],\n          //         queue: configService.get(`RABBITMQ_${name}_QUEUE`),\n          //       },\n          //     }),\n          //     inject: [ConfigService],\n          //   },\n          // ]\n          getImports(name),\n        ),\n      ],\n      exports: [ClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UPingInput.html":{"url":"interfaces/UPingInput.html","title":"interface - UPingInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UPingInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            latitude\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            longitude\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            media\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            radius\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picks:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        radius:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     Nullable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UPingsWithinRadiusInput.html":{"url":"interfaces/UPingsWithinRadiusInput.html","title":"interface - UPingsWithinRadiusInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UPingsWithinRadiusInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ping/src/ping/graphql/ping.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            radius\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         Latitude\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Latitude\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         Longitude\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Longitude\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphQLDateTime, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude, GraphQLURL } from 'graphql-scalars'\n\nexport interface CreatePingInput {\n    userID: ObjectID;\n    title: string;\n    picks: string[];\n    longitude: Longitude;\n    latitude: Latitude;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n}\n\nexport interface UPingInput {\n    title?: Nullable;\n    picks?: Nullable;\n    longitude?: Nullable;\n    latitude?: Nullable;\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    media?: Nullable[]>;\n}\n\nexport interface MediaInput {\n    key: string;\n    type: string;\n}\n\nexport interface UPingsWithinRadiusInput {\n    longitude: Longitude;\n    latitude: Latitude;\n    radius: number;\n}\n\nexport interface Media {\n    key: string;\n    type: string;\n}\n\nexport interface Ping {\n    id: ObjectID;\n    title: string;\n    userID: string;\n    user: User;\n    longitude: Longitude;\n    latitude: Latitude;\n    picks: string[];\n    description?: Nullable;\n    url?: Nullable;\n    radius?: Nullable;\n    createdAt?: Nullable;\n    media?: Nullable[]>;\n    participants?: Nullable[]>;\n}\n\nexport interface PageInfo {\n    hasNextPage: boolean;\n    hasPreviousPage?: Nullable;\n    startCursor?: Nullable;\n    endCursor?: Nullable;\n}\n\nexport interface PingEdge {\n    cursor: string;\n    node: Ping;\n}\n\nexport interface PingConnection {\n    totalCount?: Nullable;\n    edges: PingEdge[];\n    owner?: Nullable;\n    pageInfo: PageInfo;\n}\n\nexport interface GetParticipantsResponse {\n    totalCount: number;\n    members?: Nullable;\n}\n\nexport interface IQuery {\n    getPing(id: ObjectID): Ping | Promise;\n    getAllPing(first: number, after?: Nullable, userID?: Nullable): PingConnection | Promise;\n    getPingsWithinRadius(payload: UPingsWithinRadiusInput, first: number, after?: Nullable, picks?: Nullable[]>): Nullable | Promise>;\n    getParticipants(pingID: ObjectID, first?: Nullable, after?: Nullable): GetParticipantsResponse | Promise;\n}\n\nexport interface User {\n    id: ObjectID;\n    pings?: Nullable[]>;\n}\n\nexport interface IMutation {\n    createPing(payload: CreatePingInput): Ping | Promise;\n    updatePing(id: ObjectID, payload: UPingInput): Ping | Promise;\n    addParticipant(id: ObjectID, userID: ObjectID): boolean | Promise;\n    removeParticipant(id: ObjectID, userID: ObjectID): string | Promise;\n}\n\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type URL = typeof GraphQLURL;\nexport type DateTime = typeof GraphQLDateTime;\nexport type ObjectID = typeof GraphQLObjectID;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedError.html":{"url":"classes/UnauthorizedError.html","title":"class - UnauthorizedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnknownError.html":{"url":"classes/UnknownError.html","title":"class - UnknownError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnknownError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:92\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                devices\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                latitude\n                            \n                            \n                                    Optional\n                                longitude\n                            \n                            \n                                    Optional\n                                middleName\n                            \n                            \n                                    Optional\n                                picks\n                            \n                            \n                                    Optional\n                                picture\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        devices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ObjectID\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        middleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        picks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/entity/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Maps user data between different representations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activityCount\n                            \n                            \n                                createdAt\n                            \n                            \n                                devices\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                picks\n                            \n                            \n                                    Optional\n                                picture\n                            \n                            \n                                    Optional\n                                pings\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ToEntityFromInput\n                            \n                            \n                                    Static\n                                ToEntityFromPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: Name, email: string, username: string, picks: string[], devices: string[], picture?: string, pings?: Ping[], id?: string, createdAt?: Date, activityCount?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/users/entity/user.entity.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        Name\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        picks\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devices\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        picture\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        pings\n                                                  \n                                                        \n                                                                        Ping[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        activityCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activityCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        devices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Name\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ping[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/entity/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ToEntityFromInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    ToEntityFromInput(input: GraphQLCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/entity/user.entity.ts:74\n                        \n                    \n\n\n            \n                \n                        Maps input data to a user entity.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        GraphQLCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The input data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserCreateInput\n\n                        \n                            \n                                The user entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ToEntityFromPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    ToEntityFromPrisma(result: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/entity/user.entity.ts:101\n                        \n                    \n\n\n            \n                \n                        Maps a Prisma result to a user entity.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Prisma result.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                The user entity.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  GraphQLEmailAddress,\n  GraphQLLatitude,\n  GraphQLLongitude,\n} from 'graphql-scalars';\n\nimport { CreateUserInput as GraphQLCreateInput } from '../src/user/graphql/user.schema';\nimport { ObjectId } from 'bson';\n\ntype Ping = {\n  __typename: 'Ping';\n  id: string;\n};\n\ntype Name = {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n};\n\nexport type UserCreateInput = Omit & {\n  latitude: number;\n  longitude: number;\n};\n\n/**\n * Maps user data between different representations.\n */\nexport class User {\n  id: string;\n  createdAt: Date;\n  name: Name;\n  email: string;\n  username: string;\n  picture?: string;\n  picks: string[];\n  devices: string[];\n  pings?: Ping[];\n  activityCount: number;\n\n  constructor(\n    name: Name,\n    email: string,\n    username: string,\n    picks: string[],\n    devices: string[],\n    picture?: string,\n    pings?: Ping[],\n    id?: string,\n    createdAt?: Date,\n    activityCount?: number,\n  ) {\n    this.id = id;\n    this.createdAt = createdAt;\n    this.name = name;\n    this.email = email;\n    this.username = username;\n    this.picture = picture;\n    this.picks = picks;\n    this.devices = devices;\n    this.pings = pings;\n    this.activityCount = activityCount;\n  }\n\n  /**\n   * Maps input data to a user entity.\n   *\n   * @param input The input data.\n   * @returns The user entity.\n   */\n  static ToEntityFromInput(input: GraphQLCreateInput): UserCreateInput {\n    const user = new User(\n      {\n        firstName: input.firstName,\n        lastName: input.lastName,\n        middleName: input.middleName,\n      },\n      GraphQLEmailAddress.parseValue(input.email),\n      input.username,\n      input.picks,\n      [input.device],\n      input.picture,\n    );\n\n    return {\n      ...user,\n      latitude: GraphQLLatitude.parseValue(input.latitude),\n      longitude: GraphQLLongitude.parseValue(input.longitude),\n    };\n  }\n\n  /**\n   * Maps a Prisma result to a user entity.\n   *\n   * @param result The Prisma result.\n   * @returns The user entity.\n   */\n  static ToEntityFromPrisma(result: any): User {\n    return {\n      createdAt: new ObjectId(result.id).getTimestamp(),\n      id: result.id,\n      email: result.email,\n      username: result.username,\n      name: {\n        firstName: result.name.firstName,\n        middleName: result.name.middleName,\n        lastName: result.name.lastName,\n      },\n      picture: result.picture,\n      picks: result.picks,\n      devices: result.devices,\n      pings: result.pings.map(\n        (ping: Ping): Ping => ({\n          __typename: ping.__typename,\n          id: ping.id,\n        }),\n      ),\n      activityCount: result.pings.length,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/graphql/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                activityCount\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                devices\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                picks\n                            \n                            \n                                    Optional\n                                picture\n                            \n                            \n                                    Optional\n                                pings\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        activityCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        devices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmailAddress\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ObjectID\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Nullable\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/graphql/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GraphQLDateTime, GraphQLEmailAddress, GraphQLObjectID, GraphQLLatitude, GraphQLLongitude } from 'graphql-scalars'\n\nexport class CreateUserInput {\n    username: string;\n    email: EmailAddress;\n    firstName: string;\n    lastName: string;\n    middleName?: Nullable;\n    picture?: Nullable;\n    picks: string[];\n    latitude?: Nullable;\n    longitude?: Nullable;\n    device: string;\n}\n\nexport class UpdateUserInput {\n    id: ObjectID;\n    username?: Nullable;\n    email?: Nullable;\n    firstName?: Nullable;\n    lastName?: Nullable;\n    middleName?: Nullable;\n    picks?: Nullable;\n    picture?: Nullable;\n    devices?: Nullable;\n    latitude?: Nullable;\n    longitude?: Nullable;\n}\n\nexport interface BaseError {\n    message: string;\n}\n\nexport class Name {\n    firstName: string;\n    middleName?: Nullable;\n    lastName: string;\n}\n\nexport class User {\n    id: ObjectID;\n    email: EmailAddress;\n    username: string;\n    name?: Nullable;\n    picture?: Nullable;\n    createdAt?: Nullable;\n    picks: string[];\n    pings?: Nullable[]>;\n    activityCount?: Nullable;\n    devices?: Nullable;\n}\n\nexport abstract class IQuery {\n    abstract user(): UserPayload | Promise;\n\n    abstract userById(id: ObjectID): User | Promise;\n\n    abstract isUsernameAvailable(username: string): boolean | Promise;\n}\n\nexport class InvalidInputError implements BaseError {\n    message: string;\n}\n\nexport class NotFoundError implements BaseError {\n    message: string;\n}\n\nexport class UnauthorizedError implements BaseError {\n    message: string;\n}\n\nexport class ForbiddenError implements BaseError {\n    message: string;\n}\n\nexport class InternalServerError implements BaseError {\n    message: string;\n}\n\nexport class UnknownError implements BaseError {\n    message: string;\n}\n\nexport class Ping {\n    id: ObjectID;\n    user?: Nullable;\n}\n\nexport abstract class IMutation {\n    abstract createUser(payload: CreateUserInput): User | Promise;\n\n    abstract updateUser(payload: UpdateUserInput): User | Promise;\n\n    abstract removeUser(id: ObjectID): Nullable | Promise>;\n}\n\nexport type DateTime = typeof GraphQLDateTime;\nexport type EmailAddress = typeof GraphQLEmailAddress;\nexport type ObjectID = typeof GraphQLObjectID;\nexport type Longitude = typeof GraphQLLongitude;\nexport type Latitude = typeof GraphQLLatitude;\nexport type UserPayload = User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                addMembership\n                            \n                            \n                                    \n                                    Async\n                                getUserDevices\n                            \n                            \n                                    \n                                    Async\n                                removeMembership\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        addMembership\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMembership(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(Pattern.addMembership)\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUserDevices\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserDevices(users: string[], context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(Pattern.userDevices)\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeMembership\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeMembership(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(Pattern.removeMembership)\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Logger } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { Pattern, RMQService } from '@app/common';\nimport {\n  Ctx,\n  EventPattern,\n  MessagePattern,\n  Payload,\n  RmqContext,\n} from '@nestjs/microservices';\nimport { Membership } from '@prisma/client';\n\n@Controller()\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly rmqService: RMQService,\n  ) {}\n\n  private readonly logger = new Logger(UserController.name);\n\n  /*\n   * return user devices as an array of strings\n   */\n  @MessagePattern(Pattern.userDevices)\n  async getUserDevices(@Payload() users: string[], @Ctx() context: RmqContext) {\n    const userDevices = await this.userService.getUserDevices(users);\n\n    this.rmqService.ack(context);\n    return userDevices;\n  }\n\n  @EventPattern(Pattern.addMembership)\n  async addMembership(\n    @Payload() payload: { userID: string; id: string; membership: Membership },\n  ) {\n    const { userID, id, membership } = payload;\n\n    this.logger.log(payload);\n\n    await this.userService.addMembership(userID, id, membership);\n  }\n\n  @EventPattern(Pattern.removeMembership)\n  async removeMembership(@Payload() payload: { userID: string; id: string }) {\n    const { userID, id } = payload;\n\n    await this.userService.removeMembership(userID, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/users/src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\nimport {\n  DateTimeResolver,\n  EmailAddressResolver,\n  LatitudeResolver,\n  LongitudeResolver,\n  ObjectIDResolver,\n} from 'graphql-scalars';\nimport { GraphQLError, GraphQLFormattedError } from 'graphql';\nimport { NEO4J_SERVICE, RmqModule } from '@app/common';\n\nimport { ApolloServerPluginLandingPageLocalDefault } from '@apollo/server/plugin/landingPage/default';\nimport { AuthModule } from '@app/auth';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { Module } from '@nestjs/common';\nimport { PayloadResolver } from './payload.resolver';\nimport { PrismaModule } from '@app/prisma';\nimport { UserController } from './user.controller';\nimport { UserResolver } from './user.resolver';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      typePaths: ['**/user.gql', 'libs/common/src/graphql/error.gql'],\n      playground: false,\n      plugins: [ApolloServerPluginLandingPageLocalDefault()],\n      resolvers: {\n        DateTime: DateTimeResolver,\n        EmailAddress: EmailAddressResolver,\n        ObjectID: ObjectIDResolver,\n        Latitude: LatitudeResolver,\n        Longitude: LongitudeResolver,\n      },\n      formatError: (error: GraphQLError) => {\n        console.log(error);\n        const graphQLFormattedError: GraphQLFormattedError = {\n          message: error?.message,\n        };\n        return graphQLFormattedError;\n      },\n    }),\n    AuthModule,\n    PrismaModule.register({ logQueries: false }),\n    // RmqModule,\n    // RmqModule.register({ name: [NEO4J_SERVICE] }),\n  ],\n  // controllers: [UserController],\n  providers: [UserResolver, PayloadResolver, UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                wrapPayload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                getUser\n                            \n                            \n                                    \n                                getUserById\n                            \n                            \n                                    \n                                isUsernameAvailable\n                            \n                            \n                                    \n                                resolveReference\n                            \n                            \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService)\n                    \n                \n                        \n                            \n                                Defined in apps/users/src/user/user.resolver.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UserResolver.name)\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/user.resolver.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        wrapPayload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WrappedPayload()\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/user/user.resolver.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('createUser')\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.resolver.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(user: TUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('user')@UseGuards(GqlAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.resolver.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            TUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('userById')\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.resolver.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isUsernameAvailable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isUsernameAvailable(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('isUsernameAvailable')\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.resolver.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resolveReference\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveReference(reference: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveReference()\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.resolver.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reference\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(payload: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('updateUser')\n                \n            \n\n                    \n                        \n                            Defined in apps/users/src/user/user.resolver.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Resolver,\n  Query,\n  Mutation,\n  Args,\n  ResolveReference,\n} from '@nestjs/graphql';\nimport { UserService } from './user.service';\nimport { CreateUserInput, UpdateUserInput } from './graphql/user.schema';\nimport { GraphQLObjectID } from 'graphql-scalars';\nimport { TUser } from '@app/common/utils/entities';\nimport { Logger, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '@app/auth';\nimport { WrappedPayload } from '../common';\nimport { User } from 'apps/users/entity/user.entity';\n\n@Resolver('User')\nexport class UserResolver {\n  constructor(private readonly usersService: UserService) {}\n  private readonly logger = new Logger(UserResolver.name);\n  private readonly wrapPayload = new WrappedPayload();\n\n  @Query('user')\n  @UseGuards(GqlAuthGuard)\n  getUser(@CurrentUser() user: TUser) {\n    return this.wrapPayload.wrap(user);\n  }\n\n  @Query('isUsernameAvailable')\n  isUsernameAvailable(@Args('username') username: string) {\n    return this.usersService.isUsernameAvailable(username);\n  }\n\n  @Query('userById')\n  getUserById(\n    @Args({ name: 'id', type: () => GraphQLObjectID })\n    id: typeof GraphQLObjectID,\n  ) {\n    return this.usersService.findOne(GraphQLObjectID.parseValue(id));\n  }\n\n  @Mutation('createUser')\n  create(@Args('payload') payload: CreateUserInput) {\n    return this.usersService.createUser(User.ToEntityFromInput(payload));\n  }\n\n  @Mutation('updateUser')\n  updateUser(@Args('payload') payload: UpdateUserInput) {\n    return this.usersService.update(payload);\n  }\n\n  @ResolveReference()\n  resolveReference(reference: {\n    __typename: string;\n    id: typeof GraphQLObjectID;\n  }) {\n    console.log('reference', reference);\n\n    return this.usersService.findOne(GraphQLObjectID.parseValue(reference.id));\n  }\n\n  // @ResolveField('ping')\n  // pings(@Parent() user: User) {\n  //   this.logger.log('user', user);\n  //   return { __typename: 'User', id: user.id };\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMembership\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Async\n                                getUserDevices\n                            \n                            \n                                    Async\n                                isUsernameAvailable\n                            \n                            \n                                    Async\n                                removeMembership\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/users/src/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addMembership\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMembership(userID: string, id: string, membership: Membership)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/user.service.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                membership\n                                            \n                                                        Membership\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(input: UserCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/user.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/user.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserDevices\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserDevices(users: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/user.service.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isUsernameAvailable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isUsernameAvailable(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/user.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeMembership\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeMembership(userID: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/user.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(payload: UpdateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/user/user.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UpdateUserInput } from './graphql/user.schema';\nimport { GraphQLEmailAddress, GraphQLObjectID } from 'graphql-scalars';\nimport { lastValueFrom } from 'rxjs';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Membership } from '@prisma/client';\n\nimport { InjectRepository, PrismaService } from '@app/prisma';\nimport { NEO4J_SERVICE, Pattern } from '@app/common';\nimport { ObjectId } from 'bson';\nimport { UserCreateInput, User } from 'apps/users/entity/user.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository('user')\n    private readonly userRepo: PrismaService['user'],\n    // @Inject(NEO4J_SERVICE) private readonly neo4jClient: ClientProxy,\n  ) {}\n  /*\n   ? Create new user\n   */\n  async createUser(input: UserCreateInput) {\n    const {\n      email,\n      username,\n      name,\n      // name: { firstName, middleName, lastName },\n      picks,\n      picture,\n      latitude,\n      longitude,\n      devices,\n    } = input;\n\n    const result = await this.userRepo.create({\n      data: {\n        email,\n        username,\n        name,\n        // name: {\n        //   firstName,\n        //   middleName,\n        //   lastName,\n        // },\n        picture,\n        picks,\n        devices,\n      },\n    });\n\n    // try {\n    //   await lastValueFrom(\n    //     this.neo4jClient.emit(\n    //       Pattern.userCreated,\n    //       JSON.stringify({\n    //         id: result.id,\n    //         picks: picks,\n    //         longitude,\n    //         latitude,\n    //         devices: [device],\n    //       }),\n    //     ),\n    //   );\n    // } catch (error) {\n    //   console.log('Neo4J error', error);\n    // }\n\n    return User.ToEntityFromPrisma(result);\n\n    // const user = {\n    //   createdAt: new ObjectId(result.id).getTimestamp(),\n    //   id: result.id,\n    //   email: result.email,\n    //   username: result.username,\n    //   name: {\n    //     firstName: result.name.firstName,\n    //     middleName: result.name.middleName,\n    //     lastName: result.name.lastName,\n    //   },\n    //   picture: result.picture,\n    //   picks: result.picks,\n    //   devices: result.devices,\n    // };\n\n    // return user;\n  }\n\n  /* \n  ? Get user details by email\n  */\n  async getUserByEmail(email: string) {\n    const result = await this.userRepo.findUnique({\n      where: { email: email },\n    });\n\n    const user: User = {\n      createdAt: new ObjectId(result.id).getTimestamp(),\n      id: result.id,\n      email: result.email,\n      username: result.username,\n      name: {\n        firstName: result.name.firstName,\n        middleName: result.name.middleName,\n        lastName: result.name.lastName,\n      },\n      picture: result.picture,\n      picks: result.picks,\n      devices: result.devices,\n      pings: result.pings.map((ping) => ({\n        __typename: 'Ping',\n        id: ping.id,\n      })),\n      activityCount: result.pings.length,\n    };\n\n    return user;\n  }\n\n  async isUsernameAvailable(username: string) {\n    const count = await this.userRepo.count({\n      where: {\n        username: username,\n      },\n    });\n\n    return count > 0 ? false : true;\n  }\n\n  async update(payload: UpdateUserInput) {\n    const {\n      id,\n      email,\n      username,\n      lastName,\n      firstName,\n      middleName,\n      picks,\n      picture,\n      devices,\n    } = payload;\n\n    let dbResult;\n\n    if (lastName || firstName || middleName) {\n      dbResult = await this.userRepo.update({\n        where: {\n          id: GraphQLObjectID.parseValue(id),\n        },\n        data: {\n          email: email ? GraphQLEmailAddress.parseValue(email) : undefined,\n          username,\n          name: {\n            update: {\n              firstName,\n              lastName,\n              middleName,\n            },\n          },\n          picks,\n          picture,\n          devices,\n        },\n      });\n    }\n\n    dbResult = await this.userRepo.update({\n      where: {\n        id: GraphQLObjectID.parseValue(id),\n      },\n      data: {\n        email: email ? GraphQLEmailAddress.parseValue(email) : undefined,\n        username,\n        picks,\n        picture,\n        devices,\n      },\n    });\n\n    const updatedUser = {\n      createdAt: new ObjectId(dbResult.id).getTimestamp(),\n      id: dbResult.id,\n      email: dbResult.email,\n      username: dbResult.username,\n      name: {\n        firstName: dbResult.name.firstName,\n        middleName: dbResult.name.middleName,\n        lastName: dbResult.name.lastName,\n      },\n      picture: dbResult.picture,\n      picks: dbResult.picks,\n      devices: dbResult.devices,\n    };\n\n    return updatedUser;\n  }\n\n  async findOne(id: string) {\n    console.log('id', id);\n\n    const result = await this.userRepo.findUnique({\n      where: {\n        id: GraphQLObjectID.parseValue(id),\n      },\n    });\n\n    const { id: _id, email, username, name, picks, picture } = result;\n\n    return {\n      _id,\n      email,\n      username,\n      name,\n      picks,\n      picture,\n      createdAt: new ObjectId(id).getTimestamp(),\n    };\n  }\n\n  async getUserDevices(users: string[]) {\n    try {\n      const result = await this.userRepo.findMany({\n        where: {\n          id: {\n            in: users,\n          },\n        },\n        select: {\n          devices: true,\n        },\n      });\n\n      return result\n        .filter((user) => user.devices.length > 0)\n        .flatMap((user) => user.devices);\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  async addMembership(userID: string, id: string, membership: Membership) {\n    try {\n      await this.userRepo.update({\n        where: {\n          id: userID,\n        },\n        data: {\n          pings: {\n            push: [\n              {\n                id,\n                membership,\n              },\n            ],\n          },\n        },\n      });\n    } catch (error) {\n      console.log('Add membership', error);\n    }\n  }\n\n  async removeMembership(userID: string, id: string) {\n    try {\n      const exisitngPings = await this.userRepo.findUnique({\n        where: {\n          id: GraphQLObjectID.parseValue(userID),\n        },\n        select: {\n          pings: true,\n        },\n      });\n\n      const updatedPing = exisitngPings.pings.filter((ping) => ping.id !== id);\n\n      await this.userRepo.update({\n        where: {\n          id: GraphQLObjectID.parseValue(userID),\n        },\n        data: {\n          pings: updatedPing,\n        },\n      });\n    } catch (error) {\n      console.log('Remove membership', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WrappedPayload.html":{"url":"classes/WrappedPayload.html","title":"class - WrappedPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WrappedPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/common/wrapPayload.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                internalServerError\n                            \n                            \n                                    Private\n                                    Readonly\n                                notFoundError\n                            \n                            \n                                    Private\n                                    Readonly\n                                unAuthorizedError\n                            \n                            \n                                    Private\n                                    Readonly\n                                unknownError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                wrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/users/src/common/wrapPayload.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        internalServerError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InternalServerError\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/common/wrapPayload.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        notFoundError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotFoundError\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/common/wrapPayload.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        unAuthorizedError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UnauthorizedError\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/common/wrapPayload.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        unknownError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UnknownError\n\n                    \n                \n                    \n                        \n                                Defined in apps/users/src/common/wrapPayload.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        wrap\n                        \n                    \n                \n            \n            \n                \nwrap(T: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/users/src/common/wrapPayload.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                T\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  InternalServerError,\n  NotFoundError,\n  UnauthorizedError,\n  UnknownError,\n} from '../user/graphql/user.schema';\n\nexport class WrappedPayload {\n  private readonly unAuthorizedError: UnauthorizedError;\n  private readonly notFoundError: NotFoundError;\n  private readonly internalServerError: InternalServerError;\n  private readonly unknownError: UnknownError;\n\n  constructor() {\n    this.unAuthorizedError = new UnauthorizedError();\n    this.unAuthorizedError.message = 'Unauthorized';\n\n    this.notFoundError = new NotFoundError();\n    this.notFoundError.message = 'Not found';\n\n    this.internalServerError = new InternalServerError();\n    this.internalServerError.message = 'Internal server error';\n\n    this.unknownError = new UnknownError();\n    this.unknownError.message = 'Unknown error';\n  }\n\n  wrap(T: any) {\n    switch (T.constructor) {\n      case UnauthorizedError:\n        return this.unAuthorizedError;\n      case NotFoundError:\n        return this.notFoundError;\n      case InternalServerError:\n        return this.internalServerError;\n      case Object:\n        return T;\n      default:\n        return this.unknownError;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/activity/src/activity.controller.ts\n            \n            controller\n            ActivityController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/activity/src/activity.service.ts\n            \n            injectable\n            ActivityService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/activity/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/activity/src/service/prisma.service.ts\n            \n            injectable\n            ActivityRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/broadcast-service/src/broadcast.controller.ts\n            \n            controller\n            BroadcastController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/broadcast-service/src/broadcast.service.ts\n            \n            injectable\n            BroadcastService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/broadcast-service/src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/broadcast-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/deletion-service/src/deletion-service.controller.ts\n            \n            controller\n            DeletionServiceController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/deletion-service/src/deletion-service.service.ts\n            \n            injectable\n            DeletionServiceService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/deletion-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/file-flow-engine/src/aws-s3/aws.service.ts\n            \n            injectable\n            AWSService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/file-flow-engine/src/file-flow-engine.controller.ts\n            \n            controller\n            FileFlowEngineController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/file-flow-engine/src/file-flow-engine.service.ts\n            \n            injectable\n            FileFlowEngineService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/file-flow-engine/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/forum/src/channel/channel.controller.ts\n            \n            controller\n            ChannelController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/forum/src/channel/channel.gatway.ts\n            \n            class\n            ChannelGateway\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/forum/src/channel/channel.resolver.ts\n            \n            class\n            ChannelResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/forum/src/channel/channel.service.ts\n            \n            injectable\n            ChannelService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/forum/src/channel/graphql/channel.schema.ts\n            \n            interface\n            Forum\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/forum/src/channel/graphql/channel.schema.ts\n            \n            interface\n            IQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/forum/src/channel/graphql/channel.schema.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/forum/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/forum/src/message/message.resolver.ts\n            \n            class\n            MessageResolver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/forum/src/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/forum/src/service/forum.service.ts\n            \n            injectable\n            ForumRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/gateway/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/neo4j/src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/neo4j/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/neo4j/src/neo4j.controller.ts\n            \n            controller\n            Neo4jController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/neo4j/src/neo4j.service.ts\n            \n            injectable\n            Neo4jService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/ping/src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ping/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            CreatePingInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            GetParticipantsResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            IMutation\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            IQuery\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            Media\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            MediaInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            PageInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            Ping\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            PingConnection\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            PingEdge\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            UPingInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            UPingsWithinRadiusInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/graphql/ping.schema.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/ping.resolver.ts\n            \n            class\n            PingResolver\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/ping/src/ping/ping.service.ts\n            \n            injectable\n            PingService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/ping/src/service/prisma.service.ts\n            \n            injectable\n            PingRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/entity/user.entity.ts\n            \n            class\n            User\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                apps/users/src/common/wrapPayload.ts\n            \n            class\n            WrappedPayload\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/users/src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            ForbiddenError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            IMutation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            InternalServerError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            InvalidInputError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            IQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            Name\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            NotFoundError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            Ping\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            UnauthorizedError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            UnknownError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/users/src/user/graphql/user.schema.ts\n            \n            interface\n            BaseError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/users/src/user/payload.resolver.ts\n            \n            class\n            PayloadResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/users/src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/users/src/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/users/src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                libs/auth/src/decorator/user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/auth/src/entity/auth.entity.ts\n            \n            class\n            AuthEntity\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                libs/auth/src/guard/gql.guard.ts\n            \n            injectable\n            GqlAuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/auth/src/jwt/jwt-payload.interface.ts\n            \n            interface\n            JsonObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/auth/src/jwt/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                libs/auth/src/jwt/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/auth/src/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common/src/constants/pattern.ts\n            \n            variable\n            Pattern\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/rmq/rmq-config.service.ts\n            \n            injectable\n            RmqConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/common/src/rmq/rmq.module.ts\n            \n            interface\n            RmqModuleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rmq/rmq.service.ts\n            \n            injectable\n            RMQService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/common/src/services.ts\n            \n            variable\n            ACTIVITY_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/services.ts\n            \n            variable\n            BROADCAST_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/services.ts\n            \n            variable\n            NEO4J_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/services.ts\n            \n            variable\n            USER_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/helpers.ts\n            \n            variable\n            decodeFromBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/helpers.ts\n            \n            variable\n            encodeToBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/firebase/src/firebase.constants.ts\n            \n            class\n            FirebaseConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/firebase/src/firebase.decorator.ts\n            \n            function\n            InjectFirebaseAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/firebase/src/firebase.interface.ts\n            \n            interface\n            FirebaseAdmin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/firebase/src/firebase.interface.ts\n            \n            interface\n            FirebaseModuleOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/firebase/src/util/getFirebaseAdmin.ts\n            \n            variable\n            createInstances\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/firebase/src/util/getFirebaseAdmin.ts\n            \n            variable\n            getFirebaseAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/generate-typings/channel.ts\n            \n            variable\n            definitionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/generate-typings/ping.ts\n            \n            variable\n            definitionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/generate-typings/user.ts\n            \n            variable\n            definitionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/neo4j-common/src/neo4j-error.filter.ts\n            \n            class\n            Neo4jErrorFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/neo4j-common/src/neo4j-transaction.interceptor.ts\n            \n            injectable\n            Neo4jTransactionInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/neo4j-common/src/neo4j-type.interceptor.ts\n            \n            injectable\n            Neo4jTypeInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/neo4j-common/src/neo4j-type.interceptor.ts\n            \n            variable\n            toNative\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/neo4j-common/src/neo4j.constants.ts\n            \n            variable\n            NEO4J_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/neo4j-common/src/neo4j.constants.ts\n            \n            variable\n            NEO4J_DRIVER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/neo4j-common/src/neo4j.service.ts\n            \n            injectable\n            Neo4jCommonService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                libs/neo4j-common/src/neo4j.util.ts\n            \n            variable\n            createDriver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/prisma/src/inject-repository.decorator.ts\n            \n            function\n            createRepositoryProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/prisma/src/inject-repository.decorator.ts\n            \n            function\n            InjectRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/prisma/src/inject-repository.decorator.ts\n            \n            variable\n            prismaRepositories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/prisma/src/prisma.provider.ts\n            \n            interface\n            PrismaModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/prisma/src/prisma.provider.ts\n            \n            interface\n            PrismaOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/prisma/src/prisma.provider.ts\n            \n            function\n            createAsyncOptionsProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/prisma/src/prisma.provider.ts\n            \n            function\n            createAsyncProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/prisma/src/prisma.provider.ts\n            \n            variable\n            defaultPrismaOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/prisma/src/prisma.provider.ts\n            \n            variable\n            PRIMSA_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/prisma/src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.5.3\n        \n            @apollo/server : ^4.9.2\n        \n            @apollo/subgraph : ^2.5.3\n        \n            @aws-sdk/client-s3 : ^3.460.0\n        \n            @aws-sdk/s3-request-presigner : ^3.460.0\n        \n            @nestjs/apollo : ^12.1.0\n        \n            @nestjs/axios : ^3.0.2\n        \n            @nestjs/common : ^10.3.3\n        \n            @nestjs/config : ^3.2.0\n        \n            @nestjs/core : ^10.3.3\n        \n            @nestjs/graphql : ^12.1.1\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^10.3.3\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.3\n        \n            @nestjs/platform-socket.io : ^10.3.3\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/websockets : ^10.3.3\n        \n            @prisma/client : ^5.7.0\n        \n            @sapphire/snowflake : ^3.5.1\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.3\n        \n            bson : ^6.2.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            firebase-admin : ^12.0.0\n        \n            graphql : ^16.8.0\n        \n            graphql-scalars : ^1.22.5\n        \n            joi : ^17.11.0\n        \n            jwks-rsa : ^3.1.0\n        \n            neo4j-driver : ^5.14.0\n        \n            passport : ^0.7.0\n        \n            passport-auth0 : ^1.4.4\n        \n            passport-jwt : ^4.0.1\n        \n            prisma-query-log : ^3.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^5.0.5\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createAsyncOptionsProvider   (libs/.../prisma.provider.ts)\n                        \n                        \n                            createAsyncProvider   (libs/.../prisma.provider.ts)\n                        \n                        \n                            createRepositoryProviders   (libs/.../inject-repository.decorator.ts)\n                        \n                        \n                            InjectFirebaseAdmin   (libs/.../firebase.decorator.ts)\n                        \n                        \n                            InjectRepository   (libs/.../inject-repository.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/activity/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/broadcast-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/file-flow-engine/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/deletion-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/forum/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/neo4j/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/users/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/ping/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/prisma/src/prisma.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createAsyncOptionsProvider\n                        \n                    \n                \n            \n            \n                \ncreateAsyncOptionsProvider(options: PrismaModuleAsyncOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            PrismaModuleAsyncOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAsyncProvider\n                        \n                    \n                \n            \n            \n                \ncreateAsyncProvider(options: PrismaModuleAsyncOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            PrismaModuleAsyncOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/prisma/src/inject-repository.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRepositoryProviders\n                        \n                    \n                \n            \n            \n                \ncreateRepositoryProviders()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InjectRepository\n                        \n                    \n                \n            \n            \n                \nInjectRepository(name: PrismaDelegateNames)\n                \n            \n\n\n\n\n            \n                \n                        Example:\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            PrismaDelegateNames\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/firebase/src/firebase.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InjectFirebaseAdmin\n                        \n                    \n                \n            \n            \n                \nInjectFirebaseAdmin()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\n\n\nVolunteerX Server\nVolunteerX a quasi localized social networking for volunteers. It is a platform where we sync the innovative minds to resolve real-life problems and bring changes to the world. We collaborate with local people to bring the difference they want to see. This repository consists of the server for the app. The server follows a microservice architecture using GraphQL and RabbitMQ for networking.\nTech Stack\n\nNestJs\nGraphQL\nPrisma\nRabbitMQ\nMongoDB\nNeo4J\nDocker\nApollo Federation\nFirebase\nSocket.io\nMicroservice\n\nFeatures\n\nUser services\nPost services\nAuthentication (NestJs Passport)\nMicroservice\nApollo Federated Gateway\nNeo4J based spatial proximity search\n\nRoadmap\n\nImplement more Socket.io features\nEvent management\nActivity admin features\nTesting\nGraphQL error handling\n\nRelated\nHere are some related projects\nClient\nLicense\nMIT\nAuthors\n\n@amilmohd155\n\nFeedback\nIf you have any feedback, please reach out to us at amilmoh155@gmail.com.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 VolunteerX\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActivityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BroadcastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChannelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeletionServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileFlowEngineModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FirebaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Neo4jCommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Neo4jModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RmqModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivityModule\n\n\n\ncluster_ActivityModule_imports\n\n\n\ncluster_ActivityModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BroadcastModule\n\n\n\ncluster_BroadcastModule_imports\n\n\n\ncluster_BroadcastModule_providers\n\n\n\ncluster_ChannelModule\n\n\n\ncluster_ChannelModule_providers\n\n\n\ncluster_DeletionServiceModule\n\n\n\ncluster_DeletionServiceModule_providers\n\n\n\ncluster_FileFlowEngineModule\n\n\n\ncluster_FileFlowEngineModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_MessageModule\n\n\n\ncluster_MessageModule_exports\n\n\n\ncluster_Neo4jModule\n\n\n\ncluster_Neo4jModule_imports\n\n\n\ncluster_Neo4jModule_providers\n\n\n\ncluster_PingModule\n\n\n\ncluster_PingModule_providers\n\n\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nRmqModule\n\nRmqModule\n\n\n\nActivityModule\n\nActivityModule\n\nActivityModule -->\n\nRmqModule->ActivityModule\n\n\n\n\n\nPingModule\n\nPingModule\n\nPingModule -->\n\nRmqModule->PingModule\n\n\n\n\n\nBroadcastModule\n\nBroadcastModule\n\nBroadcastModule -->\n\nRmqModule->BroadcastModule\n\n\n\nBroadcastModule -->\n\nRmqModule->BroadcastModule\n\n\n\n\n\nDeletionServiceModule\n\nDeletionServiceModule\n\nDeletionServiceModule -->\n\nRmqModule->DeletionServiceModule\n\n\n\n\n\nNeo4jModule\n\nNeo4jModule\n\nNeo4jModule -->\n\nRmqModule->Neo4jModule\n\n\n\nNeo4jModule -->\n\nRmqModule->Neo4jModule\n\n\n\n\n\nRMQService \n\nRMQService \n\nRMQService  -->\n\nRmqModule->RMQService \n\n\n\n\n\nActivityRepository\n\nActivityRepository\n\nActivityModule -->\n\nActivityRepository->ActivityModule\n\n\n\n\n\nActivityService\n\nActivityService\n\nActivityModule -->\n\nActivityService->ActivityModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChannelModule\n\nChannelModule\n\nChannelModule -->\n\nAuthModule->ChannelModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\nPingModule -->\n\nAuthModule->PingModule\n\n\n\n\n\nGqlAuthGuard \n\nGqlAuthGuard \n\nGqlAuthGuard  -->\n\nAuthModule->GqlAuthGuard \n\n\n\n\n\nFileFlowEngineModule\n\nFileFlowEngineModule\n\nFileFlowEngineModule -->\n\nAuthModule->FileFlowEngineModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nChannelModule->AppModule\n\n\n\n\n\nMessageModule\n\nMessageModule\n\nAppModule -->\n\nMessageModule->AppModule\n\n\n\nChannelModule -->\n\nMessageModule->ChannelModule\n\n\n\n\n\nMessageService \n\nMessageService \n\nMessageService  -->\n\nMessageModule->MessageService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nBroadcastModule -->\n\nHealthModule->BroadcastModule\n\n\n\nNeo4jModule -->\n\nHealthModule->Neo4jModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nPingModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nHealthModule -->\n\nPrismaModule->HealthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGqlAuthGuard\n\nGqlAuthGuard\n\nAuthModule -->\n\nGqlAuthGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFirebaseModule\n\nFirebaseModule\n\nBroadcastModule -->\n\nFirebaseModule->BroadcastModule\n\n\n\n\n\nBroadcastService\n\nBroadcastService\n\nBroadcastModule -->\n\nBroadcastService->BroadcastModule\n\n\n\n\n\nChannelService\n\nChannelService\n\nChannelModule -->\n\nChannelService->ChannelModule\n\n\n\n\n\nForumRepository\n\nForumRepository\n\nChannelModule -->\n\nForumRepository->ChannelModule\n\n\n\nMessageModule -->\n\nForumRepository->MessageModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nChannelModule -->\n\nMessageService->ChannelModule\n\n\n\nMessageModule -->\n\nMessageService->MessageModule\n\n\n\n\n\nDeletionServiceService\n\nDeletionServiceService\n\nDeletionServiceModule -->\n\nDeletionServiceService->DeletionServiceModule\n\n\n\n\n\nAWSService\n\nAWSService\n\nFileFlowEngineModule -->\n\nAWSService->FileFlowEngineModule\n\n\n\n\n\nFileFlowEngineService\n\nFileFlowEngineService\n\nFileFlowEngineModule -->\n\nFileFlowEngineService->FileFlowEngineModule\n\n\n\n\n\nPingRepository\n\nPingRepository\n\nHealthModule -->\n\nPingRepository->HealthModule\n\n\n\nPingModule -->\n\nPingRepository->PingModule\n\n\n\n\n\nNeo4jCommonModule\n\nNeo4jCommonModule\n\nNeo4jModule -->\n\nNeo4jCommonModule->Neo4jModule\n\n\n\n\n\nNeo4jService\n\nNeo4jService\n\nNeo4jModule -->\n\nNeo4jService->Neo4jModule\n\n\n\n\n\nPingService\n\nPingService\n\nPingModule -->\n\nPingService->PingModule\n\n\n\n\n\nRMQService\n\nRMQService\n\nRmqModule -->\n\nRMQService->RmqModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    24 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : MIT\n        \n            Repository : https://github.com/Volunteer-X/Server.git\n        \n            Author : Amil Muhammed Hamza\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Channel   (apps/.../message.dto.ts)\n                        \n                        \n                            CreateMessage   (apps/.../message.dto.ts)\n                        \n                        \n                            DateTime   (apps/.../user.schema.ts)\n                        \n                        \n                            DateTime   (apps/.../ping.schema.ts)\n                        \n                        \n                            EmailAddress   (apps/.../user.schema.ts)\n                        \n                        \n                            FirebaseModuleAsyncOptions   (libs/.../firebase.interface.ts)\n                        \n                        \n                            FirebaseModuleOptions   (libs/.../firebase.interface.ts)\n                        \n                        \n                            IPing   (libs/.../types.ts)\n                        \n                        \n                            JsonValue   (libs/.../jwt-payload.interface.ts)\n                        \n                        \n                            Latitude   (apps/.../user.schema.ts)\n                        \n                        \n                            Latitude   (apps/.../ping.schema.ts)\n                        \n                        \n                            Longitude   (apps/.../user.schema.ts)\n                        \n                        \n                            Longitude   (apps/.../ping.schema.ts)\n                        \n                        \n                            Message   (apps/.../message.dto.ts)\n                        \n                        \n                            Name   (apps/.../user.entity.ts)\n                        \n                        \n                            Name   (libs/.../auth.entity.ts)\n                        \n                        \n                            Neo4jConfig   (libs/.../neo4j-config.interface.ts)\n                        \n                        \n                            Neo4jScheme   (libs/.../neo4j-config.interface.ts)\n                        \n                        \n                            Nullable   (apps/.../channel.schema.ts)\n                        \n                        \n                            Nullable   (apps/.../user.schema.ts)\n                        \n                        \n                            Nullable   (apps/.../ping.schema.ts)\n                        \n                        \n                            ObjectID   (apps/.../channel.schema.ts)\n                        \n                        \n                            ObjectID   (apps/.../user.schema.ts)\n                        \n                        \n                            ObjectID   (apps/.../ping.schema.ts)\n                        \n                        \n                            Ping   (apps/.../user.entity.ts)\n                        \n                        \n                            Ping   (libs/.../entities.ts)\n                        \n                        \n                            PingNode   (libs/.../types.ts)\n                        \n                        \n                            PrismaDelegateNames   (libs/.../inject-repository.decorator.ts)\n                        \n                        \n                            PrismaModuleOptions   (libs/.../prisma.provider.ts)\n                        \n                        \n                            TUser   (libs/.../entities.ts)\n                        \n                        \n                            URL   (apps/.../ping.schema.ts)\n                        \n                        \n                            UserCreateInput   (apps/.../user.entity.ts)\n                        \n                        \n                            UserNode   (libs/.../types.ts)\n                        \n                        \n                            UserPayload   (apps/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/forum/src/common/dto/message.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Channel\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CreateMessage\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/users/src/user/graphql/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EmailAddress\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Latitude\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Longitude\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ObjectID\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserPayload\n                \n            \n            \n                \n                        User | NotFoundError | UnauthorizedError | UnknownError | InternalServerError\n\n                \n            \n        \n    \n    apps/ping/src/ping/graphql/ping.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Latitude\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Longitude\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ObjectID\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    URL\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/firebase/src/firebase.interface.ts\n    \n    \n        \n            \n                \n                    \n                    FirebaseModuleAsyncOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FirebaseModuleOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/common/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    IPing\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PingNode\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserNode\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/auth/src/jwt/jwt-payload.interface.ts\n    \n    \n        \n            \n                \n                    \n                    JsonValue\n                \n            \n            \n                \n                        string | number | boolean\n\n                \n            \n        \n    \n    apps/users/entity/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    Name\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ping\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserCreateInput\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/auth/src/entity/auth.entity.ts\n    \n    \n        \n            \n                \n                    \n                    Name\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/neo4j-common/src/neo4j-config.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Neo4jConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Neo4jScheme\n                \n            \n            \n                \n                        \"neo4j\" | \"neo4j+s\" | \"neo4j+ssc\" | \"bolt\" | \"bolt+s\" | \"bolt+ssc\"\n\n                \n            \n        \n    \n    apps/forum/src/channel/graphql/channel.schema.ts\n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ObjectID\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/common/src/utils/entities.ts\n    \n    \n        \n            \n                \n                    \n                    Ping\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TUser\n                \n            \n            \n                \n                        User | UnauthorizedError | NotFoundError | UnknownError | InternalServerError\n\n                \n            \n        \n    \n    libs/prisma/src/inject-repository.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    PrismaDelegateNames\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/prisma/src/prisma.provider.ts\n    \n    \n        \n            \n                \n                    \n                    PrismaModuleOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVITY_SERVICE   (libs/.../services.ts)\n                        \n                        \n                            BROADCAST_SERVICE   (libs/.../services.ts)\n                        \n                        \n                            createDriver   (libs/.../neo4j.util.ts)\n                        \n                        \n                            createInstances   (libs/.../getFirebaseAdmin.ts)\n                        \n                        \n                            CurrentUser   (libs/.../user.decorator.ts)\n                        \n                        \n                            decodeFromBase64   (libs/.../helpers.ts)\n                        \n                        \n                            defaultPrismaOptions   (libs/.../prisma.provider.ts)\n                        \n                        \n                            definitionFactory   (libs/.../channel.ts)\n                        \n                        \n                            definitionFactory   (libs/.../ping.ts)\n                        \n                        \n                            definitionFactory   (libs/.../user.ts)\n                        \n                        \n                            encodeToBase64   (libs/.../helpers.ts)\n                        \n                        \n                            getFirebaseAdmin   (libs/.../getFirebaseAdmin.ts)\n                        \n                        \n                            NEO4J_CONFIG   (libs/.../neo4j.constants.ts)\n                        \n                        \n                            NEO4J_DRIVER   (libs/.../neo4j.constants.ts)\n                        \n                        \n                            NEO4J_SERVICE   (libs/.../services.ts)\n                        \n                        \n                            Pattern   (libs/.../pattern.ts)\n                        \n                        \n                            PRIMSA_OPTIONS   (libs/.../prisma.provider.ts)\n                        \n                        \n                            prismaRepositories   (libs/.../inject-repository.decorator.ts)\n                        \n                        \n                            toNative   (libs/.../neo4j-type.interceptor.ts)\n                        \n                        \n                            USER_SERVICE   (libs/.../services.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACTIVITY_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ACTIVITY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BROADCAST_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BROADCAST'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NEO4J_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NEO4J'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER'\n                    \n                \n\n\n        \n    \n\n    libs/neo4j-common/src/neo4j.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDriver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (config: Neo4jConfig) => {\n  try {\n    const driver: Driver = neo4j.driver(\n      `${config.scheme}://${config.host}:${config.port}`,\n      neo4j.auth.basic(config.username, config.password),\n    );\n\n    const serverInfo = await driver.getServerInfo();\n    console.log(\n      `Connected to ${serverInfo.address} as ${serverInfo.protocolVersion}`,\n    );\n\n    return driver;\n  } catch (e) {\n    console.log(`Connection error\\n${e}\\nCause: ${e.cause}`);\n  }\n\n  //   try {\n  //     await driver.verifyAuthentication();\n  //   }catch (e) {\n  //     console.error(e);\n  //   }\n}\n                    \n                \n\n\n        \n    \n\n    libs/firebase/src/util/getFirebaseAdmin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createInstances\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: admin.app.App): FirebaseAdmin => ({\n  auth: app.auth(),\n  messaging: app.messaging(),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirebaseAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  options?: FirebaseModuleOptions,\n): FirebaseAdmin => {\n  if (!options || Object.values(options).filter((v) => !!v).length === 0) {\n    return createInstances(admin.initializeApp());\n  }\n\n  const { googleApplicationCredential: serviceAccountPath, ...appOptions } =\n    options;\n\n  return createInstances(\n    admin.initializeApp({\n      credential: serviceAccountPath\n        ? admin.credential.cert(serviceAccountPath)\n        : undefined,\n      ...appOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/decorator/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, context: ExecutionContext) => {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    libs/common/src/utils/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decodeFromBase64\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (base64?: string) => {\n  if (!base64) {\n    return null;\n  }\n  return Buffer.from(base64, 'base64').toString('ascii');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeToBase64\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (id?: string) => {\n  if (!id) {\n    return null;\n  }\n\n  return Buffer.from(id).toString('base64');\n}\n                    \n                \n\n\n        \n    \n\n    libs/prisma/src/prisma.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPrismaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  logQueries: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMSA_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('PRIMSA_OPTIONS')\n                    \n                \n\n\n        \n    \n\n    libs/generate-typings/channel.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        definitionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLFederationDefinitionsFactory()\n                    \n                \n\n\n        \n    \n\n    libs/generate-typings/ping.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        definitionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLFederationDefinitionsFactory()\n                    \n                \n\n\n        \n    \n\n    libs/generate-typings/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        definitionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GraphQLFederationDefinitionsFactory()\n                    \n                \n\n\n        \n    \n\n    libs/neo4j-common/src/neo4j.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEO4J_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NEO4J_CONFIG'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NEO4J_DRIVER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NEO4J_DRIVER'\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/pattern.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Pattern\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  userCreated: 'userCreated',\n  pingCreated: 'pingCreated',\n  getPingsWithinRadius: 'getPingsWithinRadius',\n  participantAdded: 'pingParticipantAdded',\n  participantRemoved: 'pingParticipantRemoved',\n  userDevices: 'userDevices',\n  addMembership: 'addMembership',\n  removeMembership: 'removeMembership',\n} as const\n                    \n                \n\n\n        \n    \n\n    libs/prisma/src/inject-repository.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prismaRepositories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set()\n                    \n                \n\n\n        \n    \n\n    libs/neo4j-common/src/neo4j-type.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toNative\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  value: any,\n  showLabelsOrType?: boolean,\n  showIdentity?: boolean,\n) => {\n  if (value === null || value === undefined) return undefined;\n  else if (value instanceof Result || value.records) {\n    return value.records?.map((row) =>\n      Object.fromEntries(row.keys.map((key) => [key, toNative(row.get(key))])),\n    );\n  } else if (Array.isArray(value)) return value.map((v) => toNative(v));\n  else if (isNode(value))\n    return toNative({\n      _id: showIdentity ? toNative(value.identity) : null,\n      _labels: showLabelsOrType ? toNative(value.labels) : null,\n      ...toNative(value.properties),\n    });\n  else if (isRelationship(value))\n    return toNative({\n      _id: toNative(value.identity),\n      _type: showLabelsOrType ? toNative(value.type) : null,\n      ...toNative(value.properties),\n    });\n  else if (isInt(value)) return value.toNumber();\n  else if (\n    isDuration(value) ||\n    isLocalTime(value) ||\n    isTime(value) ||\n    isDate(value) ||\n    isDateTime(value) ||\n    isLocalDateTime(value)\n  ) {\n    return value.toString();\n  }\n  if (isPoint(value)) {\n    switch (value.srid.toNumber()) {\n      case 4326:\n        return { longitude: value.y, latitude: value.x }; // WGS 84 2D\n      case 4979:\n        return { longitude: value.y, latitude: value.x, height: value.z }; // WGS 84 3D\n      default:\n        toNative({ x: value.x, y: value.y, z: value.z }); // Cartesian\n    }\n  } else if (typeof value === 'object') {\n    return Object.fromEntries(\n      Object.keys(value).map((key) => [\n        key,\n        toNative(value[key], showLabelsOrType, showIdentity),\n      ]),\n    );\n  }\n  return value;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
